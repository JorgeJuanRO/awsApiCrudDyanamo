"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * What kind of addresses to allocate to the load balancer
 */
var IpAddressType;
(function (IpAddressType) {
    /**
     * Allocate IPv4 addresses
     */
    IpAddressType["Ipv4"] = "ipv4";
    /**
     * Allocate both IPv4 and IPv6 addresses
     */
    IpAddressType["DualStack"] = "dualstack";
})(IpAddressType = exports.IpAddressType || (exports.IpAddressType = {}));
/**
 * Backend protocol for health checks
 */
var Protocol;
(function (Protocol) {
    /**
     * HTTP
     */
    Protocol["Http"] = "HTTP";
    /**
     * HTTPS
     */
    Protocol["Https"] = "HTTPS";
    /**
     * TCP
     */
    Protocol["Tcp"] = "TCP";
    /**
     * TLS
     */
    Protocol["Tls"] = "TLS";
})(Protocol = exports.Protocol || (exports.Protocol = {}));
/**
 * Load balancing protocol for application load balancers
 */
var ApplicationProtocol;
(function (ApplicationProtocol) {
    /**
     * HTTP
     */
    ApplicationProtocol["Http"] = "HTTP";
    /**
     * HTTPS
     */
    ApplicationProtocol["Https"] = "HTTPS";
})(ApplicationProtocol = exports.ApplicationProtocol || (exports.ApplicationProtocol = {}));
/**
 * Elastic Load Balancing provides the following security policies for Application Load Balancers
 *
 * We recommend the Recommended policy for general use. You can
 * use the ForwardSecrecy policy if you require Forward Secrecy
 * (FS).
 *
 * You can use one of the TLS policies to meet compliance and security
 * standards that require disabling certain TLS protocol versions, or to
 * support legacy clients that require deprecated ciphers.
 *
 * @see https://docs.aws.amazon.com/elasticloadbalancing/latest/application/create-https-listener.html
 */
var SslPolicy;
(function (SslPolicy) {
    /**
     * The recommended security policy
     */
    SslPolicy["Recommended"] = "ELBSecurityPolicy-2016-08";
    /**
     * Forward secrecy ciphers only
     */
    SslPolicy["ForwardSecrecy"] = "ELBSecurityPolicy-FS-2018-06";
    /**
     * TLS1.2 only and no SHA ciphers
     */
    SslPolicy["TLS12"] = "ELBSecurityPolicy-TLS-1-2-2017-01";
    /**
     * TLS1.2 only with all ciphers
     */
    SslPolicy["TLS12Ext"] = "ELBSecurityPolicy-TLS-1-2-Ext-2018-06";
    /**
     * TLS1.1 and higher with all ciphers
     */
    SslPolicy["TLS11"] = "ELBSecurityPolicy-TLS-1-1-2017-01";
    /**
     * Support for DES-CBC3-SHA
     *
     * Do not use this security policy unless you must support a legacy client
     * that requires the DES-CBC3-SHA cipher, which is a weak cipher.
     */
    SslPolicy["Legacy"] = "ELBSecurityPolicy-TLS-1-0-2015-04";
})(SslPolicy = exports.SslPolicy || (exports.SslPolicy = {}));
/**
 * How to interpret the load balancing target identifiers
 */
var TargetType;
(function (TargetType) {
    /**
     * Targets identified by instance ID
     */
    TargetType["Instance"] = "instance";
    /**
     * Targets identified by IP address
     */
    TargetType["Ip"] = "ip";
})(TargetType = exports.TargetType || (exports.TargetType = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW51bXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJlbnVtcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBOztHQUVHO0FBQ0gsSUFBWSxhQVVYO0FBVkQsV0FBWSxhQUFhO0lBQ3ZCOztPQUVHO0lBQ0gsOEJBQWEsQ0FBQTtJQUViOztPQUVHO0lBQ0gsd0NBQXVCLENBQUE7QUFDekIsQ0FBQyxFQVZXLGFBQWEsR0FBYixxQkFBYSxLQUFiLHFCQUFhLFFBVXhCO0FBRUQ7O0dBRUc7QUFDSCxJQUFZLFFBb0JYO0FBcEJELFdBQVksUUFBUTtJQUNsQjs7T0FFRztJQUNILHlCQUFhLENBQUE7SUFFYjs7T0FFRztJQUNILDJCQUFlLENBQUE7SUFFZjs7T0FFRztJQUNILHVCQUFXLENBQUE7SUFFWDs7T0FFRztJQUNILHVCQUFXLENBQUE7QUFDYixDQUFDLEVBcEJXLFFBQVEsR0FBUixnQkFBUSxLQUFSLGdCQUFRLFFBb0JuQjtBQUVEOztHQUVHO0FBQ0gsSUFBWSxtQkFVWDtBQVZELFdBQVksbUJBQW1CO0lBQzdCOztPQUVHO0lBQ0gsb0NBQWEsQ0FBQTtJQUViOztPQUVHO0lBQ0gsc0NBQWUsQ0FBQTtBQUNqQixDQUFDLEVBVlcsbUJBQW1CLEdBQW5CLDJCQUFtQixLQUFuQiwyQkFBbUIsUUFVOUI7QUFFRDs7Ozs7Ozs7Ozs7O0dBWUc7QUFDSCxJQUFZLFNBaUNYO0FBakNELFdBQVksU0FBUztJQUNuQjs7T0FFRztJQUNILHNEQUF5QyxDQUFBO0lBRXpDOztPQUVHO0lBQ0gsNERBQStDLENBQUE7SUFFL0M7O09BRUc7SUFDSCx3REFBMkMsQ0FBQTtJQUUzQzs7T0FFRztJQUNILCtEQUFrRCxDQUFBO0lBRWxEOztPQUVHO0lBQ0gsd0RBQTJDLENBQUE7SUFFM0M7Ozs7O09BS0c7SUFDSCx5REFBNEMsQ0FBQTtBQUM5QyxDQUFDLEVBakNXLFNBQVMsR0FBVCxpQkFBUyxLQUFULGlCQUFTLFFBaUNwQjtBQUVEOztHQUVHO0FBQ0gsSUFBWSxVQVVYO0FBVkQsV0FBWSxVQUFVO0lBQ3BCOztPQUVHO0lBQ0gsbUNBQXFCLENBQUE7SUFFckI7O09BRUc7SUFDSCx1QkFBUyxDQUFBO0FBQ1gsQ0FBQyxFQVZXLFVBQVUsR0FBVixrQkFBVSxLQUFWLGtCQUFVLFFBVXJCIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBXaGF0IGtpbmQgb2YgYWRkcmVzc2VzIHRvIGFsbG9jYXRlIHRvIHRoZSBsb2FkIGJhbGFuY2VyXG4gKi9cbmV4cG9ydCBlbnVtIElwQWRkcmVzc1R5cGUge1xuICAvKipcbiAgICogQWxsb2NhdGUgSVB2NCBhZGRyZXNzZXNcbiAgICovXG4gIElwdjQgPSAnaXB2NCcsXG5cbiAgLyoqXG4gICAqIEFsbG9jYXRlIGJvdGggSVB2NCBhbmQgSVB2NiBhZGRyZXNzZXNcbiAgICovXG4gIER1YWxTdGFjayA9ICdkdWFsc3RhY2snLFxufVxuXG4vKipcbiAqIEJhY2tlbmQgcHJvdG9jb2wgZm9yIGhlYWx0aCBjaGVja3NcbiAqL1xuZXhwb3J0IGVudW0gUHJvdG9jb2wge1xuICAvKipcbiAgICogSFRUUFxuICAgKi9cbiAgSHR0cCA9ICdIVFRQJyxcblxuICAvKipcbiAgICogSFRUUFNcbiAgICovXG4gIEh0dHBzID0gJ0hUVFBTJyxcblxuICAvKipcbiAgICogVENQXG4gICAqL1xuICBUY3AgPSAnVENQJyxcblxuICAvKipcbiAgICogVExTXG4gICAqL1xuICBUbHMgPSAnVExTJ1xufVxuXG4vKipcbiAqIExvYWQgYmFsYW5jaW5nIHByb3RvY29sIGZvciBhcHBsaWNhdGlvbiBsb2FkIGJhbGFuY2Vyc1xuICovXG5leHBvcnQgZW51bSBBcHBsaWNhdGlvblByb3RvY29sIHtcbiAgLyoqXG4gICAqIEhUVFBcbiAgICovXG4gIEh0dHAgPSAnSFRUUCcsXG5cbiAgLyoqXG4gICAqIEhUVFBTXG4gICAqL1xuICBIdHRwcyA9ICdIVFRQUydcbn1cblxuLyoqXG4gKiBFbGFzdGljIExvYWQgQmFsYW5jaW5nIHByb3ZpZGVzIHRoZSBmb2xsb3dpbmcgc2VjdXJpdHkgcG9saWNpZXMgZm9yIEFwcGxpY2F0aW9uIExvYWQgQmFsYW5jZXJzXG4gKlxuICogV2UgcmVjb21tZW5kIHRoZSBSZWNvbW1lbmRlZCBwb2xpY3kgZm9yIGdlbmVyYWwgdXNlLiBZb3UgY2FuXG4gKiB1c2UgdGhlIEZvcndhcmRTZWNyZWN5IHBvbGljeSBpZiB5b3UgcmVxdWlyZSBGb3J3YXJkIFNlY3JlY3lcbiAqIChGUykuXG4gKlxuICogWW91IGNhbiB1c2Ugb25lIG9mIHRoZSBUTFMgcG9saWNpZXMgdG8gbWVldCBjb21wbGlhbmNlIGFuZCBzZWN1cml0eVxuICogc3RhbmRhcmRzIHRoYXQgcmVxdWlyZSBkaXNhYmxpbmcgY2VydGFpbiBUTFMgcHJvdG9jb2wgdmVyc2lvbnMsIG9yIHRvXG4gKiBzdXBwb3J0IGxlZ2FjeSBjbGllbnRzIHRoYXQgcmVxdWlyZSBkZXByZWNhdGVkIGNpcGhlcnMuXG4gKlxuICogQHNlZSBodHRwczovL2RvY3MuYXdzLmFtYXpvbi5jb20vZWxhc3RpY2xvYWRiYWxhbmNpbmcvbGF0ZXN0L2FwcGxpY2F0aW9uL2NyZWF0ZS1odHRwcy1saXN0ZW5lci5odG1sXG4gKi9cbmV4cG9ydCBlbnVtIFNzbFBvbGljeSB7XG4gIC8qKlxuICAgKiBUaGUgcmVjb21tZW5kZWQgc2VjdXJpdHkgcG9saWN5XG4gICAqL1xuICBSZWNvbW1lbmRlZCA9ICdFTEJTZWN1cml0eVBvbGljeS0yMDE2LTA4JyxcblxuICAvKipcbiAgICogRm9yd2FyZCBzZWNyZWN5IGNpcGhlcnMgb25seVxuICAgKi9cbiAgRm9yd2FyZFNlY3JlY3kgPSAnRUxCU2VjdXJpdHlQb2xpY3ktRlMtMjAxOC0wNicsXG5cbiAgLyoqXG4gICAqIFRMUzEuMiBvbmx5IGFuZCBubyBTSEEgY2lwaGVyc1xuICAgKi9cbiAgVExTMTIgPSAnRUxCU2VjdXJpdHlQb2xpY3ktVExTLTEtMi0yMDE3LTAxJyxcblxuICAvKipcbiAgICogVExTMS4yIG9ubHkgd2l0aCBhbGwgY2lwaGVyc1xuICAgKi9cbiAgVExTMTJFeHQgPSAnRUxCU2VjdXJpdHlQb2xpY3ktVExTLTEtMi1FeHQtMjAxOC0wNicsXG5cbiAgLyoqXG4gICAqIFRMUzEuMSBhbmQgaGlnaGVyIHdpdGggYWxsIGNpcGhlcnNcbiAgICovXG4gIFRMUzExID0gJ0VMQlNlY3VyaXR5UG9saWN5LVRMUy0xLTEtMjAxNy0wMScsXG5cbiAgLyoqXG4gICAqIFN1cHBvcnQgZm9yIERFUy1DQkMzLVNIQVxuICAgKlxuICAgKiBEbyBub3QgdXNlIHRoaXMgc2VjdXJpdHkgcG9saWN5IHVubGVzcyB5b3UgbXVzdCBzdXBwb3J0IGEgbGVnYWN5IGNsaWVudFxuICAgKiB0aGF0IHJlcXVpcmVzIHRoZSBERVMtQ0JDMy1TSEEgY2lwaGVyLCB3aGljaCBpcyBhIHdlYWsgY2lwaGVyLlxuICAgKi9cbiAgTGVnYWN5ID0gJ0VMQlNlY3VyaXR5UG9saWN5LVRMUy0xLTAtMjAxNS0wNCcsXG59XG5cbi8qKlxuICogSG93IHRvIGludGVycHJldCB0aGUgbG9hZCBiYWxhbmNpbmcgdGFyZ2V0IGlkZW50aWZpZXJzXG4gKi9cbmV4cG9ydCBlbnVtIFRhcmdldFR5cGUge1xuICAvKipcbiAgICogVGFyZ2V0cyBpZGVudGlmaWVkIGJ5IGluc3RhbmNlIElEXG4gICAqL1xuICBJbnN0YW5jZSA9ICdpbnN0YW5jZScsXG5cbiAgLyoqXG4gICAqIFRhcmdldHMgaWRlbnRpZmllZCBieSBJUCBhZGRyZXNzXG4gICAqL1xuICBJcCA9ICdpcCcsXG59XG4iXX0=