{
  "author": {
    "name": "Amazon Web Services",
    "organization": true,
    "roles": [
      "author"
    ],
    "url": "https://aws.amazon.com"
  },
  "dependencies": {
    "@aws-cdk/aws-iam": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.IAM",
          "packageId": "Amazon.CDK.AWS.IAM",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "iam",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.iam"
        },
        "js": {
          "npm": "@aws-cdk/aws-iam"
        },
        "python": {
          "distName": "aws-cdk.aws-iam",
          "module": "aws_cdk.aws_iam"
        }
      },
      "version": "0.35.0"
    },
    "@aws-cdk/cdk": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "cdk",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk"
        },
        "js": {
          "npm": "@aws-cdk/cdk"
        },
        "python": {
          "distName": "aws-cdk.cdk",
          "module": "aws_cdk.cdk"
        }
      },
      "version": "0.35.0"
    }
  },
  "dependencyClosure": {
    "@aws-cdk/aws-iam": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.IAM",
          "packageId": "Amazon.CDK.AWS.IAM",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "iam",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.iam"
        },
        "js": {
          "npm": "@aws-cdk/aws-iam"
        },
        "python": {
          "distName": "aws-cdk.aws-iam",
          "module": "aws_cdk.aws_iam"
        }
      },
      "version": "0.35.0"
    },
    "@aws-cdk/cdk": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "cdk",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk"
        },
        "js": {
          "npm": "@aws-cdk/cdk"
        },
        "python": {
          "distName": "aws-cdk.cdk",
          "module": "aws_cdk.cdk"
        }
      },
      "version": "0.35.0"
    },
    "@aws-cdk/cx-api": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.CXAPI",
          "packageId": "Amazon.CDK.CXAPI",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cx-api",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cxapi"
        },
        "js": {
          "npm": "@aws-cdk/cx-api"
        },
        "python": {
          "distName": "aws-cdk.cx-api",
          "module": "aws_cdk.cx_api"
        }
      },
      "version": "0.35.0"
    },
    "@aws-cdk/region-info": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.RegionInfo",
          "packageId": "Amazon.CDK.RegionInfo",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "cdk-region-info",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.regioninfo"
        },
        "js": {
          "npm": "@aws-cdk/region-info"
        },
        "python": {
          "distName": "aws-cdk.region-info",
          "module": "aws_cdk.region_info"
        }
      },
      "version": "0.35.0"
    }
  },
  "description": "CDK Constructs for AWS CloudWatch",
  "docs": {
    "stability": "experimental"
  },
  "homepage": "https://github.com/awslabs/aws-cdk",
  "jsiiVersion": "0.11.3 (build 464b8c6)",
  "license": "Apache-2.0",
  "metadata": {
    "awsdocs:title": "Amazon CloudWatch"
  },
  "name": "@aws-cdk/aws-cloudwatch",
  "readme": {
    "markdown": "## Amazon CloudWatch Construct Library\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Stability: Experimental](https://img.shields.io/badge/stability-Experimental-important.svg?style=for-the-badge)\n\n> **This is a _developer preview_ (public beta) module. Releases might lack important features and might have\n> future breaking changes.**\n>\n> This API is still under active development and subject to non-backward\n> compatible changes or removal in any future version. Use of the API is not recommended in production\n> environments. Experimental APIs are not subject to the Semantic Versioning model.\n\n---\n<!--END STABILITY BANNER-->\n\nMetric objects represent a metric that is emitted by AWS services or your own\napplication, such as `CPUUsage`, `FailureCount` or `Bandwidth`.\n\nMetric objects can be constructed directly or are exposed by resources as\nattributes. Resources that expose metrics will have functions that look\nlike `metricXxx()` which will return a Metric object, initialized with defaults\nthat make sense.\n\nFor example, `lambda.Function` objects have the `fn.metricErrors()` method, which\nrepresents the amount of errors reported by that Lambda function:\n\n```ts\nconst errors = fn.metricErrors();\n```\n\n### Aggregation\n\nTo graph or alarm on metrics you must aggregate them first, using a function\nlike `Average` or a percentile function like `P99`. By default, most Metric objects\nreturned by CDK libraries will be configured as `Average` over `300 seconds` (5 minutes).\nThe exception is if the metric represents a count of discrete events, such as\nfailures. In that case, the Metric object will be configured as `Sum` over `300\nseconds`, i.e. it represents the number of times that event occurred over the\ntime period.\n\nIf you want to change the default aggregation of the Metric object (for example,\nthe function or the period), you can do so by passing additional parameters\nto the metric function call:\n\n```ts\nconst minuteErrorRate = fn.metricErrors({\n    statistic: 'avg',\n    periodSec: 60,\n    label: 'Lambda failure rate'\n});\n```\n\nThis function also allows changing the metric label or color (which will be\nuseful when embedding them in graphs, see below).\n\n> Rates versus Sums\n>\n> The reason for using `Sum` to count discrete events is that *some* events are\n> emitted as either `0` or `1` (for example `Errors` for a Lambda) and some are\n> only emitted as `1` (for example `NumberOfMessagesPublished` for an SNS\n> topic).\n>\n> In case `0`-metrics are emitted, it makes sense to take the `Average` of this\n> metric: the result will be the fraction of errors over all executions.\n>\n> If `0`-metrics are not emitted, the `Average` will always be equal to `1`,\n> and not be very useful.\n>\n> In order to simplify the mental model of `Metric` objects, we default to\n> aggregating using `Sum`, which will be the same for both metrics types. If you\n> happen to know the Metric you want to alarm on makes sense as a rate\n> (`Average`) you can always choose to change the statistic.\n\n## Alarms\n\nAlarms can be created on metrics in one of two ways. Either create an `Alarm`\nobject, passing the `Metric` object to set the alarm on:\n\n\n```ts\nnew Alarm(this, 'Alarm', {\n    metric: fn.metricErrors(),\n    threshold: 100,\n    evaluationPeriods: 2,\n});\n```\n\nAlternatively, you can call `metric.newAlarm()`:\n\n```ts\nfn.metricErrors().newAlarm(this, 'Alarm', {\n    threshold: 100,\n    evaluationPeriods: 2,\n});\n```\n\nThe most important properties to set while creating an Alarms are:\n\n- `threshold`: the value to compare the metric against.\n- `comparisonOperator`: the comparison operation to use, defaults to `metric >= threshold`.\n- `evaluationPeriods`: how many consecutive periods the metric has to be\n  breaching the the threshold for the alarm to trigger.\n\n## Dashboards\n\nDashboards are set of Widgets stored server-side which can be accessed quickly\nfrom the AWS console. Available widgets are graphs of a metric over time, the\ncurrent value of a metric, or a static piece of Markdown which explains what the\ngraphs mean.\n\nThe following widgets are available:\n\n- `GraphWidget` -- shows any number of metrics on both the left and right\n  vertical axes.\n- `AlarmWidget` -- shows the graph and alarm line for a single alarm.\n- `SingleValueWidget` -- shows the current value of a set of metrics.\n- `TextWidget` -- shows some static Markdown.\n\n### Graph widget\n\nA graph widget can display any number of metrics on either the `left` or\n`right` vertical axis:\n\n```ts\ndashboard.add(new GraphWidget({\n    title: \"Executions vs error rate\",\n\n    left: [executionCountMetric],\n\n    right: [errorCountMetric.with({\n        statistic: \"average\",\n        label: \"Error rate\",\n        color: \"00FF00\"\n    })]\n}));\n```\n\n### Alarm widget\n\nAn alarm widget shows the graph and the alarm line of a single alarm:\n\n```ts\ndashboard.add(new AlarmWidget({\n    title: \"Errors\",\n    alarm: errorAlarm,\n}));\n```\n\n### Single value widget\n\nA single-value widget shows the latest value of a set of metrics (as opposed\nto a graph of the value over time):\n\n```ts\ndashboard.add(new SingleValueWidget({\n    metrics: [visitorCount, purchaseCount],\n}));\n```\n\n### Text widget\n\nA text widget shows an arbitrary piece of MarkDown. Use this to add explanations\nto your dashboard:\n\n```ts\ndashboard.add(new TextWidget({\n    markdown: '# Key Performance Indicators'\n}));\n```\n\n### Dashboard Layout\n\nThe widgets on a dashboard are visually laid out in a grid that is 24 columns\nwide. Normally you specify X and Y coordinates for the widgets on a Dashboard,\nbut because this is inconvenient to do manually, the library contains a simple\nlayout system to help you lay out your dashboards the way you want them to.\n\nWidgets have a `width` and `height` property, and they will be automatically\nlaid out either horizontally or vertically stacked to fill out the available\nspace.\n\nWidgets are added to a Dashboard by calling `add(widget1, widget2, ...)`.\nWidgets given in the same call will be laid out horizontally. Widgets given\nin different calls will be laid out vertically. To make more complex layouts,\nyou can use the following widgets to pack widgets together in different ways:\n\n- `Column`: stack two or more widgets vertically.\n- `Row`: lay out two or more widgets horizontally.\n- `Spacer`: take up empty space\n"
  },
  "repository": {
    "directory": "packages/@aws-cdk/aws-cloudwatch",
    "type": "git",
    "url": "https://github.com/awslabs/aws-cdk.git"
  },
  "schema": "jsii/0.10.0",
  "targets": {
    "dotnet": {
      "assemblyOriginatorKeyFile": "../../key.snk",
      "namespace": "Amazon.CDK.AWS.CloudWatch",
      "packageId": "Amazon.CDK.AWS.CloudWatch",
      "signAssembly": true
    },
    "java": {
      "maven": {
        "artifactId": "cloudwatch",
        "groupId": "software.amazon.awscdk"
      },
      "package": "software.amazon.awscdk.services.cloudwatch"
    },
    "js": {
      "npm": "@aws-cdk/aws-cloudwatch"
    },
    "python": {
      "distName": "aws-cdk.aws-cloudwatch",
      "module": "aws_cdk.aws_cloudwatch"
    }
  },
  "types": {
    "@aws-cdk/aws-cloudwatch.Alarm": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "base": "@aws-cdk/cdk.Resource",
      "docs": {
        "stability": "experimental",
        "summary": "An alarm on a CloudWatch metric."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.Alarm",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.AlarmProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-cloudwatch.IAlarm"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/alarm.ts",
        "line": 79
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/alarm.ts",
            "line": 81
          },
          "name": "fromAlarmArn",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/cdk.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "alarmArn",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.IAlarm"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "Typically the ARN of an SNS topic or ARN of an AutoScaling policy.",
            "stability": "experimental",
            "summary": "Trigger this action if the alarm fires."
          },
          "locationInModule": {
            "filename": "lib/alarm.ts",
            "line": 167
          },
          "name": "addAlarmAction",
          "parameters": [
            {
              "name": "actions",
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.IAlarmAction"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "remarks": "Typically the ARN of an SNS topic or ARN of an AutoScaling policy.",
            "stability": "experimental",
            "summary": "Trigger this action if there is insufficient data to evaluate the alarm."
          },
          "locationInModule": {
            "filename": "lib/alarm.ts",
            "line": 180
          },
          "name": "addInsufficientDataAction",
          "parameters": [
            {
              "name": "actions",
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.IAlarmAction"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "remarks": "Typically the ARN of an SNS topic or ARN of an AutoScaling policy.",
            "stability": "experimental",
            "summary": "Trigger this action if the alarm returns from breaching state into ok state."
          },
          "locationInModule": {
            "filename": "lib/alarm.ts",
            "line": 193
          },
          "name": "addOkAction",
          "parameters": [
            {
              "name": "actions",
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.IAlarmAction"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "remarks": "This is useful if you want to represent an Alarm in a non-AlarmWidget.\nAn `AlarmWidget` can directly show an alarm, but it can only show a\nsingle alarm and no other metrics. Instead, you can convert the alarm to\na HorizontalAnnotation and add it as an annotation to another graph.\n\nThis might be useful if:\n\n- You want to show multiple alarms inside a single graph, for example if\n   you have both a \"small margin/long period\" alarm as well as a\n   \"large margin/short period\" alarm.\n\n- You want to show an Alarm line in a graph with multiple metrics in it.",
            "stability": "experimental",
            "summary": "Turn this alarm into a horizontal annotation."
          },
          "locationInModule": {
            "filename": "lib/alarm.ts",
            "line": 217
          },
          "name": "toAnnotation",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.HorizontalAnnotation"
            }
          }
        }
      ],
      "name": "Alarm",
      "properties": [
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "ARN of this alarm."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alarm.ts",
            "line": 94
          },
          "name": "alarmArn",
          "overrides": "@aws-cdk/aws-cloudwatch.IAlarm",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "Name of this alarm."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alarm.ts",
            "line": 101
          },
          "name": "alarmName",
          "overrides": "@aws-cdk/aws-cloudwatch.IAlarm",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The metric object this alarm was based on."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alarm.ts",
            "line": 106
          },
          "name": "metric",
          "type": {
            "fqn": "@aws-cdk/aws-cloudwatch.IMetric"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.AlarmActionConfig": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties for an alarm action."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.AlarmActionConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/alarm-action.ts",
        "line": 14
      },
      "name": "AlarmActionConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Return the ARN that should be used for a CloudWatch Alarm action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alarm-action.ts",
            "line": 18
          },
          "name": "alarmActionArn",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.AlarmProps": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties for Alarms."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.AlarmProps",
      "interfaces": [
        "@aws-cdk/aws-cloudwatch.CreateAlarmOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/alarm.ts",
        "line": 24
      },
      "name": "AlarmProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Metric objects can be obtained from most resources, or you can construct\ncustom Metric objects by instantiating one.",
            "stability": "experimental",
            "summary": "The metric to add the alarm on."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alarm.ts",
            "line": 31
          },
          "name": "metric",
          "type": {
            "fqn": "@aws-cdk/aws-cloudwatch.IMetric"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.AlarmWidget": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "base": "@aws-cdk/aws-cloudwatch.ConcreteWidget",
      "docs": {
        "stability": "experimental",
        "summary": "Display the metric associated with an alarm, including the alarm line."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.AlarmWidget",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.AlarmWidgetProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/graph.ts",
        "line": 88
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Return the widget JSON for use in the dashboard."
          },
          "locationInModule": {
            "filename": "lib/graph.ts",
            "line": 96
          },
          "name": "toJson",
          "overrides": "@aws-cdk/aws-cloudwatch.ConcreteWidget",
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "AlarmWidget"
    },
    "@aws-cdk/aws-cloudwatch.AlarmWidgetProps": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties for an AlarmWidget."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.AlarmWidgetProps",
      "interfaces": [
        "@aws-cdk/aws-cloudwatch.MetricWidgetProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/graph.ts",
        "line": 73
      },
      "name": "AlarmWidgetProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The alarm to show."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graph.ts",
            "line": 77
          },
          "name": "alarm",
          "type": {
            "fqn": "@aws-cdk/aws-cloudwatch.Alarm"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Left Y axis."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graph.ts",
            "line": 82
          },
          "name": "leftYAxis",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudwatch.YAxisProps"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.CfnAlarm": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "base": "@aws-cdk/cdk.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::CloudWatch::Alarm"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html",
        "stability": "experimental",
        "summary": "A CloudFormation `AWS::CloudWatch::Alarm`."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.CfnAlarm",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Create a new `AWS::CloudWatch::Alarm`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.CfnAlarmProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cloudwatch.generated.ts",
        "line": 214
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 405
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnAlarm",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 218
          },
          "name": "cfnResourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Arn"
            },
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 223
          },
          "name": "attrArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 381
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-comparisonoperator",
            "stability": "experimental",
            "summary": "`AWS::CloudWatch::Alarm.ComparisonOperator`."
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 229
          },
          "name": "comparisonOperator",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-evaluationperiods",
            "stability": "experimental",
            "summary": "`AWS::CloudWatch::Alarm.EvaluationPeriods`."
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 235
          },
          "name": "evaluationPeriods",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-threshold",
            "stability": "experimental",
            "summary": "`AWS::CloudWatch::Alarm.Threshold`."
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 241
          },
          "name": "threshold",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-actionsenabled",
            "stability": "experimental",
            "summary": "`AWS::CloudWatch::Alarm.ActionsEnabled`."
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 247
          },
          "name": "actionsEnabled",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-alarmactions",
            "stability": "experimental",
            "summary": "`AWS::CloudWatch::Alarm.AlarmActions`."
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 253
          },
          "name": "alarmActions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-alarmdescription",
            "stability": "experimental",
            "summary": "`AWS::CloudWatch::Alarm.AlarmDescription`."
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 259
          },
          "name": "alarmDescription",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-alarmname",
            "stability": "experimental",
            "summary": "`AWS::CloudWatch::Alarm.AlarmName`."
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 265
          },
          "name": "alarmName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarm-datapointstoalarm",
            "stability": "experimental",
            "summary": "`AWS::CloudWatch::Alarm.DatapointsToAlarm`."
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 271
          },
          "name": "datapointsToAlarm",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-dimension",
            "stability": "experimental",
            "summary": "`AWS::CloudWatch::Alarm.Dimensions`."
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 277
          },
          "name": "dimensions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-cloudwatch.CfnAlarm.DimensionProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-evaluatelowsamplecountpercentile",
            "stability": "experimental",
            "summary": "`AWS::CloudWatch::Alarm.EvaluateLowSampleCountPercentile`."
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 283
          },
          "name": "evaluateLowSampleCountPercentile",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-extendedstatistic",
            "stability": "experimental",
            "summary": "`AWS::CloudWatch::Alarm.ExtendedStatistic`."
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 289
          },
          "name": "extendedStatistic",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-insufficientdataactions",
            "stability": "experimental",
            "summary": "`AWS::CloudWatch::Alarm.InsufficientDataActions`."
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 295
          },
          "name": "insufficientDataActions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-metricname",
            "stability": "experimental",
            "summary": "`AWS::CloudWatch::Alarm.MetricName`."
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 301
          },
          "name": "metricName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarm-metrics",
            "stability": "experimental",
            "summary": "`AWS::CloudWatch::Alarm.Metrics`."
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 307
          },
          "name": "metrics",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-cloudwatch.CfnAlarm.MetricDataQueryProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-namespace",
            "stability": "experimental",
            "summary": "`AWS::CloudWatch::Alarm.Namespace`."
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 313
          },
          "name": "namespace",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-okactions",
            "stability": "experimental",
            "summary": "`AWS::CloudWatch::Alarm.OKActions`."
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 319
          },
          "name": "okActions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-period",
            "stability": "experimental",
            "summary": "`AWS::CloudWatch::Alarm.Period`."
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 325
          },
          "name": "period",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-statistic",
            "stability": "experimental",
            "summary": "`AWS::CloudWatch::Alarm.Statistic`."
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 331
          },
          "name": "statistic",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-treatmissingdata",
            "stability": "experimental",
            "summary": "`AWS::CloudWatch::Alarm.TreatMissingData`."
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 337
          },
          "name": "treatMissingData",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-unit",
            "stability": "experimental",
            "summary": "`AWS::CloudWatch::Alarm.Unit`."
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 343
          },
          "name": "unit",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.CfnAlarm.DimensionProperty": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-dimension.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-cloudwatch.CfnAlarm.DimensionProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudwatch.generated.ts",
        "line": 414
      },
      "name": "DimensionProperty",
      "namespace": "CfnAlarm",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-dimension.html#cfn-cloudwatch-alarm-dimension-name",
            "stability": "experimental",
            "summary": "`CfnAlarm.DimensionProperty.Name`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 419
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-dimension.html#cfn-cloudwatch-alarm-dimension-value",
            "stability": "experimental",
            "summary": "`CfnAlarm.DimensionProperty.Value`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 424
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.CfnAlarm.MetricDataQueryProperty": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudwatch-alarm-metricdataquery.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-cloudwatch.CfnAlarm.MetricDataQueryProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudwatch.generated.ts",
        "line": 523
      },
      "name": "MetricDataQueryProperty",
      "namespace": "CfnAlarm",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudwatch-alarm-metricdataquery.html#cfn-cloudwatch-alarm-metricdataquery-id",
            "stability": "experimental",
            "summary": "`CfnAlarm.MetricDataQueryProperty.Id`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 533
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudwatch-alarm-metricdataquery.html#cfn-cloudwatch-alarm-metricdataquery-expression",
            "stability": "experimental",
            "summary": "`CfnAlarm.MetricDataQueryProperty.Expression`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 528
          },
          "name": "expression",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudwatch-alarm-metricdataquery.html#cfn-cloudwatch-alarm-metricdataquery-label",
            "stability": "experimental",
            "summary": "`CfnAlarm.MetricDataQueryProperty.Label`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 538
          },
          "name": "label",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudwatch-alarm-metricdataquery.html#cfn-cloudwatch-alarm-metricdataquery-metricstat",
            "stability": "experimental",
            "summary": "`CfnAlarm.MetricDataQueryProperty.MetricStat`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 543
          },
          "name": "metricStat",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudwatch.CfnAlarm.MetricStatProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudwatch-alarm-metricdataquery.html#cfn-cloudwatch-alarm-metricdataquery-returndata",
            "stability": "experimental",
            "summary": "`CfnAlarm.MetricDataQueryProperty.ReturnData`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 548
          },
          "name": "returnData",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.CfnAlarm.MetricProperty": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudwatch-alarm-metric.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-cloudwatch.CfnAlarm.MetricProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudwatch.generated.ts",
        "line": 466
      },
      "name": "MetricProperty",
      "namespace": "CfnAlarm",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudwatch-alarm-metric.html#cfn-cloudwatch-alarm-metric-dimensions",
            "stability": "experimental",
            "summary": "`CfnAlarm.MetricProperty.Dimensions`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 471
          },
          "name": "dimensions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-cloudwatch.CfnAlarm.DimensionProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudwatch-alarm-metric.html#cfn-cloudwatch-alarm-metric-metricname",
            "stability": "experimental",
            "summary": "`CfnAlarm.MetricProperty.MetricName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 476
          },
          "name": "metricName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudwatch-alarm-metric.html#cfn-cloudwatch-alarm-metric-namespace",
            "stability": "experimental",
            "summary": "`CfnAlarm.MetricProperty.Namespace`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 481
          },
          "name": "namespace",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.CfnAlarm.MetricStatProperty": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudwatch-alarm-metricstat.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-cloudwatch.CfnAlarm.MetricStatProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudwatch.generated.ts",
        "line": 595
      },
      "name": "MetricStatProperty",
      "namespace": "CfnAlarm",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudwatch-alarm-metricstat.html#cfn-cloudwatch-alarm-metricstat-metric",
            "stability": "experimental",
            "summary": "`CfnAlarm.MetricStatProperty.Metric`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 600
          },
          "name": "metric",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudwatch.CfnAlarm.MetricProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudwatch-alarm-metricstat.html#cfn-cloudwatch-alarm-metricstat-period",
            "stability": "experimental",
            "summary": "`CfnAlarm.MetricStatProperty.Period`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 605
          },
          "name": "period",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudwatch-alarm-metricstat.html#cfn-cloudwatch-alarm-metricstat-stat",
            "stability": "experimental",
            "summary": "`CfnAlarm.MetricStatProperty.Stat`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 610
          },
          "name": "stat",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudwatch-alarm-metricstat.html#cfn-cloudwatch-alarm-metricstat-unit",
            "stability": "experimental",
            "summary": "`CfnAlarm.MetricStatProperty.Unit`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 615
          },
          "name": "unit",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.CfnAlarmProps": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html",
        "stability": "experimental",
        "summary": "Properties for defining a `AWS::CloudWatch::Alarm`."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.CfnAlarmProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudwatch.generated.ts",
        "line": 14
      },
      "name": "CfnAlarmProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-comparisonoperator",
            "stability": "experimental",
            "summary": "`AWS::CloudWatch::Alarm.ComparisonOperator`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 20
          },
          "name": "comparisonOperator",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-evaluationperiods",
            "stability": "experimental",
            "summary": "`AWS::CloudWatch::Alarm.EvaluationPeriods`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 26
          },
          "name": "evaluationPeriods",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-threshold",
            "stability": "experimental",
            "summary": "`AWS::CloudWatch::Alarm.Threshold`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 32
          },
          "name": "threshold",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-actionsenabled",
            "stability": "experimental",
            "summary": "`AWS::CloudWatch::Alarm.ActionsEnabled`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 38
          },
          "name": "actionsEnabled",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-alarmactions",
            "stability": "experimental",
            "summary": "`AWS::CloudWatch::Alarm.AlarmActions`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 44
          },
          "name": "alarmActions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-alarmdescription",
            "stability": "experimental",
            "summary": "`AWS::CloudWatch::Alarm.AlarmDescription`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 50
          },
          "name": "alarmDescription",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-alarmname",
            "stability": "experimental",
            "summary": "`AWS::CloudWatch::Alarm.AlarmName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 56
          },
          "name": "alarmName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarm-datapointstoalarm",
            "stability": "experimental",
            "summary": "`AWS::CloudWatch::Alarm.DatapointsToAlarm`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 62
          },
          "name": "datapointsToAlarm",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-dimension",
            "stability": "experimental",
            "summary": "`AWS::CloudWatch::Alarm.Dimensions`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 68
          },
          "name": "dimensions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-cloudwatch.CfnAlarm.DimensionProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-evaluatelowsamplecountpercentile",
            "stability": "experimental",
            "summary": "`AWS::CloudWatch::Alarm.EvaluateLowSampleCountPercentile`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 74
          },
          "name": "evaluateLowSampleCountPercentile",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-extendedstatistic",
            "stability": "experimental",
            "summary": "`AWS::CloudWatch::Alarm.ExtendedStatistic`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 80
          },
          "name": "extendedStatistic",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-insufficientdataactions",
            "stability": "experimental",
            "summary": "`AWS::CloudWatch::Alarm.InsufficientDataActions`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 86
          },
          "name": "insufficientDataActions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-metricname",
            "stability": "experimental",
            "summary": "`AWS::CloudWatch::Alarm.MetricName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 92
          },
          "name": "metricName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarm-metrics",
            "stability": "experimental",
            "summary": "`AWS::CloudWatch::Alarm.Metrics`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 98
          },
          "name": "metrics",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-cloudwatch.CfnAlarm.MetricDataQueryProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-namespace",
            "stability": "experimental",
            "summary": "`AWS::CloudWatch::Alarm.Namespace`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 104
          },
          "name": "namespace",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-okactions",
            "stability": "experimental",
            "summary": "`AWS::CloudWatch::Alarm.OKActions`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 110
          },
          "name": "okActions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-period",
            "stability": "experimental",
            "summary": "`AWS::CloudWatch::Alarm.Period`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 116
          },
          "name": "period",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-statistic",
            "stability": "experimental",
            "summary": "`AWS::CloudWatch::Alarm.Statistic`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 122
          },
          "name": "statistic",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-treatmissingdata",
            "stability": "experimental",
            "summary": "`AWS::CloudWatch::Alarm.TreatMissingData`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 128
          },
          "name": "treatMissingData",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-unit",
            "stability": "experimental",
            "summary": "`AWS::CloudWatch::Alarm.Unit`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 134
          },
          "name": "unit",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.CfnDashboard": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "base": "@aws-cdk/cdk.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::CloudWatch::Dashboard"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-dashboard.html",
        "stability": "experimental",
        "summary": "A CloudFormation `AWS::CloudWatch::Dashboard`."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.CfnDashboard",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Create a new `AWS::CloudWatch::Dashboard`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.CfnDashboardProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cloudwatch.generated.ts",
        "line": 716
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 755
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnDashboard",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 720
          },
          "name": "cfnResourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 749
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-dashboard.html#cfn-cloudwatch-dashboard-dashboardbody",
            "stability": "experimental",
            "summary": "`AWS::CloudWatch::Dashboard.DashboardBody`."
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 726
          },
          "name": "dashboardBody",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-dashboard.html#cfn-cloudwatch-dashboard-dashboardname",
            "stability": "experimental",
            "summary": "`AWS::CloudWatch::Dashboard.DashboardName`."
          },
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 732
          },
          "name": "dashboardName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.CfnDashboardProps": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-dashboard.html",
        "stability": "experimental",
        "summary": "Properties for defining a `AWS::CloudWatch::Dashboard`."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.CfnDashboardProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudwatch.generated.ts",
        "line": 662
      },
      "name": "CfnDashboardProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-dashboard.html#cfn-cloudwatch-dashboard-dashboardbody",
            "stability": "experimental",
            "summary": "`AWS::CloudWatch::Dashboard.DashboardBody`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 668
          },
          "name": "dashboardBody",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-dashboard.html#cfn-cloudwatch-dashboard-dashboardname",
            "stability": "experimental",
            "summary": "`AWS::CloudWatch::Dashboard.DashboardName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch.generated.ts",
            "line": 674
          },
          "name": "dashboardName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.Column": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "docs": {
        "remarks": "Widgets will be laid out next to each other",
        "stability": "experimental",
        "summary": "A widget that contains other widgets in a vertical column."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.Column",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "parameters": [
          {
            "name": "widgets",
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.IWidget"
            },
            "variadic": true
          }
        ],
        "variadic": true
      },
      "interfaces": [
        "@aws-cdk/aws-cloudwatch.IWidget"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/layout.ts",
        "line": 66
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Place the widget at a given position."
          },
          "locationInModule": {
            "filename": "lib/layout.ts",
            "line": 83
          },
          "name": "position",
          "overrides": "@aws-cdk/aws-cloudwatch.IWidget",
          "parameters": [
            {
              "name": "x",
              "type": {
                "primitive": "number"
              }
            },
            {
              "name": "y",
              "type": {
                "primitive": "number"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Return the widget JSON for use in the dashboard."
          },
          "locationInModule": {
            "filename": "lib/layout.ts",
            "line": 91
          },
          "name": "toJson",
          "overrides": "@aws-cdk/aws-cloudwatch.IWidget",
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "Column",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "The amount of vertical grid units the widget will take up."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/layout.ts",
            "line": 68
          },
          "name": "height",
          "overrides": "@aws-cdk/aws-cloudwatch.IWidget",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The amount of horizontal grid units the widget will take up."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/layout.ts",
            "line": 67
          },
          "name": "width",
          "overrides": "@aws-cdk/aws-cloudwatch.IWidget",
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.CommonMetricOptions": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Options shared by most methods accepting metric options."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.CommonMetricOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/metric.ts",
        "line": 12
      },
      "name": "CommonMetricOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Color for this metric when added to a Graph in a Dashboard."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 58
          },
          "name": "color",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No dimensions.",
            "stability": "experimental",
            "summary": "Dimensions of the metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 43
          },
          "name": "dimensions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Label for this metric when added to a Graph in a Dashboard."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 53
          },
          "name": "label",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "300",
            "remarks": "Specify time in seconds, in multiples of 60.",
            "stability": "experimental",
            "summary": "The period over which the specified statistic is applied."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 20
          },
          "name": "periodSec",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Average",
            "remarks": "Can be one of the following:\n\n- \"Minimum\" | \"min\"\n- \"Maximum\" | \"max\"\n- \"Average\" | \"avg\"\n- \"Sum\" | \"sum\"\n- \"SampleCount | \"n\"\n- \"pNN.NN\"",
            "stability": "experimental",
            "summary": "What function to use for aggregating."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 36
          },
          "name": "statistic",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Unit for the metric that is associated with the alarm."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 48
          },
          "name": "unit",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudwatch.Unit"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.ComparisonOperator": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "docs": {
        "stability": "experimental",
        "summary": "Comparison operator for evaluating alarms."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.ComparisonOperator",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/alarm.ts",
        "line": 37
      },
      "members": [
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "GreaterThanOrEqualToThreshold"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "GreaterThanThreshold"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "LessThanThreshold"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "LessThanOrEqualToThreshold"
        }
      ],
      "name": "ComparisonOperator"
    },
    "@aws-cdk/aws-cloudwatch.ConcreteWidget": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-cloudwatch",
      "docs": {
        "remarks": "This is in contrast to other widgets which exist for layout purposes.",
        "stability": "experimental",
        "summary": "A real CloudWatch widget that has its own fixed size and remembers its position."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.ConcreteWidget",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "parameters": [
          {
            "name": "width",
            "type": {
              "primitive": "number"
            }
          },
          {
            "name": "height",
            "type": {
              "primitive": "number"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-cloudwatch.IWidget"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/widget.ts",
        "line": 36
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Place the widget at a given position."
          },
          "locationInModule": {
            "filename": "lib/widget.ts",
            "line": 51
          },
          "name": "position",
          "overrides": "@aws-cdk/aws-cloudwatch.IWidget",
          "parameters": [
            {
              "name": "x",
              "type": {
                "primitive": "number"
              }
            },
            {
              "name": "y",
              "type": {
                "primitive": "number"
              }
            }
          ]
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Return the widget JSON for use in the dashboard."
          },
          "locationInModule": {
            "filename": "lib/widget.ts",
            "line": 56
          },
          "name": "toJson",
          "overrides": "@aws-cdk/aws-cloudwatch.IWidget",
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "ConcreteWidget",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "The amount of vertical grid units the widget will take up."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/widget.ts",
            "line": 38
          },
          "name": "height",
          "overrides": "@aws-cdk/aws-cloudwatch.IWidget",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The amount of horizontal grid units the widget will take up."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/widget.ts",
            "line": 37
          },
          "name": "width",
          "overrides": "@aws-cdk/aws-cloudwatch.IWidget",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/widget.ts",
            "line": 39
          },
          "name": "x",
          "optional": true,
          "protected": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/widget.ts",
            "line": 40
          },
          "name": "y",
          "optional": true,
          "protected": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.CreateAlarmOptions": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties needed to make an alarm from a metric."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.CreateAlarmOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/metric.ts",
        "line": 232
      },
      "name": "CreateAlarmOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The number of periods over which data is compared to the specified threshold."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 287
          },
          "name": "evaluationPeriods",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The value against which the specified statistic is compared."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 282
          },
          "name": "threshold",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Whether the actions for this alarm are enabled."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 310
          },
          "name": "actionsEnabled",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No description",
            "stability": "experimental",
            "summary": "Description for the alarm."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 270
          },
          "name": "alarmDescription",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Automatically generated name",
            "stability": "experimental",
            "summary": "Name of the alarm."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 263
          },
          "name": "alarmName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "GreaterThanOrEqualToThreshold",
            "stability": "experimental",
            "summary": "Comparison to use to check if metric is breaching."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 277
          },
          "name": "comparisonOperator",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudwatch.ComparisonOperator"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "``evaluationPeriods``",
            "remarks": "This is used only if you are setting an \"M\nout of N\" alarm. In that case, this value is the M. For more information, see Evaluating an Alarm in the Amazon\nCloudWatch User Guide.",
            "see": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html#alarm-evaluation",
            "stability": "experimental",
            "summary": "The number of datapoints that must be breaching to trigger the alarm."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 321
          },
          "name": "datapointsToAlarm",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Not configured.",
            "remarks": "Used only for alarms that are based on percentiles.",
            "stability": "experimental",
            "summary": "Specifies whether to evaluate the data and potentially change the alarm state if there are too few data points to be statistically significant."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 296
          },
          "name": "evaluateLowSampleCountPercentile",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "300",
            "remarks": "Specify time in seconds, in multiples of 60.",
            "stability": "experimental",
            "summary": "The period over which the specified statistic is applied."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 240
          },
          "name": "periodSec",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Average",
            "remarks": "Can be one of the following:\n\n- \"Minimum\" | \"min\"\n- \"Maximum\" | \"max\"\n- \"Average\" | \"avg\"\n- \"Sum\" | \"sum\"\n- \"SampleCount | \"n\"\n- \"pNN.NN\"",
            "stability": "experimental",
            "summary": "What function to use for aggregating."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 256
          },
          "name": "statistic",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "TreatMissingData.Missing",
            "stability": "experimental",
            "summary": "Sets how this alarm is to handle missing data points."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 303
          },
          "name": "treatMissingData",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudwatch.TreatMissingData"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.Dashboard": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "base": "@aws-cdk/cdk.Resource",
      "docs": {
        "stability": "experimental",
        "summary": "A CloudWatch dashboard."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.Dashboard",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.DashboardProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/dashboard.ts",
        "line": 62
      },
      "methods": [
        {
          "docs": {
            "remarks": "Widgets given in multiple calls to add() will be laid out stacked on\ntop of each other.\n\nMultiple widgets added in the same call to add() will be laid out next\nto each other.",
            "stability": "experimental",
            "summary": "Add a widget to the dashboard."
          },
          "locationInModule": {
            "filename": "lib/dashboard.ts",
            "line": 96
          },
          "name": "addWidgets",
          "parameters": [
            {
              "name": "widgets",
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.IWidget"
              },
              "variadic": true
            }
          ],
          "variadic": true
        }
      ],
      "name": "Dashboard"
    },
    "@aws-cdk/aws-cloudwatch.DashboardProps": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "datatype": true,
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-cloudwatch.DashboardProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/dashboard.ts",
        "line": 11
      },
      "name": "DashboardProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "Automatically generated name",
            "stability": "experimental",
            "summary": "Name of the dashboard."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/dashboard.ts",
            "line": 17
          },
          "name": "dashboardName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "When the dashboard loads, the end date will be the current time.",
            "stability": "experimental",
            "summary": "The end of the time range to use for each widget on the dashboard when the dashboard loads. If you specify a value for end, you must also specify a value for start. Specify an absolute time in the ISO 8601 format. For example, 2018-12-17T06:00:00.000Z."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/dashboard.ts",
            "line": 38
          },
          "name": "end",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Auto",
            "stability": "experimental",
            "summary": "Use this field to specify the period for the graphs when the dashboard loads. Specifying `Auto` causes the period of all graphs on the dashboard to automatically adapt to the time range of the dashboard. Specifying `Inherit` ensures that the period set for each graph is always obeyed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/dashboard.ts",
            "line": 47
          },
          "name": "periodOverride",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudwatch.PeriodOverride"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "When the dashboard loads, the start time will be the default time range.",
            "stability": "experimental",
            "summary": "The start of the time range to use for each widget on the dashboard. You can specify start without specifying end to specify a relative time range that ends with the current time. In this case, the value of start must begin with -P, and you can use M, H, D, W and M as abbreviations for minutes, hours, days, weeks and months. For example, -PT8H shows the last 8 hours and -P3M shows the last three months. You can also use start along with an end field, to specify an absolute time range. When specifying an absolute time range, use the ISO 8601 format. For example, 2018-12-17T06:00:00.000Z."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/dashboard.ts",
            "line": 29
          },
          "name": "start",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No widgets",
            "remarks": "One array represents a row of widgets.",
            "stability": "experimental",
            "summary": "Initial set of widgets on the dashboard."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/dashboard.ts",
            "line": 56
          },
          "name": "widgets",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "collection": {
                  "elementtype": {
                    "fqn": "@aws-cdk/aws-cloudwatch.IWidget"
                  },
                  "kind": "array"
                }
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.Dimension": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Metric dimension."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.Dimension",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/metric-types.ts",
        "line": 20
      },
      "name": "Dimension",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Name of the dimension."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric-types.ts",
            "line": 24
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Value of the dimension."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric-types.ts",
            "line": 29
          },
          "name": "value",
          "type": {
            "primitive": "any"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.GraphWidget": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "base": "@aws-cdk/aws-cloudwatch.ConcreteWidget",
      "docs": {
        "stability": "experimental",
        "summary": "A dashboard widget that displays metrics."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.GraphWidget",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.GraphWidgetProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/graph.ts",
        "line": 161
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Return the widget JSON for use in the dashboard."
          },
          "locationInModule": {
            "filename": "lib/graph.ts",
            "line": 169
          },
          "name": "toJson",
          "overrides": "@aws-cdk/aws-cloudwatch.ConcreteWidget",
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "GraphWidget"
    },
    "@aws-cdk/aws-cloudwatch.GraphWidgetProps": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties for a GraphWidget."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.GraphWidgetProps",
      "interfaces": [
        "@aws-cdk/aws-cloudwatch.MetricWidgetProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/graph.ts",
        "line": 121
      },
      "name": "GraphWidgetProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Metrics to display on left Y axis."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graph.ts",
            "line": 125
          },
          "name": "left",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-cloudwatch.IMetric"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Annotations for the left Y axis."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graph.ts",
            "line": 135
          },
          "name": "leftAnnotations",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-cloudwatch.HorizontalAnnotation"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Left Y axis."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graph.ts",
            "line": 150
          },
          "name": "leftYAxis",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudwatch.YAxisProps"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Metrics to display on right Y axis."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graph.ts",
            "line": 130
          },
          "name": "right",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-cloudwatch.IMetric"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Annotations for the right Y axis."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graph.ts",
            "line": 140
          },
          "name": "rightAnnotations",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-cloudwatch.HorizontalAnnotation"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Right Y axis."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graph.ts",
            "line": 155
          },
          "name": "rightYAxis",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudwatch.YAxisProps"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Whether the graph should be shown as stacked lines."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graph.ts",
            "line": 145
          },
          "name": "stacked",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.HorizontalAnnotation": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Horizontal annotation to be added to a graph."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.HorizontalAnnotation",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/graph.ts",
        "line": 236
      },
      "name": "HorizontalAnnotation",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The value of the annotation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graph.ts",
            "line": 240
          },
          "name": "value",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Automatic color",
            "stability": "experimental",
            "summary": "Hex color code to be used for the annotation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graph.ts",
            "line": 254
          },
          "name": "color",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No shading",
            "stability": "experimental",
            "summary": "Add shading above or below the annotation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graph.ts",
            "line": 261
          },
          "name": "fill",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudwatch.Shading"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No label",
            "stability": "experimental",
            "summary": "Label for the annotation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graph.ts",
            "line": 247
          },
          "name": "label",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Whether the annotation is visible."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graph.ts",
            "line": 268
          },
          "name": "visible",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.IAlarm": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-cloudwatch.IAlarm",
      "interfaces": [
        "@aws-cdk/cdk.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/alarm.ts",
        "line": 9
      },
      "name": "IAlarm",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alarm.ts",
            "line": 13
          },
          "name": "alarmArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alarm.ts",
            "line": 18
          },
          "name": "alarmName",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.IAlarmAction": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "docs": {
        "stability": "experimental",
        "summary": "Interface for objects that can be the targets of CloudWatch alarm actions."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.IAlarmAction",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/alarm-action.ts",
        "line": 7
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/alarm-action.ts",
            "line": 8
          },
          "name": "bind",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/cdk.Construct"
              }
            },
            {
              "name": "alarm",
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.IAlarm"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.AlarmActionConfig"
            }
          }
        }
      ],
      "name": "IAlarmAction"
    },
    "@aws-cdk/aws-cloudwatch.IMetric": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "docs": {
        "stability": "experimental",
        "summary": "Interface for metrics."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.IMetric",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/metric-types.ts",
        "line": 5
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Turn this metric object into an alarm configuration."
          },
          "locationInModule": {
            "filename": "lib/metric-types.ts",
            "line": 9
          },
          "name": "toAlarmConfig",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.MetricAlarmConfig"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Turn this metric object into a graph configuration."
          },
          "locationInModule": {
            "filename": "lib/metric-types.ts",
            "line": 14
          },
          "name": "toGraphConfig",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.MetricGraphConfig"
            }
          }
        }
      ],
      "name": "IMetric"
    },
    "@aws-cdk/aws-cloudwatch.IWidget": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "docs": {
        "stability": "experimental",
        "summary": "A single dashboard widget."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.IWidget",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/widget.ts",
        "line": 9
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Place the widget at a given position."
          },
          "locationInModule": {
            "filename": "lib/widget.ts",
            "line": 23
          },
          "name": "position",
          "parameters": [
            {
              "name": "x",
              "type": {
                "primitive": "number"
              }
            },
            {
              "name": "y",
              "type": {
                "primitive": "number"
              }
            }
          ]
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Return the widget JSON for use in the dashboard."
          },
          "locationInModule": {
            "filename": "lib/widget.ts",
            "line": 28
          },
          "name": "toJson",
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "IWidget",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The amount of vertical grid units the widget will take up."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/widget.ts",
            "line": 18
          },
          "name": "height",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The amount of horizontal grid units the widget will take up."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/widget.ts",
            "line": 13
          },
          "name": "width",
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.Metric": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "docs": {
        "remarks": "The metric is a combination of a metric identifier (namespace, name and dimensions)\nand an aggregation function (statistic, period and unit).\n\nIt also contains metadata which is used only in graphs, such as color and label.\nIt makes sense to embed this in here, so that compound constructs can attach\nthat metadata to metrics they expose.\n\nThis class does not represent a resource, so hence is not a construct. Instead,\nMetric is an abstraction that makes it easy to specify metrics for use in both\nalarms and graphs.",
        "stability": "experimental",
        "summary": "A metric emitted by a service."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.Metric",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.MetricProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-cloudwatch.IMetric"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/metric.ts",
        "line": 96
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Grant permissions to the given identity to write metrics."
          },
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 102
          },
          "name": "grantPutMetricData",
          "parameters": [
            {
              "docs": {
                "summary": "The IAM identity to give permissions to."
              },
              "name": "grantee",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "Combines both properties that may adjust the metric (aggregation) as well\nas alarm properties.",
            "stability": "experimental",
            "summary": "Make a new Alarm for this metric."
          },
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 163
          },
          "name": "createAlarm",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/cdk.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.CreateAlarmOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Alarm"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Turn this metric object into an alarm configuration."
          },
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 181
          },
          "name": "toAlarmConfig",
          "overrides": "@aws-cdk/aws-cloudwatch.IMetric",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.MetricAlarmConfig"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Turn this metric object into a graph configuration."
          },
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 196
          },
          "name": "toGraphConfig",
          "overrides": "@aws-cdk/aws-cloudwatch.IMetric",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.MetricGraphConfig"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Returns a string representation of an object."
          },
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 209
          },
          "name": "toString",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "docs": {
            "remarks": "All properties except namespace and metricName can be changed.",
            "stability": "experimental",
            "summary": "Return a copy of Metric with properties changed."
          },
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 144
          },
          "name": "with",
          "parameters": [
            {
              "docs": {
                "summary": "The set of properties to change."
              },
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        }
      ],
      "name": "Metric",
      "properties": [
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 112
          },
          "name": "metricName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 111
          },
          "name": "namespace",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 113
          },
          "name": "periodSec",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 114
          },
          "name": "statistic",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 117
          },
          "name": "color",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 110
          },
          "name": "dimensions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 116
          },
          "name": "label",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 115
          },
          "name": "unit",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudwatch.Unit"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.MetricAlarmConfig": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties used to construct the Metric identifying part of an Alarm."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.MetricAlarmConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/metric-types.ts",
        "line": 79
      },
      "name": "MetricAlarmConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Name of the metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric-types.ts",
            "line": 93
          },
          "name": "metricName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Namespace of the metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric-types.ts",
            "line": 88
          },
          "name": "namespace",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "How many seconds to aggregate over."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric-types.ts",
            "line": 98
          },
          "name": "period",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The dimensions to apply to the alarm."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric-types.ts",
            "line": 83
          },
          "name": "dimensions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-cloudwatch.Dimension"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Percentile aggregation function to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric-types.ts",
            "line": 108
          },
          "name": "extendedStatistic",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Simple aggregation function to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric-types.ts",
            "line": 103
          },
          "name": "statistic",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudwatch.Statistic"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The unit of the alarm."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric-types.ts",
            "line": 113
          },
          "name": "unit",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudwatch.Unit"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.MetricGraphConfig": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties used to construct the Metric identifying part of a Graph."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.MetricGraphConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/metric-types.ts",
        "line": 119
      },
      "name": "MetricGraphConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Name of the metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric-types.ts",
            "line": 133
          },
          "name": "metricName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Namespace of the metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric-types.ts",
            "line": 128
          },
          "name": "namespace",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "How many seconds to aggregate over."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric-types.ts",
            "line": 138
          },
          "name": "period",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Color for the graph line."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric-types.ts",
            "line": 148
          },
          "name": "color",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The dimensions to apply to the alarm."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric-types.ts",
            "line": 123
          },
          "name": "dimensions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-cloudwatch.Dimension"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Label for the metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric-types.ts",
            "line": 143
          },
          "name": "label",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Aggregation function to use (can be either simple or a percentile)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric-types.ts",
            "line": 153
          },
          "name": "statistic",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The unit of the alarm."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric-types.ts",
            "line": 158
          },
          "name": "unit",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudwatch.Unit"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.MetricOptions": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties of a metric that can be changed."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions",
      "interfaces": [
        "@aws-cdk/aws-cloudwatch.CommonMetricOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/metric.ts",
        "line": 79
      },
      "name": "MetricOptions"
    },
    "@aws-cdk/aws-cloudwatch.MetricProps": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties for a metric."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.MetricProps",
      "interfaces": [
        "@aws-cdk/aws-cloudwatch.CommonMetricOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/metric.ts",
        "line": 64
      },
      "name": "MetricProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Name of the metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 73
          },
          "name": "metricName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Namespace of the metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metric.ts",
            "line": 68
          },
          "name": "namespace",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.MetricWidgetProps": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Basic properties for widgets that display metrics."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.MetricWidgetProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/graph.ts",
        "line": 9
      },
      "name": "MetricWidgetProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "Depends on the type of widget",
            "stability": "experimental",
            "summary": "Height of the widget."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graph.ts",
            "line": 34
          },
          "name": "height",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Current region",
            "stability": "experimental",
            "summary": "The region the metrics of this graph should be taken from."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graph.ts",
            "line": 20
          },
          "name": "region",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Title for the graph."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graph.ts",
            "line": 13
          },
          "name": "title",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "6",
            "stability": "experimental",
            "summary": "Width of the widget, in a grid of 24 units wide."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graph.ts",
            "line": 27
          },
          "name": "width",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.PeriodOverride": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-cloudwatch.PeriodOverride",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/dashboard.ts",
        "line": 6
      },
      "members": [
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "Auto"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "Inherit"
        }
      ],
      "name": "PeriodOverride"
    },
    "@aws-cdk/aws-cloudwatch.Row": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "docs": {
        "remarks": "Widgets will be laid out next to each other",
        "stability": "experimental",
        "summary": "A widget that contains other widgets in a horizontal row."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.Row",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "parameters": [
          {
            "name": "widgets",
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.IWidget"
            },
            "variadic": true
          }
        ],
        "variadic": true
      },
      "interfaces": [
        "@aws-cdk/aws-cloudwatch.IWidget"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/layout.ts",
        "line": 10
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Place the widget at a given position."
          },
          "locationInModule": {
            "filename": "lib/layout.ts",
            "line": 46
          },
          "name": "position",
          "overrides": "@aws-cdk/aws-cloudwatch.IWidget",
          "parameters": [
            {
              "name": "x",
              "type": {
                "primitive": "number"
              }
            },
            {
              "name": "y",
              "type": {
                "primitive": "number"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Return the widget JSON for use in the dashboard."
          },
          "locationInModule": {
            "filename": "lib/layout.ts",
            "line": 52
          },
          "name": "toJson",
          "overrides": "@aws-cdk/aws-cloudwatch.IWidget",
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "Row",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "The amount of vertical grid units the widget will take up."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/layout.ts",
            "line": 12
          },
          "name": "height",
          "overrides": "@aws-cdk/aws-cloudwatch.IWidget",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The amount of horizontal grid units the widget will take up."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/layout.ts",
            "line": 11
          },
          "name": "width",
          "overrides": "@aws-cdk/aws-cloudwatch.IWidget",
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.Shading": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-cloudwatch.Shading",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/graph.ts",
        "line": 271
      },
      "members": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Don't add shading."
          },
          "name": "None"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Add shading above the annotation."
          },
          "name": "Above"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Add shading below the annotation."
          },
          "name": "Below"
        }
      ],
      "name": "Shading"
    },
    "@aws-cdk/aws-cloudwatch.SingleValueWidget": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "base": "@aws-cdk/aws-cloudwatch.ConcreteWidget",
      "docs": {
        "stability": "experimental",
        "summary": "A dashboard widget that displays the most recent value for every metric."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.SingleValueWidget",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.SingleValueWidgetProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/graph.ts",
        "line": 208
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Return the widget JSON for use in the dashboard."
          },
          "locationInModule": {
            "filename": "lib/graph.ts",
            "line": 216
          },
          "name": "toJson",
          "overrides": "@aws-cdk/aws-cloudwatch.ConcreteWidget",
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "SingleValueWidget"
    },
    "@aws-cdk/aws-cloudwatch.SingleValueWidgetProps": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties for a SingleValueWidget."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.SingleValueWidgetProps",
      "interfaces": [
        "@aws-cdk/aws-cloudwatch.MetricWidgetProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/graph.ts",
        "line": 198
      },
      "name": "SingleValueWidgetProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Metrics to display."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graph.ts",
            "line": 202
          },
          "name": "metrics",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-cloudwatch.IMetric"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.Spacer": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "docs": {
        "stability": "experimental",
        "summary": "A widget that doesn't display anything but takes up space."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.Spacer",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.SpacerProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-cloudwatch.IWidget"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/layout.ts",
        "line": 122
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Place the widget at a given position."
          },
          "locationInModule": {
            "filename": "lib/layout.ts",
            "line": 131
          },
          "name": "position",
          "overrides": "@aws-cdk/aws-cloudwatch.IWidget",
          "parameters": [
            {
              "name": "_x",
              "type": {
                "primitive": "number"
              }
            },
            {
              "name": "_y",
              "type": {
                "primitive": "number"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Return the widget JSON for use in the dashboard."
          },
          "locationInModule": {
            "filename": "lib/layout.ts",
            "line": 135
          },
          "name": "toJson",
          "overrides": "@aws-cdk/aws-cloudwatch.IWidget",
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "Spacer",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "The amount of vertical grid units the widget will take up."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/layout.ts",
            "line": 124
          },
          "name": "height",
          "overrides": "@aws-cdk/aws-cloudwatch.IWidget",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The amount of horizontal grid units the widget will take up."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/layout.ts",
            "line": 123
          },
          "name": "width",
          "overrides": "@aws-cdk/aws-cloudwatch.IWidget",
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.SpacerProps": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Props of the spacer."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.SpacerProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/layout.ts",
        "line": 103
      },
      "name": "SpacerProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": ": 1",
            "stability": "experimental",
            "summary": "Height of the spacer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/layout.ts",
            "line": 116
          },
          "name": "height",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "1",
            "stability": "experimental",
            "summary": "Width of the spacer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/layout.ts",
            "line": 109
          },
          "name": "width",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.Statistic": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "docs": {
        "stability": "experimental",
        "summary": "Statistic to use over the aggregation period."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.Statistic",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/metric-types.ts",
        "line": 35
      },
      "members": [
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "SampleCount"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "Average"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "Sum"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "Minimum"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "Maximum"
        }
      ],
      "name": "Statistic"
    },
    "@aws-cdk/aws-cloudwatch.TextWidget": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "base": "@aws-cdk/aws-cloudwatch.ConcreteWidget",
      "docs": {
        "stability": "experimental",
        "summary": "A dashboard widget that displays MarkDown."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.TextWidget",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.TextWidgetProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/text.ts",
        "line": 30
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Place the widget at a given position."
          },
          "locationInModule": {
            "filename": "lib/text.ts",
            "line": 38
          },
          "name": "position",
          "overrides": "@aws-cdk/aws-cloudwatch.ConcreteWidget",
          "parameters": [
            {
              "name": "x",
              "type": {
                "primitive": "number"
              }
            },
            {
              "name": "y",
              "type": {
                "primitive": "number"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Return the widget JSON for use in the dashboard."
          },
          "locationInModule": {
            "filename": "lib/text.ts",
            "line": 43
          },
          "name": "toJson",
          "overrides": "@aws-cdk/aws-cloudwatch.ConcreteWidget",
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "TextWidget"
    },
    "@aws-cdk/aws-cloudwatch.TextWidgetProps": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties for a Text widget."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.TextWidgetProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/text.ts",
        "line": 6
      },
      "name": "TextWidgetProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The text to display, in MarkDown format."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/text.ts",
            "line": 10
          },
          "name": "markdown",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "2",
            "stability": "experimental",
            "summary": "Height of the widget."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/text.ts",
            "line": 24
          },
          "name": "height",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "6",
            "stability": "experimental",
            "summary": "Width of the widget, in a grid of 24 units wide."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/text.ts",
            "line": 17
          },
          "name": "width",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.TreatMissingData": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "docs": {
        "stability": "experimental",
        "summary": "Specify how missing data points are treated during alarm evaluation."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.TreatMissingData",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/alarm.ts",
        "line": 54
      },
      "members": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Missing data points are treated as breaching the threshold."
          },
          "name": "Breaching"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Missing data points are treated as being within the threshold."
          },
          "name": "NotBreaching"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The current alarm state is maintained."
          },
          "name": "Ignore"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The alarm does not consider missing data points when evaluating whether to change state."
          },
          "name": "Missing"
        }
      ],
      "name": "TreatMissingData"
    },
    "@aws-cdk/aws-cloudwatch.Unit": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "docs": {
        "stability": "experimental",
        "summary": "Unit for metric."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.Unit",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/metric-types.ts",
        "line": 46
      },
      "members": [
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "Seconds"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "Microseconds"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "Milliseconds"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "Bytes_"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "Kilobytes"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "Megabytes"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "Gigabytes"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "Terabytes"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "Bits"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "Kilobits"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "Megabits"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "Gigabits"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "Terabits"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "Percent"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "Count"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "BytesPerSecond"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "KilobytesPerSecond"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "MegabytesPerSecond"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "GigabytesPerSecond"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "TerabytesPerSecond"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "BitsPerSecond"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "KilobitsPerSecond"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "MegabitsPerSecond"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "GigabitsPerSecond"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "TerabitsPerSecond"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "CountPerSecond"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "None"
        }
      ],
      "name": "Unit"
    },
    "@aws-cdk/aws-cloudwatch.YAxisProps": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties for a Y-Axis."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.YAxisProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/graph.ts",
        "line": 40
      },
      "name": "YAxisProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "No label",
            "stability": "experimental",
            "summary": "The label."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graph.ts",
            "line": 60
          },
          "name": "label",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No maximum value",
            "stability": "experimental",
            "summary": "The max value."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graph.ts",
            "line": 53
          },
          "name": "max",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "0",
            "stability": "experimental",
            "summary": "The min value."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graph.ts",
            "line": 46
          },
          "name": "min",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Whether to show units."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graph.ts",
            "line": 67
          },
          "name": "showUnits",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    }
  },
  "version": "0.35.0",
  "fingerprint": "REWzmvzpQ6FME8Dw1h1pOYT0yf/P6Hg4L0c/DHk9wd8="
}
