{
  "author": {
    "name": "Amazon Web Services",
    "organization": true,
    "roles": [
      "author"
    ],
    "url": "https://aws.amazon.com"
  },
  "dependencies": {
    "@aws-cdk/aws-cloudwatch": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.CloudWatch",
          "packageId": "Amazon.CDK.AWS.CloudWatch",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "cloudwatch",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudwatch"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudwatch"
        },
        "python": {
          "distName": "aws-cdk.aws-cloudwatch",
          "module": "aws_cdk.aws_cloudwatch"
        }
      },
      "version": "0.35.0"
    },
    "@aws-cdk/aws-iam": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.IAM",
          "packageId": "Amazon.CDK.AWS.IAM",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "iam",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.iam"
        },
        "js": {
          "npm": "@aws-cdk/aws-iam"
        },
        "python": {
          "distName": "aws-cdk.aws-iam",
          "module": "aws_cdk.aws_iam"
        }
      },
      "version": "0.35.0"
    },
    "@aws-cdk/cdk": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "cdk",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk"
        },
        "js": {
          "npm": "@aws-cdk/cdk"
        },
        "python": {
          "distName": "aws-cdk.cdk",
          "module": "aws_cdk.cdk"
        }
      },
      "version": "0.35.0"
    },
    "@aws-cdk/cx-api": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.CXAPI",
          "packageId": "Amazon.CDK.CXAPI",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cx-api",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cxapi"
        },
        "js": {
          "npm": "@aws-cdk/cx-api"
        },
        "python": {
          "distName": "aws-cdk.cx-api",
          "module": "aws_cdk.cx_api"
        }
      },
      "version": "0.35.0"
    }
  },
  "dependencyClosure": {
    "@aws-cdk/aws-cloudwatch": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.CloudWatch",
          "packageId": "Amazon.CDK.AWS.CloudWatch",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "cloudwatch",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudwatch"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudwatch"
        },
        "python": {
          "distName": "aws-cdk.aws-cloudwatch",
          "module": "aws_cdk.aws_cloudwatch"
        }
      },
      "version": "0.35.0"
    },
    "@aws-cdk/aws-iam": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.IAM",
          "packageId": "Amazon.CDK.AWS.IAM",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "iam",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.iam"
        },
        "js": {
          "npm": "@aws-cdk/aws-iam"
        },
        "python": {
          "distName": "aws-cdk.aws-iam",
          "module": "aws_cdk.aws_iam"
        }
      },
      "version": "0.35.0"
    },
    "@aws-cdk/cdk": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "cdk",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk"
        },
        "js": {
          "npm": "@aws-cdk/cdk"
        },
        "python": {
          "distName": "aws-cdk.cdk",
          "module": "aws_cdk.cdk"
        }
      },
      "version": "0.35.0"
    },
    "@aws-cdk/cx-api": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.CXAPI",
          "packageId": "Amazon.CDK.CXAPI",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cx-api",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cxapi"
        },
        "js": {
          "npm": "@aws-cdk/cx-api"
        },
        "python": {
          "distName": "aws-cdk.cx-api",
          "module": "aws_cdk.cx_api"
        }
      },
      "version": "0.35.0"
    },
    "@aws-cdk/region-info": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.RegionInfo",
          "packageId": "Amazon.CDK.RegionInfo",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "cdk-region-info",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.regioninfo"
        },
        "js": {
          "npm": "@aws-cdk/region-info"
        },
        "python": {
          "distName": "aws-cdk.region-info",
          "module": "aws_cdk.region_info"
        }
      },
      "version": "0.35.0"
    }
  },
  "description": "CDK Constructs for AWS EC2",
  "docs": {
    "stability": "experimental"
  },
  "homepage": "https://github.com/awslabs/aws-cdk",
  "jsiiVersion": "0.11.3 (build 464b8c6)",
  "license": "Apache-2.0",
  "metadata": {
    "awsdocs:title": "Amazon EC2"
  },
  "name": "@aws-cdk/aws-ec2",
  "readme": {
    "markdown": "## Amazon EC2 Construct Library\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Stability: Experimental](https://img.shields.io/badge/stability-Experimental-important.svg?style=for-the-badge)\n\n> **This is a _developer preview_ (public beta) module. Releases might lack important features and might have\n> future breaking changes.**\n>\n> This API is still under active development and subject to non-backward\n> compatible changes or removal in any future version. Use of the API is not recommended in production\n> environments. Experimental APIs are not subject to the Semantic Versioning model.\n\n---\n<!--END STABILITY BANNER-->\n\nThe `@aws-cdk/aws-ec2` package contains primitives for setting up networking and\ninstances.\n\n### VPC\n\nMost projects need a Virtual Private Cloud to provide security by means of\nnetwork partitioning. This is easily achieved by creating an instance of\n`Vpc`:\n\n```ts\nimport ec2 = require('@aws-cdk/aws-ec2');\n\nconst vpc = new ec2.Vpc(this, 'VPC');\n```\n\nAll default Constructs requires EC2 instances to be launched inside a VPC, so\nyou should generally start by defining a VPC whenever you need to launch\ninstances for your project.\n\nOur default `Vpc` class creates a private and public subnet for every\navailability zone. Classes that use the VPC will generally launch instances\ninto all private subnets, and provide a parameter called `vpcSubnets` to\nallow you to override the placement. [Read more about\nsubnets](https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Subnets.html).\n\n\n#### Advanced Subnet Configuration\nIf you require the ability to configure subnets the `Vpc` can be\ncustomized with `SubnetConfiguration` array. This is best explained by an\nexample:\n\n```ts\nimport ec2 = require('@aws-cdk/aws-ec2');\n\nconst vpc = new ec2.Vpc(this, 'TheVPC', {\n  cidr: '10.0.0.0/21',\n  subnetConfiguration: [\n    {\n      cidrMask: 24,\n      name: 'Ingress',\n      subnetType: SubnetType.Public,\n    },\n    {\n      cidrMask: 24,\n      name: 'Application',\n      subnetType: SubnetType.Private,\n    },\n    {\n      cidrMask: 28,\n      name: 'Database',\n      subnetType: SubnetType.Isolated,\n    }\n  ],\n});\n```\n\nThe example above is one possible configuration, but the user can use the\nconstructs above to implement many other network configurations.\n\nThe `Vpc` from the above configuration in a Region with three\navailability zones will be the following:\n * IngressSubnet1: 10.0.0.0/24\n * IngressSubnet2: 10.0.1.0/24\n * IngressSubnet3: 10.0.2.0/24\n * ApplicationSubnet1: 10.0.3.0/24\n * ApplicationSubnet2: 10.0.4.0/24\n * ApplicationSubnet3: 10.0.5.0/24\n * DatabaseSubnet1: 10.0.6.0/28\n * DatabaseSubnet2: 10.0.6.16/28\n * DatabaseSubnet3: 10.0.6.32/28\n\nEach `Public` Subnet will have a NAT Gateway. Each `Private` Subnet will have a\nroute to the NAT Gateway in the same availability zone. Each `Isolated` subnet\nwill not have a route to the internet, but is routeable inside the VPC. The\nnumbers [1-3] will consistently map to availability zones (e.g. IngressSubnet1\nand ApplicationSubnet1 will be in the same avialbility zone).\n\n`Isolated` Subnets provide simplified secure networking principles, but come at\nan operational complexity. The lack of an internet route means that if you deploy\ninstances in this subnet you will not be able to patch from the internet, this is\ncommonly reffered to as\n[fully baked images](https://aws.amazon.com/answers/configuration-management/aws-ami-design/).\nFeatures such as\n[cfn-signal](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-signal.html)\nare also unavailable. Using these subnets for managed services (RDS,\nElasticache, Redshift) is a very practical use because the managed services do\nnot incur additional operational overhead.\n\nMany times when you plan to build an application you don't know how many\ninstances of the application you will need and therefore you don't know how much\nIP space to allocate. For example, you know the application will only have\nElastic Loadbalancers in the public subnets and you know you will have 1-3 RDS\ndatabases for your data tier, and the rest of the IP space should just be evenly\ndistributed for the application.\n\n```ts\nimport ec2 = require('@aws-cdk/aws-ec2');\n\nconst vpc = new ec2.Vpc(this, 'TheVPC', {\n  cidr: '10.0.0.0/16',\n  natGateways: 1,\n  subnetConfiguration: [\n    {\n      cidrMask: 26,\n      name: 'Public',\n      subnetType: SubnetType.Public,\n    },\n    {\n      name: 'Application',\n      subnetType: SubnetType.Private,\n    },\n    {\n      cidrMask: 27,\n      name: 'Database',\n      subnetType: SubnetType.Isolated,\n    }\n  ],\n});\n```\n\nThe `Vpc` from the above configuration in a Region with three\navailability zones will be the following:\n * PublicSubnet1: 10.0.0.0/26\n * PublicSubnet2: 10.0.0.64/26\n * PublicSubnet3: 10.0.2.128/26\n * DatabaseSubnet1: 10.0.0.192/27\n * DatabaseSubnet2: 10.0.0.224/27\n * DatabaseSubnet3: 10.0.1.0/27\n * ApplicationSubnet1: 10.0.64.0/18\n * ApplicationSubnet2: 10.0.128.0/18\n * ApplicationSubnet3: 10.0.192.0/18\n\nAny subnet configuration without a `cidrMask` will be counted up and allocated\nevenly across the remaining IP space.\n\nTeams may also become cost conscious and be willing to trade availability for\ncost. For example, in your test environments perhaps you would like the same VPC\nas production, but instead of 3 NAT Gateways you would like only 1. This will\nsave on the cost, but trade the 3 availability zone to a 1 for all egress\ntraffic. This can be accomplished with a single parameter configuration:\n\n```ts\nimport ec2 = require('@aws-cdk/aws-ec2');\n\nconst vpc = new ec2.Vpc(this, 'TheVPC', {\n  cidr: '10.0.0.0/16',\n  natGateways: 1,\n  natGatewayPlacement: {subnetName: 'Public'},\n  subnetConfiguration: [\n    {\n      cidrMask: 26,\n      name: 'Public',\n      subnetType: SubnetType.Public,\n      natGateway: true,\n    },\n    {\n      name: 'Application',\n      subnetType: SubnetType.Private,\n    },\n    {\n      cidrMask: 27,\n      name: 'Database',\n      subnetType: SubnetType.Isolated,\n    }\n  ],\n});\n```\n\nThe `Vpc` above will have the exact same subnet definitions as listed\nabove. However, this time the VPC will have only 1 NAT Gateway and all\nApplication subnets will route to the NAT Gateway.\n\n#### Reserving subnet IP space\nThere are situations where the IP space for a subnet or number of subnets\n will need to be reserved. This is useful in situations where subnets\nwould need to be added after the vpc is originally deployed, without causing\nIP renumbering for existing subnets. The IP space for a subnet may be reserved\nby setting the `reserved` subnetConfiguration property to true, as shown below:\n\n```ts\nimport ec2 = require('@aws-cdk/aws-ec2');\nconst vpc = new ec2.Vpc(this, 'TheVPC', {\n  cidr: '10.0.0.0/16',\n  natGateways: 1,\n  subnetConfiguration: [\n    {\n      cidrMask: 26,\n      name: 'Public',\n      subnetType: SubnetType.Public,\n    },\n    {\n      cidrMask: 26,\n      name: 'Application1',\n      subnetType: SubnetType.Private,\n    },\n    {\n      cidrMask: 26,\n      name: 'Application2',\n      subnetType: SubnetType.Private,\n      reserved: true,\n    },\n    {\n      cidrMask: 27,\n      name: 'Database',\n      subnetType: SubnetType.Isolated,\n    }\n  ],\n});\n```\n\nIn the example above, the subnet for Application2 is not actually provisioned\nbut its IP space is still reserved. If in the future this subnet needs to be\nprovisioned, then the `reserved: true` property should be removed. Most\nimportantly, this action would not cause the Database subnet to get renumbered,\nbut rather the IP space that was previously reserved will be used for the\nsubnet provisioned for Application2. The `reserved` property also takes into\nconsideration the number of availability zones when reserving IP space.\n\n#### Sharing VPCs between stacks\n\nIf you are creating multiple `Stack`s inside the same CDK application, you\ncan reuse a VPC defined in one Stack in another by using `export()` and\n`import()`:\n\n```ts\n/**\n * Stack1 creates the VPC\n */\nclass Stack1 extends cdk.Stack {\n  public readonly vpc: ec2.Vpc;\n\n  constructor(scope: cdk.App, id: string, props?: cdk.StackProps) {\n    super(scope, id, props);\n\n    this.vpc = new ec2.Vpc(this, 'VPC');\n  }\n}\n\ninterface Stack2Props extends cdk.StackProps {\n  vpc: ec2.IVpc;\n}\n\n/**\n * Stack2 consumes the VPC\n */\nclass Stack2 extends cdk.Stack {\n  constructor(scope: cdk.App, id: string, props: Stack2Props) {\n    super(scope, id, props);\n\n    // Pass the VPC to a construct that needs it\n    new ConstructThatTakesAVpc(this, 'Construct', {\n      vpc: props.vpc\n    });\n  }\n}\n\nconst stack1 = new Stack1(app, 'Stack1');\nconst stack2 = new Stack2(app, 'Stack2', {\n  vpc: stack1.vpc,\n});\n```\n\n#### Importing an existing VPC\n\nIf your VPC is created outside your CDK app, you can use `fromLookup()`:\n\n```ts\nconst vpc = ec2.Vpc.fromLookup(stack, 'VPC', {\n  // This imports the default VPC but you can also\n  // specify a 'vpcName' or 'tags'.\n  isDefault: true\n});\n```\n\n### Allowing Connections\n\nIn AWS, all network traffic in and out of **Elastic Network Interfaces** (ENIs)\nis controlled by **Security Groups**. You can think of Security Groups as a\nfirewall with a set of rules. By default, Security Groups allow no incoming\n(ingress) traffic and all outgoing (egress) traffic. You can add ingress rules\nto them to allow incoming traffic streams. To exert fine-grained control over\negress traffic, set `allowAllOutbound: false` on the `SecurityGroup`, after\nwhich you can add egress traffic rules.\n\nYou can manipulate Security Groups directly:\n\n```ts\nconst mySecurityGroup = new ec2.SecurityGroup(this, 'SecurityGroup', {\n  vpc,\n  description: 'Allow ssh access to ec2 instances',\n  allowAllOutbound: true   // Can be set to false\n});\nmySecurityGroup.addIngressRule(new ec2.AnyIPv4(), new ec2.TcpPort(22), 'allow ssh access from the world');\n```\n\nAll constructs that create ENIs on your behalf (typically constructs that create\nEC2 instances or other VPC-connected resources) will all have security groups\nautomatically assigned. Those constructs have an attribute called\n**connections**, which is an object that makes it convenient to update the\nsecurity groups. If you want to allow connections between two constructs that\nhave security groups, you have to add an **Egress** rule to one Security Group,\nand an **Ingress** rule to the other. The connections object will automatically\ntake care of this for you:\n\n```ts\n// Allow connections from anywhere\nloadBalancer.connections.allowFromAnyIpv4(new ec2.TcpPort(443), 'Allow inbound HTTPS');\n\n// The same, but an explicit IP address\nloadBalancer.connections.allowFrom(new ec2.CidrIpv4('1.2.3.4/32'), new ec2.TcpPort(443), 'Allow inbound HTTPS');\n\n// Allow connection between AutoScalingGroups\nappFleet.connections.allowTo(dbFleet, new ec2.TcpPort(443), 'App can call database');\n```\n\n### Connection Peers\n\nThere are various classes that implement the connection peer part:\n\n```ts\n// Simple connection peers\nlet peer = new ec2.CidrIp(\"10.0.0.0/16\");\nlet peer = new ec2.AnyIPv4();\nlet peer = new ec2.CidrIpv6(\"::0/0\");\nlet peer = new ec2.AnyIPv6();\nlet peer = new ec2.PrefixList(\"pl-12345\");\nfleet.connections.allowTo(peer, new ec2.TcpPort(443), 'Allow outbound HTTPS');\n```\n\nAny object that has a security group can itself be used as a connection peer:\n\n```ts\n// These automatically create appropriate ingress and egress rules in both security groups\nfleet1.connections.allowTo(fleet2, new ec2.TcpPort(80), 'Allow between fleets');\n\nfleet.connections.allowTcpPort(80), 'Allow from load balancer');\n```\n\n### Port Ranges\n\nThe connections that are allowed are specified by port ranges. A number of classes provide\nthe connection specifier:\n\n```ts\nnew ec2.TcpPort(80)\nnew ec2.TcpPortRange(60000, 65535)\nnew ec2.TcpAllPorts()\nnew ec2.AllConnections()\n```\n\n> NOTE: This set is not complete yet; for example, there is no library support for ICMP at the moment.\n> However, you can write your own classes to implement those.\n\n### Default Ports\n\nSome Constructs have default ports associated with them. For example, the\nlistener of a load balancer does (it's the public port), or instances of an\nRDS database (it's the port the database is accepting connections on).\n\nIf the object you're calling the peering method on has a default port associated with it, you can call\n`allowDefaultPortFrom()` and omit the port specifier. If the argument has an associated default port, call\n`allowToDefaultPort()`.\n\nFor example:\n\n```ts\n// Port implicit in listener\nlistener.connections.allowDefaultPortFromAnyIpv4('Allow public');\n\n// Port implicit in peer\nfleet.connections.allowToDefaultPort(rdsDatabase, 'Fleet can access database');\n```\n\n### Machine Images (AMIs)\n\nAMIs control the OS that gets launched when you start your EC2 instance. The EC2\nlibrary contains constructs to select the AMI you want to use.\n\nDepending on the type of AMI, you select it a different way.\n\nThe latest version of Amazon Linux and Microsoft Windows images are\nselectable by instantiating one of these classes:\n\n```ts\n// Pick a Windows edition to use\nconst windows = new ec2.WindowsImage(ec2.WindowsVersion.WindowsServer2019EnglishFullBase);\n\n// Pick the right Amazon Linux edition. All arguments shown are optional\n// and will default to these values when omitted.\nconst amznLinux = new ec2.AmazonLinuxImage({\n  generation: ec2.AmazonLinuxGeneration.AmazonLinux,\n  edition: ec2.AmazonLinuxEdition.Standard,\n  virtualization: ec2.AmazonLinuxVirt.HVM,\n  storage: ec2.AmazonLinuxStorage.GeneralPurpose,\n});\n\n// For other custom (Linux) images, instantiate a `GenericLinuxImage` with\n// a map giving the AMI to in for each region:\n\nconst linux = new ec2.GenericLinuxImage({\n    'us-east-1': 'ami-97785bed',\n    'eu-west-1': 'ami-12345678',\n    // ...\n});\n```\n\n> NOTE: The Amazon Linux images selected will be cached in your `cdk.json`, so that your\n> AutoScalingGroups don't automatically change out from under you when you're making unrelated\n> changes. To update to the latest version of Amazon Linux, remove the cache entry from the `context`\n> section of your `cdk.json`.\n>\n> We will add command-line options to make this step easier in the future.\n\n### VPN connections to a VPC\n\nCreate your VPC with VPN connections by specifying the `vpnConnections` props (keys are construct `id`s):\n\n```ts\nconst vpc = new ec2.Vpc(stack, 'MyVpc', {\n  vpnConnections: {\n    dynamic: { // Dynamic routing (BGP)\n      ip: '1.2.3.4'\n    },\n    static: { // Static routing\n      ip: '4.5.6.7',\n      staticRoutes: [\n        '192.168.10.0/24',\n        '192.168.20.0/24'\n      ]\n    }\n  }\n});\n```\n\nTo create a VPC that can accept VPN connections, set `vpnGateway` to `true`:\n\n```ts\nconst vpc = new ec2.Vpc(stack, 'MyVpc', {\n  vpnGateway: true\n});\n```\n\nVPN connections can then be added:\n```ts\nvpc.addVpnConnection('Dynamic', {\n  ip: '1.2.3.4'\n});\n```\n\nRoutes will be propagated on the route tables associated with the private subnets.\n\nVPN connections expose [metrics (cloudwatch.Metric)](https://github.com/awslabs/aws-cdk/blob/master/packages/%40aws-cdk/aws-cloudwatch/README.md) across all tunnels in the account/region and per connection:\n```ts\n// Across all tunnels in the account/region\nconst allDataOut = VpnConnection.metricAllTunnelDataOut();\n\n// For a specific vpn connection\nconst vpnConnection = vpc.addVpnConnection('Dynamic', {\n  ip: '1.2.3.4'\n});\nconst state = vpnConnection.metricTunnelState();\n```\n\n### VPC endpoints\nA VPC endpoint enables you to privately connect your VPC to supported AWS services and VPC endpoint services powered by PrivateLink without requiring an internet gateway, NAT device, VPN connection, or AWS Direct Connect connection. Instances in your VPC do not require public IP addresses to communicate with resources in the service. Traffic between your VPC and the other service does not leave the Amazon network.\n\nEndpoints are virtual devices. They are horizontally scaled, redundant, and highly available VPC components that allow communication between instances in your VPC and services without imposing availability risks or bandwidth constraints on your network traffic.\n\n```ts\n    // Add gateway endpoints when creating the VPC\n    const vpc = new ec2.Vpc(this, 'MyVpc', {\n      gatewayEndpoints: {\n        S3: {\n          service: ec2.GatewayVpcEndpointAwsService.S3\n        }\n      }\n    });\n\n    // Alternatively gateway endpoints can be added on the VPC\n    const dynamoDbEndpoint = vpc.addGatewayEndpoint('DynamoDbEndpoint', {\n      service: ec2.GatewayVpcEndpointAwsService.DynamoDb\n    });\n\n    // This allows to customize the endpoint policy\n    dynamoDbEndpoint.addToPolicy(\n      new iam.PolicyStatement({ // Restrict to listing and describing tables\n        principals: [new iam.AnyPrincipal()],\n        actions: ['dynamodb:DescribeTable', 'dynamodb:ListTables'],\n        resources: ['*'],\n    }));\n\n    // Add an interface endpoint\n    const ecrDockerEndpoint = vpc.addInterfaceEndpoint('EcrDockerEndpoint', {\n      service: ec2.InterfaceVpcEndpointAwsService.EcrDocker\n    });\n\n    // When working with an interface endpoint, use the connections object to\n    // allow traffic to flow to the endpoint.\n    ecrDockerEndpoint.connections.allowDefaultPortFromAnyIpv4();\n```\n"
  },
  "repository": {
    "directory": "packages/@aws-cdk/aws-ec2",
    "type": "git",
    "url": "https://github.com/awslabs/aws-cdk.git"
  },
  "schema": "jsii/0.10.0",
  "targets": {
    "dotnet": {
      "assemblyOriginatorKeyFile": "../../key.snk",
      "namespace": "Amazon.CDK.AWS.EC2",
      "packageId": "Amazon.CDK.AWS.EC2",
      "signAssembly": true
    },
    "java": {
      "maven": {
        "artifactId": "ec2",
        "groupId": "software.amazon.awscdk"
      },
      "package": "software.amazon.awscdk.services.ec2"
    },
    "js": {
      "npm": "@aws-cdk/aws-ec2"
    },
    "python": {
      "distName": "aws-cdk.aws-ec2",
      "module": "aws_cdk.aws_ec2"
    }
  },
  "types": {
    "@aws-cdk/aws-ec2.AllTraffic": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "experimental",
        "summary": "All Traffic."
      },
      "fqn": "@aws-cdk/aws-ec2.AllTraffic",
      "initializer": {},
      "interfaces": [
        "@aws-cdk/aws-ec2.IPortRange"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/security-group-rule.ts",
        "line": 364
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Produce the ingress/egress rule JSON for the given connection."
          },
          "locationInModule": {
            "filename": "lib/security-group-rule.ts",
            "line": 367
          },
          "name": "toRuleJSON",
          "overrides": "@aws-cdk/aws-ec2.IPortRange",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Returns a string representation of an object."
          },
          "locationInModule": {
            "filename": "lib/security-group-rule.ts",
            "line": 373
          },
          "name": "toString",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "AllTraffic",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Whether the rule containing this port range can be inlined into a securitygroup or not."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group-rule.ts",
            "line": 365
          },
          "name": "canInlineRule",
          "overrides": "@aws-cdk/aws-ec2.IPortRange",
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.AmazonLinuxEdition": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "experimental",
        "summary": "Amazon Linux edition."
      },
      "fqn": "@aws-cdk/aws-ec2.AmazonLinuxEdition",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/machine-image.ts",
        "line": 128
      },
      "members": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Standard edition."
          },
          "name": "Standard"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Minimal edition."
          },
          "name": "Minimal"
        }
      ],
      "name": "AmazonLinuxEdition"
    },
    "@aws-cdk/aws-ec2.AmazonLinuxGeneration": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "experimental",
        "summary": "What generation of Amazon Linux to use."
      },
      "fqn": "@aws-cdk/aws-ec2.AmazonLinuxGeneration",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/machine-image.ts",
        "line": 113
      },
      "members": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Amazon Linux."
          },
          "name": "AmazonLinux"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Amazon Linux 2."
          },
          "name": "AmazonLinux2"
        }
      ],
      "name": "AmazonLinuxGeneration"
    },
    "@aws-cdk/aws-ec2.AmazonLinuxImage": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "remarks": "The AMI ID is selected using the values published to the SSM parameter store.",
        "stability": "experimental",
        "summary": "Selects the latest version of Amazon Linux."
      },
      "fqn": "@aws-cdk/aws-ec2.AmazonLinuxImage",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "parameters": [
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ec2.AmazonLinuxImageProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.IMachineImageSource"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/machine-image.ts",
        "line": 78
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Return the image to use in the given context."
          },
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 94
          },
          "name": "getImage",
          "overrides": "@aws-cdk/aws-ec2.IMachineImageSource",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/cdk.Construct"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.MachineImage"
            }
          }
        }
      ],
      "name": "AmazonLinuxImage"
    },
    "@aws-cdk/aws-ec2.AmazonLinuxImageProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Amazon Linux image properties."
      },
      "fqn": "@aws-cdk/aws-ec2.AmazonLinuxImageProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/machine-image.ts",
        "line": 43
      },
      "name": "AmazonLinuxImageProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "Standard",
            "stability": "experimental",
            "summary": "What edition of Amazon Linux to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 56
          },
          "name": "edition",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.AmazonLinuxEdition"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "AmazonLinux",
            "stability": "experimental",
            "summary": "What generation of Amazon Linux to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 49
          },
          "name": "generation",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.AmazonLinuxGeneration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "GeneralPurpose",
            "stability": "experimental",
            "summary": "What storage backed image to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 70
          },
          "name": "storage",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.AmazonLinuxStorage"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "HVM",
            "stability": "experimental",
            "summary": "Virtualization type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 63
          },
          "name": "virtualization",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.AmazonLinuxVirt"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.AmazonLinuxStorage": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.AmazonLinuxStorage",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/machine-image.ts",
        "line": 155
      },
      "members": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "EBS-backed storage."
          },
          "name": "EBS"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "General Purpose-based storage (recommended)."
          },
          "name": "GeneralPurpose"
        }
      ],
      "name": "AmazonLinuxStorage"
    },
    "@aws-cdk/aws-ec2.AmazonLinuxVirt": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "experimental",
        "summary": "Virtualization type for Amazon Linux."
      },
      "fqn": "@aws-cdk/aws-ec2.AmazonLinuxVirt",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/machine-image.ts",
        "line": 143
      },
      "members": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "HVM virtualization (recommended)."
          },
          "name": "HVM"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "PV virtualization."
          },
          "name": "PV"
        }
      ],
      "name": "AmazonLinuxVirt"
    },
    "@aws-cdk/aws-ec2.AnyIPv4": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/aws-ec2.CidrIPv4",
      "docs": {
        "stability": "experimental",
        "summary": "Any IPv4 address."
      },
      "fqn": "@aws-cdk/aws-ec2.AnyIPv4",
      "initializer": {
        "docs": {
          "stability": "experimental"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/security-group-rule.ts",
        "line": 58
      },
      "name": "AnyIPv4"
    },
    "@aws-cdk/aws-ec2.AnyIPv6": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/aws-ec2.CidrIPv6",
      "docs": {
        "stability": "experimental",
        "summary": "Any IPv6 address."
      },
      "fqn": "@aws-cdk/aws-ec2.AnyIPv6",
      "initializer": {
        "docs": {
          "stability": "experimental"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/security-group-rule.ts",
        "line": 93
      },
      "name": "AnyIPv6"
    },
    "@aws-cdk/aws-ec2.CfnCapacityReservation": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/cdk.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::CapacityReservation"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html",
        "stability": "experimental",
        "summary": "A CloudFormation `AWS::EC2::CapacityReservation`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnCapacityReservation",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Create a new `AWS::EC2::CapacityReservation`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnCapacityReservationProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 143
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 287
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnCapacityReservation",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 147
          },
          "name": "cfnResourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "AvailabilityZone"
            },
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 152
          },
          "name": "attrAvailabilityZone",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "AvailableInstanceCount"
            },
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 157
          },
          "name": "attrAvailableInstanceCount",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "InstanceType"
            },
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 162
          },
          "name": "attrInstanceType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Tenancy"
            },
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 167
          },
          "name": "attrTenancy",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "TotalInstanceCount"
            },
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 172
          },
          "name": "attrTotalInstanceCount",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 272
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-availabilityzone",
            "stability": "experimental",
            "summary": "`AWS::EC2::CapacityReservation.AvailabilityZone`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 178
          },
          "name": "availabilityZone",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-instancecount",
            "stability": "experimental",
            "summary": "`AWS::EC2::CapacityReservation.InstanceCount`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 184
          },
          "name": "instanceCount",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-instanceplatform",
            "stability": "experimental",
            "summary": "`AWS::EC2::CapacityReservation.InstancePlatform`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 190
          },
          "name": "instancePlatform",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-instancetype",
            "stability": "experimental",
            "summary": "`AWS::EC2::CapacityReservation.InstanceType`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 196
          },
          "name": "instanceType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-ebsoptimized",
            "stability": "experimental",
            "summary": "`AWS::EC2::CapacityReservation.EbsOptimized`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 202
          },
          "name": "ebsOptimized",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-enddate",
            "stability": "experimental",
            "summary": "`AWS::EC2::CapacityReservation.EndDate`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 208
          },
          "name": "endDate",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-enddatetype",
            "stability": "experimental",
            "summary": "`AWS::EC2::CapacityReservation.EndDateType`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 214
          },
          "name": "endDateType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-ephemeralstorage",
            "stability": "experimental",
            "summary": "`AWS::EC2::CapacityReservation.EphemeralStorage`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 220
          },
          "name": "ephemeralStorage",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-instancematchcriteria",
            "stability": "experimental",
            "summary": "`AWS::EC2::CapacityReservation.InstanceMatchCriteria`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 226
          },
          "name": "instanceMatchCriteria",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-tagspecifications",
            "stability": "experimental",
            "summary": "`AWS::EC2::CapacityReservation.TagSpecifications`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 232
          },
          "name": "tagSpecifications",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnCapacityReservation.TagSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-tenancy",
            "stability": "experimental",
            "summary": "`AWS::EC2::CapacityReservation.Tenancy`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 238
          },
          "name": "tenancy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnCapacityReservation.TagSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-capacityreservation-tagspecification.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnCapacityReservation.TagSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 296
      },
      "name": "TagSpecificationProperty",
      "namespace": "CfnCapacityReservation",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-capacityreservation-tagspecification.html#cfn-ec2-capacityreservation-tagspecification-resourcetype",
            "stability": "experimental",
            "summary": "`CfnCapacityReservation.TagSpecificationProperty.ResourceType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 301
          },
          "name": "resourceType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-capacityreservation-tagspecification.html#cfn-ec2-capacityreservation-tagspecification-tags",
            "stability": "experimental",
            "summary": "`CfnCapacityReservation.TagSpecificationProperty.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 306
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cdk.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnCapacityReservationProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html",
        "stability": "experimental",
        "summary": "Properties for defining a `AWS::EC2::CapacityReservation`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnCapacityReservationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 14
      },
      "name": "CfnCapacityReservationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-availabilityzone",
            "stability": "experimental",
            "summary": "`AWS::EC2::CapacityReservation.AvailabilityZone`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20
          },
          "name": "availabilityZone",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-instancecount",
            "stability": "experimental",
            "summary": "`AWS::EC2::CapacityReservation.InstanceCount`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26
          },
          "name": "instanceCount",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-instanceplatform",
            "stability": "experimental",
            "summary": "`AWS::EC2::CapacityReservation.InstancePlatform`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 32
          },
          "name": "instancePlatform",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-instancetype",
            "stability": "experimental",
            "summary": "`AWS::EC2::CapacityReservation.InstanceType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 38
          },
          "name": "instanceType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-ebsoptimized",
            "stability": "experimental",
            "summary": "`AWS::EC2::CapacityReservation.EbsOptimized`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 44
          },
          "name": "ebsOptimized",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-enddate",
            "stability": "experimental",
            "summary": "`AWS::EC2::CapacityReservation.EndDate`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 50
          },
          "name": "endDate",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-enddatetype",
            "stability": "experimental",
            "summary": "`AWS::EC2::CapacityReservation.EndDateType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 56
          },
          "name": "endDateType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-ephemeralstorage",
            "stability": "experimental",
            "summary": "`AWS::EC2::CapacityReservation.EphemeralStorage`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 62
          },
          "name": "ephemeralStorage",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-instancematchcriteria",
            "stability": "experimental",
            "summary": "`AWS::EC2::CapacityReservation.InstanceMatchCriteria`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 68
          },
          "name": "instanceMatchCriteria",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-tagspecifications",
            "stability": "experimental",
            "summary": "`AWS::EC2::CapacityReservation.TagSpecifications`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 74
          },
          "name": "tagSpecifications",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnCapacityReservation.TagSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-tenancy",
            "stability": "experimental",
            "summary": "`AWS::EC2::CapacityReservation.Tenancy`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 80
          },
          "name": "tenancy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnClientVpnAuthorizationRule": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/cdk.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::ClientVpnAuthorizationRule"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnauthorizationrule.html",
        "stability": "experimental",
        "summary": "A CloudFormation `AWS::EC2::ClientVpnAuthorizationRule`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnClientVpnAuthorizationRule",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Create a new `AWS::EC2::ClientVpnAuthorizationRule`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnClientVpnAuthorizationRuleProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 425
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 489
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnClientVpnAuthorizationRule",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 429
          },
          "name": "cfnResourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 480
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnauthorizationrule.html#cfn-ec2-clientvpnauthorizationrule-clientvpnendpointid",
            "stability": "experimental",
            "summary": "`AWS::EC2::ClientVpnAuthorizationRule.ClientVpnEndpointId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 435
          },
          "name": "clientVpnEndpointId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnauthorizationrule.html#cfn-ec2-clientvpnauthorizationrule-targetnetworkcidr",
            "stability": "experimental",
            "summary": "`AWS::EC2::ClientVpnAuthorizationRule.TargetNetworkCidr`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 441
          },
          "name": "targetNetworkCidr",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnauthorizationrule.html#cfn-ec2-clientvpnauthorizationrule-accessgroupid",
            "stability": "experimental",
            "summary": "`AWS::EC2::ClientVpnAuthorizationRule.AccessGroupId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 447
          },
          "name": "accessGroupId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnauthorizationrule.html#cfn-ec2-clientvpnauthorizationrule-authorizeallgroups",
            "stability": "experimental",
            "summary": "`AWS::EC2::ClientVpnAuthorizationRule.AuthorizeAllGroups`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 453
          },
          "name": "authorizeAllGroups",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnauthorizationrule.html#cfn-ec2-clientvpnauthorizationrule-description",
            "stability": "experimental",
            "summary": "`AWS::EC2::ClientVpnAuthorizationRule.Description`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 459
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnClientVpnAuthorizationRuleProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnauthorizationrule.html",
        "stability": "experimental",
        "summary": "Properties for defining a `AWS::EC2::ClientVpnAuthorizationRule`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnClientVpnAuthorizationRuleProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 346
      },
      "name": "CfnClientVpnAuthorizationRuleProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnauthorizationrule.html#cfn-ec2-clientvpnauthorizationrule-clientvpnendpointid",
            "stability": "experimental",
            "summary": "`AWS::EC2::ClientVpnAuthorizationRule.ClientVpnEndpointId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 352
          },
          "name": "clientVpnEndpointId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnauthorizationrule.html#cfn-ec2-clientvpnauthorizationrule-targetnetworkcidr",
            "stability": "experimental",
            "summary": "`AWS::EC2::ClientVpnAuthorizationRule.TargetNetworkCidr`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 358
          },
          "name": "targetNetworkCidr",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnauthorizationrule.html#cfn-ec2-clientvpnauthorizationrule-accessgroupid",
            "stability": "experimental",
            "summary": "`AWS::EC2::ClientVpnAuthorizationRule.AccessGroupId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 364
          },
          "name": "accessGroupId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnauthorizationrule.html#cfn-ec2-clientvpnauthorizationrule-authorizeallgroups",
            "stability": "experimental",
            "summary": "`AWS::EC2::ClientVpnAuthorizationRule.AuthorizeAllGroups`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 370
          },
          "name": "authorizeAllGroups",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnauthorizationrule.html#cfn-ec2-clientvpnauthorizationrule-description",
            "stability": "experimental",
            "summary": "`AWS::EC2::ClientVpnAuthorizationRule.Description`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 376
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnClientVpnEndpoint": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/cdk.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::ClientVpnEndpoint"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html",
        "stability": "experimental",
        "summary": "A CloudFormation `AWS::EC2::ClientVpnEndpoint`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnClientVpnEndpoint",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Create a new `AWS::EC2::ClientVpnEndpoint`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnClientVpnEndpointProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 603
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 693
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnClientVpnEndpoint",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 607
          },
          "name": "cfnResourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 681
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-authenticationoptions",
            "stability": "experimental",
            "summary": "`AWS::EC2::ClientVpnEndpoint.AuthenticationOptions`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 613
          },
          "name": "authenticationOptions",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnClientVpnEndpoint.ClientAuthenticationRequestProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-clientcidrblock",
            "stability": "experimental",
            "summary": "`AWS::EC2::ClientVpnEndpoint.ClientCidrBlock`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 619
          },
          "name": "clientCidrBlock",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-connectionlogoptions",
            "stability": "experimental",
            "summary": "`AWS::EC2::ClientVpnEndpoint.ConnectionLogOptions`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 625
          },
          "name": "connectionLogOptions",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnClientVpnEndpoint.ConnectionLogOptionsProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-servercertificatearn",
            "stability": "experimental",
            "summary": "`AWS::EC2::ClientVpnEndpoint.ServerCertificateArn`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 631
          },
          "name": "serverCertificateArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-description",
            "stability": "experimental",
            "summary": "`AWS::EC2::ClientVpnEndpoint.Description`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 637
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-dnsservers",
            "stability": "experimental",
            "summary": "`AWS::EC2::ClientVpnEndpoint.DnsServers`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 643
          },
          "name": "dnsServers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-tagspecifications",
            "stability": "experimental",
            "summary": "`AWS::EC2::ClientVpnEndpoint.TagSpecifications`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 649
          },
          "name": "tagSpecifications",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnClientVpnEndpoint.TagSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-transportprotocol",
            "stability": "experimental",
            "summary": "`AWS::EC2::ClientVpnEndpoint.TransportProtocol`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 655
          },
          "name": "transportProtocol",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnClientVpnEndpoint.CertificateAuthenticationRequestProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-certificateauthenticationrequest.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnClientVpnEndpoint.CertificateAuthenticationRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 702
      },
      "name": "CertificateAuthenticationRequestProperty",
      "namespace": "CfnClientVpnEndpoint",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-certificateauthenticationrequest.html#cfn-ec2-clientvpnendpoint-certificateauthenticationrequest-clientrootcertificatechainarn",
            "stability": "experimental",
            "summary": "`CfnClientVpnEndpoint.CertificateAuthenticationRequestProperty.ClientRootCertificateChainArn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 707
          },
          "name": "clientRootCertificateChainArn",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnClientVpnEndpoint.ClientAuthenticationRequestProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-clientauthenticationrequest.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnClientVpnEndpoint.ClientAuthenticationRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 746
      },
      "name": "ClientAuthenticationRequestProperty",
      "namespace": "CfnClientVpnEndpoint",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-clientauthenticationrequest.html#cfn-ec2-clientvpnendpoint-clientauthenticationrequest-type",
            "stability": "experimental",
            "summary": "`CfnClientVpnEndpoint.ClientAuthenticationRequestProperty.Type`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 761
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-clientauthenticationrequest.html#cfn-ec2-clientvpnendpoint-clientauthenticationrequest-activedirectory",
            "stability": "experimental",
            "summary": "`CfnClientVpnEndpoint.ClientAuthenticationRequestProperty.ActiveDirectory`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 751
          },
          "name": "activeDirectory",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnClientVpnEndpoint.DirectoryServiceAuthenticationRequestProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-clientauthenticationrequest.html#cfn-ec2-clientvpnendpoint-clientauthenticationrequest-mutualauthentication",
            "stability": "experimental",
            "summary": "`CfnClientVpnEndpoint.ClientAuthenticationRequestProperty.MutualAuthentication`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 756
          },
          "name": "mutualAuthentication",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnClientVpnEndpoint.CertificateAuthenticationRequestProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnClientVpnEndpoint.ConnectionLogOptionsProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-connectionlogoptions.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnClientVpnEndpoint.ConnectionLogOptionsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 804
      },
      "name": "ConnectionLogOptionsProperty",
      "namespace": "CfnClientVpnEndpoint",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-connectionlogoptions.html#cfn-ec2-clientvpnendpoint-connectionlogoptions-enabled",
            "stability": "experimental",
            "summary": "`CfnClientVpnEndpoint.ConnectionLogOptionsProperty.Enabled`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 819
          },
          "name": "enabled",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-connectionlogoptions.html#cfn-ec2-clientvpnendpoint-connectionlogoptions-cloudwatchloggroup",
            "stability": "experimental",
            "summary": "`CfnClientVpnEndpoint.ConnectionLogOptionsProperty.CloudwatchLogGroup`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 809
          },
          "name": "cloudwatchLogGroup",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-connectionlogoptions.html#cfn-ec2-clientvpnendpoint-connectionlogoptions-cloudwatchlogstream",
            "stability": "experimental",
            "summary": "`CfnClientVpnEndpoint.ConnectionLogOptionsProperty.CloudwatchLogStream`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 814
          },
          "name": "cloudwatchLogStream",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnClientVpnEndpoint.DirectoryServiceAuthenticationRequestProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-directoryserviceauthenticationrequest.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnClientVpnEndpoint.DirectoryServiceAuthenticationRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 862
      },
      "name": "DirectoryServiceAuthenticationRequestProperty",
      "namespace": "CfnClientVpnEndpoint",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-directoryserviceauthenticationrequest.html#cfn-ec2-clientvpnendpoint-directoryserviceauthenticationrequest-directoryid",
            "stability": "experimental",
            "summary": "`CfnClientVpnEndpoint.DirectoryServiceAuthenticationRequestProperty.DirectoryId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 867
          },
          "name": "directoryId",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnClientVpnEndpoint.TagSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-tagspecification.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnClientVpnEndpoint.TagSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 906
      },
      "name": "TagSpecificationProperty",
      "namespace": "CfnClientVpnEndpoint",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-tagspecification.html#cfn-ec2-clientvpnendpoint-tagspecification-resourcetype",
            "stability": "experimental",
            "summary": "`CfnClientVpnEndpoint.TagSpecificationProperty.ResourceType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 911
          },
          "name": "resourceType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-tagspecification.html#cfn-ec2-clientvpnendpoint-tagspecification-tags",
            "stability": "experimental",
            "summary": "`CfnClientVpnEndpoint.TagSpecificationProperty.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 916
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cdk.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnClientVpnEndpointProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html",
        "stability": "experimental",
        "summary": "Properties for defining a `AWS::EC2::ClientVpnEndpoint`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnClientVpnEndpointProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 498
      },
      "name": "CfnClientVpnEndpointProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-authenticationoptions",
            "stability": "experimental",
            "summary": "`AWS::EC2::ClientVpnEndpoint.AuthenticationOptions`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 504
          },
          "name": "authenticationOptions",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnClientVpnEndpoint.ClientAuthenticationRequestProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-clientcidrblock",
            "stability": "experimental",
            "summary": "`AWS::EC2::ClientVpnEndpoint.ClientCidrBlock`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 510
          },
          "name": "clientCidrBlock",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-connectionlogoptions",
            "stability": "experimental",
            "summary": "`AWS::EC2::ClientVpnEndpoint.ConnectionLogOptions`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 516
          },
          "name": "connectionLogOptions",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnClientVpnEndpoint.ConnectionLogOptionsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-servercertificatearn",
            "stability": "experimental",
            "summary": "`AWS::EC2::ClientVpnEndpoint.ServerCertificateArn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 522
          },
          "name": "serverCertificateArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-description",
            "stability": "experimental",
            "summary": "`AWS::EC2::ClientVpnEndpoint.Description`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 528
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-dnsservers",
            "stability": "experimental",
            "summary": "`AWS::EC2::ClientVpnEndpoint.DnsServers`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 534
          },
          "name": "dnsServers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-tagspecifications",
            "stability": "experimental",
            "summary": "`AWS::EC2::ClientVpnEndpoint.TagSpecifications`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 540
          },
          "name": "tagSpecifications",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnClientVpnEndpoint.TagSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-transportprotocol",
            "stability": "experimental",
            "summary": "`AWS::EC2::ClientVpnEndpoint.TransportProtocol`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 546
          },
          "name": "transportProtocol",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnClientVpnRoute": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/cdk.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::ClientVpnRoute"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnroute.html",
        "stability": "experimental",
        "summary": "A CloudFormation `AWS::EC2::ClientVpnRoute`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnClientVpnRoute",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Create a new `AWS::EC2::ClientVpnRoute`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnClientVpnRouteProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 1028
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1085
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnClientVpnRoute",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1032
          },
          "name": "cfnResourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1077
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnroute.html#cfn-ec2-clientvpnroute-clientvpnendpointid",
            "stability": "experimental",
            "summary": "`AWS::EC2::ClientVpnRoute.ClientVpnEndpointId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1038
          },
          "name": "clientVpnEndpointId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnroute.html#cfn-ec2-clientvpnroute-destinationcidrblock",
            "stability": "experimental",
            "summary": "`AWS::EC2::ClientVpnRoute.DestinationCidrBlock`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1044
          },
          "name": "destinationCidrBlock",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnroute.html#cfn-ec2-clientvpnroute-targetvpcsubnetid",
            "stability": "experimental",
            "summary": "`AWS::EC2::ClientVpnRoute.TargetVpcSubnetId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1050
          },
          "name": "targetVpcSubnetId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnroute.html#cfn-ec2-clientvpnroute-description",
            "stability": "experimental",
            "summary": "`AWS::EC2::ClientVpnRoute.Description`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1056
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnClientVpnRouteProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnroute.html",
        "stability": "experimental",
        "summary": "Properties for defining a `AWS::EC2::ClientVpnRoute`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnClientVpnRouteProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 956
      },
      "name": "CfnClientVpnRouteProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnroute.html#cfn-ec2-clientvpnroute-clientvpnendpointid",
            "stability": "experimental",
            "summary": "`AWS::EC2::ClientVpnRoute.ClientVpnEndpointId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 962
          },
          "name": "clientVpnEndpointId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnroute.html#cfn-ec2-clientvpnroute-destinationcidrblock",
            "stability": "experimental",
            "summary": "`AWS::EC2::ClientVpnRoute.DestinationCidrBlock`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 968
          },
          "name": "destinationCidrBlock",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnroute.html#cfn-ec2-clientvpnroute-targetvpcsubnetid",
            "stability": "experimental",
            "summary": "`AWS::EC2::ClientVpnRoute.TargetVpcSubnetId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 974
          },
          "name": "targetVpcSubnetId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnroute.html#cfn-ec2-clientvpnroute-description",
            "stability": "experimental",
            "summary": "`AWS::EC2::ClientVpnRoute.Description`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 980
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnClientVpnTargetNetworkAssociation": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/cdk.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::ClientVpnTargetNetworkAssociation"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpntargetnetworkassociation.html",
        "stability": "experimental",
        "summary": "A CloudFormation `AWS::EC2::ClientVpnTargetNetworkAssociation`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnClientVpnTargetNetworkAssociation",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Create a new `AWS::EC2::ClientVpnTargetNetworkAssociation`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnClientVpnTargetNetworkAssociationProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 1149
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1189
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnClientVpnTargetNetworkAssociation",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1153
          },
          "name": "cfnResourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1183
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpntargetnetworkassociation.html#cfn-ec2-clientvpntargetnetworkassociation-clientvpnendpointid",
            "stability": "experimental",
            "summary": "`AWS::EC2::ClientVpnTargetNetworkAssociation.ClientVpnEndpointId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1159
          },
          "name": "clientVpnEndpointId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpntargetnetworkassociation.html#cfn-ec2-clientvpntargetnetworkassociation-subnetid",
            "stability": "experimental",
            "summary": "`AWS::EC2::ClientVpnTargetNetworkAssociation.SubnetId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1165
          },
          "name": "subnetId",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnClientVpnTargetNetworkAssociationProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpntargetnetworkassociation.html",
        "stability": "experimental",
        "summary": "Properties for defining a `AWS::EC2::ClientVpnTargetNetworkAssociation`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnClientVpnTargetNetworkAssociationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 1094
      },
      "name": "CfnClientVpnTargetNetworkAssociationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpntargetnetworkassociation.html#cfn-ec2-clientvpntargetnetworkassociation-clientvpnendpointid",
            "stability": "experimental",
            "summary": "`AWS::EC2::ClientVpnTargetNetworkAssociation.ClientVpnEndpointId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1100
          },
          "name": "clientVpnEndpointId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpntargetnetworkassociation.html#cfn-ec2-clientvpntargetnetworkassociation-subnetid",
            "stability": "experimental",
            "summary": "`AWS::EC2::ClientVpnTargetNetworkAssociation.SubnetId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1106
          },
          "name": "subnetId",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnCustomerGateway": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/cdk.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::CustomerGateway"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customer-gateway.html",
        "stability": "experimental",
        "summary": "A CloudFormation `AWS::EC2::CustomerGateway`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnCustomerGateway",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Create a new `AWS::EC2::CustomerGateway`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnCustomerGatewayProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 1270
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1327
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnCustomerGateway",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1274
          },
          "name": "cfnResourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1319
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customer-gateway.html#cfn-ec2-customergateway-tags",
            "stability": "experimental",
            "summary": "`AWS::EC2::CustomerGateway.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1298
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/cdk.TagManager"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customer-gateway.html#cfn-ec2-customergateway-bgpasn",
            "stability": "experimental",
            "summary": "`AWS::EC2::CustomerGateway.BgpAsn`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1280
          },
          "name": "bgpAsn",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customer-gateway.html#cfn-ec2-customergateway-ipaddress",
            "stability": "experimental",
            "summary": "`AWS::EC2::CustomerGateway.IpAddress`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1286
          },
          "name": "ipAddress",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customer-gateway.html#cfn-ec2-customergateway-type",
            "stability": "experimental",
            "summary": "`AWS::EC2::CustomerGateway.Type`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1292
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnCustomerGatewayProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customer-gateway.html",
        "stability": "experimental",
        "summary": "Properties for defining a `AWS::EC2::CustomerGateway`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnCustomerGatewayProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 1198
      },
      "name": "CfnCustomerGatewayProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customer-gateway.html#cfn-ec2-customergateway-bgpasn",
            "stability": "experimental",
            "summary": "`AWS::EC2::CustomerGateway.BgpAsn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1204
          },
          "name": "bgpAsn",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customer-gateway.html#cfn-ec2-customergateway-ipaddress",
            "stability": "experimental",
            "summary": "`AWS::EC2::CustomerGateway.IpAddress`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1210
          },
          "name": "ipAddress",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customer-gateway.html#cfn-ec2-customergateway-type",
            "stability": "experimental",
            "summary": "`AWS::EC2::CustomerGateway.Type`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1216
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customer-gateway.html#cfn-ec2-customergateway-tags",
            "stability": "experimental",
            "summary": "`AWS::EC2::CustomerGateway.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1222
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cdk.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnDHCPOptions": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/cdk.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::DHCPOptions"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcp-options.html",
        "stability": "experimental",
        "summary": "A CloudFormation `AWS::EC2::DHCPOptions`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnDHCPOptions",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Create a new `AWS::EC2::DHCPOptions`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnDHCPOptionsProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 1421
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1491
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnDHCPOptions",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1425
          },
          "name": "cfnResourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1481
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcp-options.html#cfn-ec2-dhcpoptions-tags",
            "stability": "experimental",
            "summary": "`AWS::EC2::DHCPOptions.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1461
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/cdk.TagManager"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcp-options.html#cfn-ec2-dhcpoptions-domainname",
            "stability": "experimental",
            "summary": "`AWS::EC2::DHCPOptions.DomainName`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1431
          },
          "name": "domainName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcp-options.html#cfn-ec2-dhcpoptions-domainnameservers",
            "stability": "experimental",
            "summary": "`AWS::EC2::DHCPOptions.DomainNameServers`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1437
          },
          "name": "domainNameServers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcp-options.html#cfn-ec2-dhcpoptions-netbiosnameservers",
            "stability": "experimental",
            "summary": "`AWS::EC2::DHCPOptions.NetbiosNameServers`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1443
          },
          "name": "netbiosNameServers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcp-options.html#cfn-ec2-dhcpoptions-netbiosnodetype",
            "stability": "experimental",
            "summary": "`AWS::EC2::DHCPOptions.NetbiosNodeType`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1449
          },
          "name": "netbiosNodeType",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcp-options.html#cfn-ec2-dhcpoptions-ntpservers",
            "stability": "experimental",
            "summary": "`AWS::EC2::DHCPOptions.NtpServers`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1455
          },
          "name": "ntpServers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnDHCPOptionsProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcp-options.html",
        "stability": "experimental",
        "summary": "Properties for defining a `AWS::EC2::DHCPOptions`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnDHCPOptionsProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 1336
      },
      "name": "CfnDHCPOptionsProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcp-options.html#cfn-ec2-dhcpoptions-domainname",
            "stability": "experimental",
            "summary": "`AWS::EC2::DHCPOptions.DomainName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1342
          },
          "name": "domainName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcp-options.html#cfn-ec2-dhcpoptions-domainnameservers",
            "stability": "experimental",
            "summary": "`AWS::EC2::DHCPOptions.DomainNameServers`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1348
          },
          "name": "domainNameServers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcp-options.html#cfn-ec2-dhcpoptions-netbiosnameservers",
            "stability": "experimental",
            "summary": "`AWS::EC2::DHCPOptions.NetbiosNameServers`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1354
          },
          "name": "netbiosNameServers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcp-options.html#cfn-ec2-dhcpoptions-netbiosnodetype",
            "stability": "experimental",
            "summary": "`AWS::EC2::DHCPOptions.NetbiosNodeType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1360
          },
          "name": "netbiosNodeType",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcp-options.html#cfn-ec2-dhcpoptions-ntpservers",
            "stability": "experimental",
            "summary": "`AWS::EC2::DHCPOptions.NtpServers`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1366
          },
          "name": "ntpServers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcp-options.html#cfn-ec2-dhcpoptions-tags",
            "stability": "experimental",
            "summary": "`AWS::EC2::DHCPOptions.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1372
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cdk.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnEC2Fleet": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/cdk.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::EC2Fleet"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html",
        "stability": "experimental",
        "summary": "A CloudFormation `AWS::EC2::EC2Fleet`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Create a new `AWS::EC2::EC2Fleet`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnEC2FleetProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 1627
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1739
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnEC2Fleet",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1631
          },
          "name": "cfnResourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1724
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-launchtemplateconfigs",
            "stability": "experimental",
            "summary": "`AWS::EC2::EC2Fleet.LaunchTemplateConfigs`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1637
          },
          "name": "launchTemplateConfigs",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.FleetLaunchTemplateConfigRequestProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-targetcapacityspecification",
            "stability": "experimental",
            "summary": "`AWS::EC2::EC2Fleet.TargetCapacitySpecification`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1643
          },
          "name": "targetCapacitySpecification",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.TargetCapacitySpecificationRequestProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-excesscapacityterminationpolicy",
            "stability": "experimental",
            "summary": "`AWS::EC2::EC2Fleet.ExcessCapacityTerminationPolicy`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1649
          },
          "name": "excessCapacityTerminationPolicy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-ondemandoptions",
            "stability": "experimental",
            "summary": "`AWS::EC2::EC2Fleet.OnDemandOptions`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1655
          },
          "name": "onDemandOptions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.OnDemandOptionsRequestProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-replaceunhealthyinstances",
            "stability": "experimental",
            "summary": "`AWS::EC2::EC2Fleet.ReplaceUnhealthyInstances`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1661
          },
          "name": "replaceUnhealthyInstances",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-spotoptions",
            "stability": "experimental",
            "summary": "`AWS::EC2::EC2Fleet.SpotOptions`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1667
          },
          "name": "spotOptions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.SpotOptionsRequestProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-tagspecifications",
            "stability": "experimental",
            "summary": "`AWS::EC2::EC2Fleet.TagSpecifications`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1673
          },
          "name": "tagSpecifications",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.TagSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-terminateinstanceswithexpiration",
            "stability": "experimental",
            "summary": "`AWS::EC2::EC2Fleet.TerminateInstancesWithExpiration`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1679
          },
          "name": "terminateInstancesWithExpiration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-type",
            "stability": "experimental",
            "summary": "`AWS::EC2::EC2Fleet.Type`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1685
          },
          "name": "type",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-validfrom",
            "stability": "experimental",
            "summary": "`AWS::EC2::EC2Fleet.ValidFrom`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1691
          },
          "name": "validFrom",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-validuntil",
            "stability": "experimental",
            "summary": "`AWS::EC2::EC2Fleet.ValidUntil`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1697
          },
          "name": "validUntil",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnEC2Fleet.FleetLaunchTemplateConfigRequestProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplateconfigrequest.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.FleetLaunchTemplateConfigRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 1748
      },
      "name": "FleetLaunchTemplateConfigRequestProperty",
      "namespace": "CfnEC2Fleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplateconfigrequest.html#cfn-ec2-ec2fleet-fleetlaunchtemplateconfigrequest-launchtemplatespecification",
            "stability": "experimental",
            "summary": "`CfnEC2Fleet.FleetLaunchTemplateConfigRequestProperty.LaunchTemplateSpecification`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1753
          },
          "name": "launchTemplateSpecification",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.FleetLaunchTemplateSpecificationRequestProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplateconfigrequest.html#cfn-ec2-ec2fleet-fleetlaunchtemplateconfigrequest-overrides",
            "stability": "experimental",
            "summary": "`CfnEC2Fleet.FleetLaunchTemplateConfigRequestProperty.Overrides`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1758
          },
          "name": "overrides",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.FleetLaunchTemplateOverridesRequestProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnEC2Fleet.FleetLaunchTemplateOverridesRequestProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.FleetLaunchTemplateOverridesRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 1798
      },
      "name": "FleetLaunchTemplateOverridesRequestProperty",
      "namespace": "CfnEC2Fleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest.html#cfn-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest-availabilityzone",
            "stability": "experimental",
            "summary": "`CfnEC2Fleet.FleetLaunchTemplateOverridesRequestProperty.AvailabilityZone`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1803
          },
          "name": "availabilityZone",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest.html#cfn-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest-instancetype",
            "stability": "experimental",
            "summary": "`CfnEC2Fleet.FleetLaunchTemplateOverridesRequestProperty.InstanceType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1808
          },
          "name": "instanceType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest.html#cfn-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest-maxprice",
            "stability": "experimental",
            "summary": "`CfnEC2Fleet.FleetLaunchTemplateOverridesRequestProperty.MaxPrice`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1813
          },
          "name": "maxPrice",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest.html#cfn-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest-priority",
            "stability": "experimental",
            "summary": "`CfnEC2Fleet.FleetLaunchTemplateOverridesRequestProperty.Priority`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1818
          },
          "name": "priority",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest.html#cfn-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest-subnetid",
            "stability": "experimental",
            "summary": "`CfnEC2Fleet.FleetLaunchTemplateOverridesRequestProperty.SubnetId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1823
          },
          "name": "subnetId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest.html#cfn-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest-weightedcapacity",
            "stability": "experimental",
            "summary": "`CfnEC2Fleet.FleetLaunchTemplateOverridesRequestProperty.WeightedCapacity`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1828
          },
          "name": "weightedCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnEC2Fleet.FleetLaunchTemplateSpecificationRequestProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplatespecificationrequest.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.FleetLaunchTemplateSpecificationRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 1876
      },
      "name": "FleetLaunchTemplateSpecificationRequestProperty",
      "namespace": "CfnEC2Fleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplatespecificationrequest.html#cfn-ec2-ec2fleet-fleetlaunchtemplatespecificationrequest-launchtemplateid",
            "stability": "experimental",
            "summary": "`CfnEC2Fleet.FleetLaunchTemplateSpecificationRequestProperty.LaunchTemplateId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1881
          },
          "name": "launchTemplateId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplatespecificationrequest.html#cfn-ec2-ec2fleet-fleetlaunchtemplatespecificationrequest-launchtemplatename",
            "stability": "experimental",
            "summary": "`CfnEC2Fleet.FleetLaunchTemplateSpecificationRequestProperty.LaunchTemplateName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1886
          },
          "name": "launchTemplateName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplatespecificationrequest.html#cfn-ec2-ec2fleet-fleetlaunchtemplatespecificationrequest-version",
            "stability": "experimental",
            "summary": "`CfnEC2Fleet.FleetLaunchTemplateSpecificationRequestProperty.Version`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1891
          },
          "name": "version",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnEC2Fleet.OnDemandOptionsRequestProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-ondemandoptionsrequest.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.OnDemandOptionsRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 1933
      },
      "name": "OnDemandOptionsRequestProperty",
      "namespace": "CfnEC2Fleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-ondemandoptionsrequest.html#cfn-ec2-ec2fleet-ondemandoptionsrequest-allocationstrategy",
            "stability": "experimental",
            "summary": "`CfnEC2Fleet.OnDemandOptionsRequestProperty.AllocationStrategy`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1938
          },
          "name": "allocationStrategy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnEC2Fleet.SpotOptionsRequestProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-spotoptionsrequest.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.SpotOptionsRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 1976
      },
      "name": "SpotOptionsRequestProperty",
      "namespace": "CfnEC2Fleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-spotoptionsrequest.html#cfn-ec2-ec2fleet-spotoptionsrequest-allocationstrategy",
            "stability": "experimental",
            "summary": "`CfnEC2Fleet.SpotOptionsRequestProperty.AllocationStrategy`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1981
          },
          "name": "allocationStrategy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-spotoptionsrequest.html#cfn-ec2-ec2fleet-spotoptionsrequest-instanceinterruptionbehavior",
            "stability": "experimental",
            "summary": "`CfnEC2Fleet.SpotOptionsRequestProperty.InstanceInterruptionBehavior`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1986
          },
          "name": "instanceInterruptionBehavior",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-spotoptionsrequest.html#cfn-ec2-ec2fleet-spotoptionsrequest-instancepoolstousecount",
            "stability": "experimental",
            "summary": "`CfnEC2Fleet.SpotOptionsRequestProperty.InstancePoolsToUseCount`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1991
          },
          "name": "instancePoolsToUseCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnEC2Fleet.TagRequestProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-tagrequest.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.TagRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 2033
      },
      "name": "TagRequestProperty",
      "namespace": "CfnEC2Fleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-tagrequest.html#cfn-ec2-ec2fleet-tagrequest-key",
            "stability": "experimental",
            "summary": "`CfnEC2Fleet.TagRequestProperty.Key`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2038
          },
          "name": "key",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-tagrequest.html#cfn-ec2-ec2fleet-tagrequest-value",
            "stability": "experimental",
            "summary": "`CfnEC2Fleet.TagRequestProperty.Value`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2043
          },
          "name": "value",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnEC2Fleet.TagSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-tagspecification.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.TagSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 2083
      },
      "name": "TagSpecificationProperty",
      "namespace": "CfnEC2Fleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-tagspecification.html#cfn-ec2-ec2fleet-tagspecification-resourcetype",
            "stability": "experimental",
            "summary": "`CfnEC2Fleet.TagSpecificationProperty.ResourceType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2088
          },
          "name": "resourceType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-tagspecification.html#cfn-ec2-ec2fleet-tagspecification-tags",
            "stability": "experimental",
            "summary": "`CfnEC2Fleet.TagSpecificationProperty.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2093
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.TagRequestProperty"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnEC2Fleet.TargetCapacitySpecificationRequestProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-targetcapacityspecificationrequest.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.TargetCapacitySpecificationRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 2133
      },
      "name": "TargetCapacitySpecificationRequestProperty",
      "namespace": "CfnEC2Fleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-targetcapacityspecificationrequest.html#cfn-ec2-ec2fleet-targetcapacityspecificationrequest-totaltargetcapacity",
            "stability": "experimental",
            "summary": "`CfnEC2Fleet.TargetCapacitySpecificationRequestProperty.TotalTargetCapacity`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2153
          },
          "name": "totalTargetCapacity",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-targetcapacityspecificationrequest.html#cfn-ec2-ec2fleet-targetcapacityspecificationrequest-defaulttargetcapacitytype",
            "stability": "experimental",
            "summary": "`CfnEC2Fleet.TargetCapacitySpecificationRequestProperty.DefaultTargetCapacityType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2138
          },
          "name": "defaultTargetCapacityType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-targetcapacityspecificationrequest.html#cfn-ec2-ec2fleet-targetcapacityspecificationrequest-ondemandtargetcapacity",
            "stability": "experimental",
            "summary": "`CfnEC2Fleet.TargetCapacitySpecificationRequestProperty.OnDemandTargetCapacity`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2143
          },
          "name": "onDemandTargetCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-targetcapacityspecificationrequest.html#cfn-ec2-ec2fleet-targetcapacityspecificationrequest-spottargetcapacity",
            "stability": "experimental",
            "summary": "`CfnEC2Fleet.TargetCapacitySpecificationRequestProperty.SpotTargetCapacity`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2148
          },
          "name": "spotTargetCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnEC2FleetProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html",
        "stability": "experimental",
        "summary": "Properties for defining a `AWS::EC2::EC2Fleet`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEC2FleetProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 1500
      },
      "name": "CfnEC2FleetProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-launchtemplateconfigs",
            "stability": "experimental",
            "summary": "`AWS::EC2::EC2Fleet.LaunchTemplateConfigs`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1506
          },
          "name": "launchTemplateConfigs",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.FleetLaunchTemplateConfigRequestProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-targetcapacityspecification",
            "stability": "experimental",
            "summary": "`AWS::EC2::EC2Fleet.TargetCapacitySpecification`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1512
          },
          "name": "targetCapacitySpecification",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.TargetCapacitySpecificationRequestProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-excesscapacityterminationpolicy",
            "stability": "experimental",
            "summary": "`AWS::EC2::EC2Fleet.ExcessCapacityTerminationPolicy`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1518
          },
          "name": "excessCapacityTerminationPolicy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-ondemandoptions",
            "stability": "experimental",
            "summary": "`AWS::EC2::EC2Fleet.OnDemandOptions`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1524
          },
          "name": "onDemandOptions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.OnDemandOptionsRequestProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-replaceunhealthyinstances",
            "stability": "experimental",
            "summary": "`AWS::EC2::EC2Fleet.ReplaceUnhealthyInstances`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1530
          },
          "name": "replaceUnhealthyInstances",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-spotoptions",
            "stability": "experimental",
            "summary": "`AWS::EC2::EC2Fleet.SpotOptions`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1536
          },
          "name": "spotOptions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.SpotOptionsRequestProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-tagspecifications",
            "stability": "experimental",
            "summary": "`AWS::EC2::EC2Fleet.TagSpecifications`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1542
          },
          "name": "tagSpecifications",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.TagSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-terminateinstanceswithexpiration",
            "stability": "experimental",
            "summary": "`AWS::EC2::EC2Fleet.TerminateInstancesWithExpiration`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1548
          },
          "name": "terminateInstancesWithExpiration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-type",
            "stability": "experimental",
            "summary": "`AWS::EC2::EC2Fleet.Type`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1554
          },
          "name": "type",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-validfrom",
            "stability": "experimental",
            "summary": "`AWS::EC2::EC2Fleet.ValidFrom`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1560
          },
          "name": "validFrom",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-validuntil",
            "stability": "experimental",
            "summary": "`AWS::EC2::EC2Fleet.ValidUntil`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1566
          },
          "name": "validUntil",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnEIP": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/cdk.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::EIP"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip.html",
        "stability": "experimental",
        "summary": "A CloudFormation `AWS::EC2::EIP`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEIP",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Create a new `AWS::EC2::EIP`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnEIPProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 2259
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2311
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnEIP",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2263
          },
          "name": "cfnResourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "AllocationId"
            },
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2268
          },
          "name": "attrAllocationId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2304
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip.html#cfn-ec2-eip-domain",
            "stability": "experimental",
            "summary": "`AWS::EC2::EIP.Domain`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2274
          },
          "name": "domain",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip.html#cfn-ec2-eip-instanceid",
            "stability": "experimental",
            "summary": "`AWS::EC2::EIP.InstanceId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2280
          },
          "name": "instanceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip.html#cfn-ec2-eip-publicipv4pool",
            "stability": "experimental",
            "summary": "`AWS::EC2::EIP.PublicIpv4Pool`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2286
          },
          "name": "publicIpv4Pool",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnEIPAssociation": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/cdk.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::EIPAssociation"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip-association.html",
        "stability": "experimental",
        "summary": "A CloudFormation `AWS::EC2::EIPAssociation`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEIPAssociation",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Create a new `AWS::EC2::EIPAssociation`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnEIPAssociationProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 2397
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2459
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnEIPAssociation",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2401
          },
          "name": "cfnResourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2450
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip-association.html#cfn-ec2-eipassociation-allocationid",
            "stability": "experimental",
            "summary": "`AWS::EC2::EIPAssociation.AllocationId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2407
          },
          "name": "allocationId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip-association.html#cfn-ec2-eipassociation-eip",
            "stability": "experimental",
            "summary": "`AWS::EC2::EIPAssociation.EIP`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2413
          },
          "name": "eip",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip-association.html#cfn-ec2-eipassociation-instanceid",
            "stability": "experimental",
            "summary": "`AWS::EC2::EIPAssociation.InstanceId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2419
          },
          "name": "instanceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip-association.html#cfn-ec2-eipassociation-networkinterfaceid",
            "stability": "experimental",
            "summary": "`AWS::EC2::EIPAssociation.NetworkInterfaceId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2425
          },
          "name": "networkInterfaceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip-association.html#cfn-ec2-eipassociation-PrivateIpAddress",
            "stability": "experimental",
            "summary": "`AWS::EC2::EIPAssociation.PrivateIpAddress`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2431
          },
          "name": "privateIpAddress",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnEIPAssociationProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip-association.html",
        "stability": "experimental",
        "summary": "Properties for defining a `AWS::EC2::EIPAssociation`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEIPAssociationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 2320
      },
      "name": "CfnEIPAssociationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip-association.html#cfn-ec2-eipassociation-allocationid",
            "stability": "experimental",
            "summary": "`AWS::EC2::EIPAssociation.AllocationId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2326
          },
          "name": "allocationId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip-association.html#cfn-ec2-eipassociation-eip",
            "stability": "experimental",
            "summary": "`AWS::EC2::EIPAssociation.EIP`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2332
          },
          "name": "eip",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip-association.html#cfn-ec2-eipassociation-instanceid",
            "stability": "experimental",
            "summary": "`AWS::EC2::EIPAssociation.InstanceId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2338
          },
          "name": "instanceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip-association.html#cfn-ec2-eipassociation-networkinterfaceid",
            "stability": "experimental",
            "summary": "`AWS::EC2::EIPAssociation.NetworkInterfaceId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2344
          },
          "name": "networkInterfaceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip-association.html#cfn-ec2-eipassociation-PrivateIpAddress",
            "stability": "experimental",
            "summary": "`AWS::EC2::EIPAssociation.PrivateIpAddress`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2350
          },
          "name": "privateIpAddress",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnEIPProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip.html",
        "stability": "experimental",
        "summary": "Properties for defining a `AWS::EC2::EIP`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEIPProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 2198
      },
      "name": "CfnEIPProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip.html#cfn-ec2-eip-domain",
            "stability": "experimental",
            "summary": "`AWS::EC2::EIP.Domain`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2204
          },
          "name": "domain",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip.html#cfn-ec2-eip-instanceid",
            "stability": "experimental",
            "summary": "`AWS::EC2::EIP.InstanceId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2210
          },
          "name": "instanceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip.html#cfn-ec2-eip-publicipv4pool",
            "stability": "experimental",
            "summary": "`AWS::EC2::EIP.PublicIpv4Pool`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2216
          },
          "name": "publicIpv4Pool",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnEgressOnlyInternetGateway": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/cdk.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::EgressOnlyInternetGateway"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-egressonlyinternetgateway.html",
        "stability": "experimental",
        "summary": "A CloudFormation `AWS::EC2::EgressOnlyInternetGateway`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEgressOnlyInternetGateway",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Create a new `AWS::EC2::EgressOnlyInternetGateway`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnEgressOnlyInternetGatewayProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 2514
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2545
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnEgressOnlyInternetGateway",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2518
          },
          "name": "cfnResourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2540
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-egressonlyinternetgateway.html#cfn-ec2-egressonlyinternetgateway-vpcid",
            "stability": "experimental",
            "summary": "`AWS::EC2::EgressOnlyInternetGateway.VpcId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2524
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnEgressOnlyInternetGatewayProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-egressonlyinternetgateway.html",
        "stability": "experimental",
        "summary": "Properties for defining a `AWS::EC2::EgressOnlyInternetGateway`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEgressOnlyInternetGatewayProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 2468
      },
      "name": "CfnEgressOnlyInternetGatewayProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-egressonlyinternetgateway.html#cfn-ec2-egressonlyinternetgateway-vpcid",
            "stability": "experimental",
            "summary": "`AWS::EC2::EgressOnlyInternetGateway.VpcId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2474
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnFlowLog": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/cdk.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::FlowLog"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html",
        "stability": "experimental",
        "summary": "A CloudFormation `AWS::EC2::FlowLog`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnFlowLog",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Create a new `AWS::EC2::FlowLog`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnFlowLogProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 2650
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2731
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnFlowLog",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2654
          },
          "name": "cfnResourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2720
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-resourceid",
            "stability": "experimental",
            "summary": "`AWS::EC2::FlowLog.ResourceId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2660
          },
          "name": "resourceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-resourcetype",
            "stability": "experimental",
            "summary": "`AWS::EC2::FlowLog.ResourceType`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2666
          },
          "name": "resourceType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-traffictype",
            "stability": "experimental",
            "summary": "`AWS::EC2::FlowLog.TrafficType`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2672
          },
          "name": "trafficType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-deliverlogspermissionarn",
            "stability": "experimental",
            "summary": "`AWS::EC2::FlowLog.DeliverLogsPermissionArn`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2678
          },
          "name": "deliverLogsPermissionArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-logdestination",
            "stability": "experimental",
            "summary": "`AWS::EC2::FlowLog.LogDestination`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2684
          },
          "name": "logDestination",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-logdestinationtype",
            "stability": "experimental",
            "summary": "`AWS::EC2::FlowLog.LogDestinationType`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2690
          },
          "name": "logDestinationType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-loggroupname",
            "stability": "experimental",
            "summary": "`AWS::EC2::FlowLog.LogGroupName`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2696
          },
          "name": "logGroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnFlowLogProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html",
        "stability": "experimental",
        "summary": "Properties for defining a `AWS::EC2::FlowLog`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnFlowLogProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 2554
      },
      "name": "CfnFlowLogProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-resourceid",
            "stability": "experimental",
            "summary": "`AWS::EC2::FlowLog.ResourceId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2560
          },
          "name": "resourceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-resourcetype",
            "stability": "experimental",
            "summary": "`AWS::EC2::FlowLog.ResourceType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2566
          },
          "name": "resourceType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-traffictype",
            "stability": "experimental",
            "summary": "`AWS::EC2::FlowLog.TrafficType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2572
          },
          "name": "trafficType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-deliverlogspermissionarn",
            "stability": "experimental",
            "summary": "`AWS::EC2::FlowLog.DeliverLogsPermissionArn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2578
          },
          "name": "deliverLogsPermissionArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-logdestination",
            "stability": "experimental",
            "summary": "`AWS::EC2::FlowLog.LogDestination`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2584
          },
          "name": "logDestination",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-logdestinationtype",
            "stability": "experimental",
            "summary": "`AWS::EC2::FlowLog.LogDestinationType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2590
          },
          "name": "logDestinationType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-loggroupname",
            "stability": "experimental",
            "summary": "`AWS::EC2::FlowLog.LogGroupName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2596
          },
          "name": "logGroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnHost": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/cdk.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::Host"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html",
        "stability": "experimental",
        "summary": "A CloudFormation `AWS::EC2::Host`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnHost",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Create a new `AWS::EC2::Host`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnHostProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 2811
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2867
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnHost",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2815
          },
          "name": "cfnResourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2859
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html#cfn-ec2-host-availabilityzone",
            "stability": "experimental",
            "summary": "`AWS::EC2::Host.AvailabilityZone`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2821
          },
          "name": "availabilityZone",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html#cfn-ec2-host-instancetype",
            "stability": "experimental",
            "summary": "`AWS::EC2::Host.InstanceType`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2827
          },
          "name": "instanceType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html#cfn-ec2-host-autoplacement",
            "stability": "experimental",
            "summary": "`AWS::EC2::Host.AutoPlacement`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2833
          },
          "name": "autoPlacement",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html#cfn-ec2-host-hostrecovery",
            "stability": "experimental",
            "summary": "`AWS::EC2::Host.HostRecovery`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2839
          },
          "name": "hostRecovery",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnHostProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html",
        "stability": "experimental",
        "summary": "Properties for defining a `AWS::EC2::Host`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnHostProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 2740
      },
      "name": "CfnHostProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html#cfn-ec2-host-availabilityzone",
            "stability": "experimental",
            "summary": "`AWS::EC2::Host.AvailabilityZone`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2746
          },
          "name": "availabilityZone",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html#cfn-ec2-host-instancetype",
            "stability": "experimental",
            "summary": "`AWS::EC2::Host.InstanceType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2752
          },
          "name": "instanceType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html#cfn-ec2-host-autoplacement",
            "stability": "experimental",
            "summary": "`AWS::EC2::Host.AutoPlacement`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2758
          },
          "name": "autoPlacement",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html#cfn-ec2-host-hostrecovery",
            "stability": "experimental",
            "summary": "`AWS::EC2::Host.HostRecovery`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2764
          },
          "name": "hostRecovery",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnInstance": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/cdk.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::Instance"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html",
        "stability": "experimental",
        "summary": "A CloudFormation `AWS::EC2::Instance`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnInstance",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Create a new `AWS::EC2::Instance`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnInstanceProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 3185
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3509
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnInstance",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3189
          },
          "name": "cfnResourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "AvailabilityZone"
            },
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3194
          },
          "name": "attrAvailabilityZone",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "PrivateDnsName"
            },
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3199
          },
          "name": "attrPrivateDnsName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "PrivateIp"
            },
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3204
          },
          "name": "attrPrivateIp",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "PublicDnsName"
            },
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3209
          },
          "name": "attrPublicDnsName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "PublicIp"
            },
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3214
          },
          "name": "attrPublicIp",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3471
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-tags",
            "stability": "experimental",
            "summary": "`AWS::EC2::Instance.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3400
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/cdk.TagManager"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-additionalinfo",
            "stability": "experimental",
            "summary": "`AWS::EC2::Instance.AdditionalInfo`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3220
          },
          "name": "additionalInfo",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-affinity",
            "stability": "experimental",
            "summary": "`AWS::EC2::Instance.Affinity`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3226
          },
          "name": "affinity",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-availabilityzone",
            "stability": "experimental",
            "summary": "`AWS::EC2::Instance.AvailabilityZone`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3232
          },
          "name": "availabilityZone",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-blockdevicemappings",
            "stability": "experimental",
            "summary": "`AWS::EC2::Instance.BlockDeviceMappings`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3238
          },
          "name": "blockDeviceMappings",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnInstance.BlockDeviceMappingProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-creditspecification",
            "stability": "experimental",
            "summary": "`AWS::EC2::Instance.CreditSpecification`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3244
          },
          "name": "creditSpecification",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnInstance.CreditSpecificationProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-disableapitermination",
            "stability": "experimental",
            "summary": "`AWS::EC2::Instance.DisableApiTermination`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3250
          },
          "name": "disableApiTermination",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-ebsoptimized",
            "stability": "experimental",
            "summary": "`AWS::EC2::Instance.EbsOptimized`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3256
          },
          "name": "ebsOptimized",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-elasticgpuspecifications",
            "stability": "experimental",
            "summary": "`AWS::EC2::Instance.ElasticGpuSpecifications`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3262
          },
          "name": "elasticGpuSpecifications",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnInstance.ElasticGpuSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-elasticinferenceaccelerators",
            "stability": "experimental",
            "summary": "`AWS::EC2::Instance.ElasticInferenceAccelerators`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3268
          },
          "name": "elasticInferenceAccelerators",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnInstance.ElasticInferenceAcceleratorProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-hostid",
            "stability": "experimental",
            "summary": "`AWS::EC2::Instance.HostId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3274
          },
          "name": "hostId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-iaminstanceprofile",
            "stability": "experimental",
            "summary": "`AWS::EC2::Instance.IamInstanceProfile`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3280
          },
          "name": "iamInstanceProfile",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-imageid",
            "stability": "experimental",
            "summary": "`AWS::EC2::Instance.ImageId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3286
          },
          "name": "imageId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-instanceinitiatedshutdownbehavior",
            "stability": "experimental",
            "summary": "`AWS::EC2::Instance.InstanceInitiatedShutdownBehavior`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3292
          },
          "name": "instanceInitiatedShutdownBehavior",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-instancetype",
            "stability": "experimental",
            "summary": "`AWS::EC2::Instance.InstanceType`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3298
          },
          "name": "instanceType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-ipv6addresscount",
            "stability": "experimental",
            "summary": "`AWS::EC2::Instance.Ipv6AddressCount`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3304
          },
          "name": "ipv6AddressCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-ipv6addresses",
            "stability": "experimental",
            "summary": "`AWS::EC2::Instance.Ipv6Addresses`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3310
          },
          "name": "ipv6Addresses",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnInstance.InstanceIpv6AddressProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-kernelid",
            "stability": "experimental",
            "summary": "`AWS::EC2::Instance.KernelId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3316
          },
          "name": "kernelId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-keyname",
            "stability": "experimental",
            "summary": "`AWS::EC2::Instance.KeyName`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3322
          },
          "name": "keyName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-launchtemplate",
            "stability": "experimental",
            "summary": "`AWS::EC2::Instance.LaunchTemplate`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3328
          },
          "name": "launchTemplate",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnInstance.LaunchTemplateSpecificationProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-licensespecifications",
            "stability": "experimental",
            "summary": "`AWS::EC2::Instance.LicenseSpecifications`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3334
          },
          "name": "licenseSpecifications",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnInstance.LicenseSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-monitoring",
            "stability": "experimental",
            "summary": "`AWS::EC2::Instance.Monitoring`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3340
          },
          "name": "monitoring",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-networkinterfaces",
            "stability": "experimental",
            "summary": "`AWS::EC2::Instance.NetworkInterfaces`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3346
          },
          "name": "networkInterfaces",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnInstance.NetworkInterfaceProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-placementgroupname",
            "stability": "experimental",
            "summary": "`AWS::EC2::Instance.PlacementGroupName`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3352
          },
          "name": "placementGroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-privateipaddress",
            "stability": "experimental",
            "summary": "`AWS::EC2::Instance.PrivateIpAddress`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3358
          },
          "name": "privateIpAddress",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-ramdiskid",
            "stability": "experimental",
            "summary": "`AWS::EC2::Instance.RamdiskId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3364
          },
          "name": "ramdiskId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-securitygroupids",
            "stability": "experimental",
            "summary": "`AWS::EC2::Instance.SecurityGroupIds`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3370
          },
          "name": "securityGroupIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-securitygroups",
            "stability": "experimental",
            "summary": "`AWS::EC2::Instance.SecurityGroups`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3376
          },
          "name": "securityGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-sourcedestcheck",
            "stability": "experimental",
            "summary": "`AWS::EC2::Instance.SourceDestCheck`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3382
          },
          "name": "sourceDestCheck",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-ssmassociations",
            "stability": "experimental",
            "summary": "`AWS::EC2::Instance.SsmAssociations`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3388
          },
          "name": "ssmAssociations",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnInstance.SsmAssociationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-subnetid",
            "stability": "experimental",
            "summary": "`AWS::EC2::Instance.SubnetId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3394
          },
          "name": "subnetId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-tenancy",
            "stability": "experimental",
            "summary": "`AWS::EC2::Instance.Tenancy`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3406
          },
          "name": "tenancy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-userdata",
            "stability": "experimental",
            "summary": "`AWS::EC2::Instance.UserData`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3412
          },
          "name": "userData",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-volumes",
            "stability": "experimental",
            "summary": "`AWS::EC2::Instance.Volumes`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3418
          },
          "name": "volumes",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnInstance.VolumeProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnInstance.AssociationParameterProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-ssmassociations-associationparameters.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnInstance.AssociationParameterProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 3518
      },
      "name": "AssociationParameterProperty",
      "namespace": "CfnInstance",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-ssmassociations-associationparameters.html#cfn-ec2-instance-ssmassociations-associationparameters-key",
            "stability": "experimental",
            "summary": "`CfnInstance.AssociationParameterProperty.Key`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3523
          },
          "name": "key",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-ssmassociations-associationparameters.html#cfn-ec2-instance-ssmassociations-associationparameters-value",
            "stability": "experimental",
            "summary": "`CfnInstance.AssociationParameterProperty.Value`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3528
          },
          "name": "value",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnInstance.BlockDeviceMappingProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-mapping.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnInstance.BlockDeviceMappingProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 3570
      },
      "name": "BlockDeviceMappingProperty",
      "namespace": "CfnInstance",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-mapping.html#cfn-ec2-blockdev-mapping-devicename",
            "stability": "experimental",
            "summary": "`CfnInstance.BlockDeviceMappingProperty.DeviceName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3575
          },
          "name": "deviceName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-mapping.html#cfn-ec2-blockdev-mapping-ebs",
            "stability": "experimental",
            "summary": "`CfnInstance.BlockDeviceMappingProperty.Ebs`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3580
          },
          "name": "ebs",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnInstance.EbsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-mapping.html#cfn-ec2-blockdev-mapping-nodevice",
            "stability": "experimental",
            "summary": "`CfnInstance.BlockDeviceMappingProperty.NoDevice`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3585
          },
          "name": "noDevice",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnInstance.NoDeviceProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-mapping.html#cfn-ec2-blockdev-mapping-virtualname",
            "stability": "experimental",
            "summary": "`CfnInstance.BlockDeviceMappingProperty.VirtualName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3590
          },
          "name": "virtualName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnInstance.CreditSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-creditspecification.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnInstance.CreditSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 3635
      },
      "name": "CreditSpecificationProperty",
      "namespace": "CfnInstance",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-creditspecification.html#cfn-ec2-instance-creditspecification-cpucredits",
            "stability": "experimental",
            "summary": "`CfnInstance.CreditSpecificationProperty.CPUCredits`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3640
          },
          "name": "cpuCredits",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnInstance.EbsProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-template.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnInstance.EbsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 3678
      },
      "name": "EbsProperty",
      "namespace": "CfnInstance",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-template.html#cfn-ec2-blockdev-template-deleteontermination",
            "stability": "experimental",
            "summary": "`CfnInstance.EbsProperty.DeleteOnTermination`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3683
          },
          "name": "deleteOnTermination",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-template.html#cfn-ec2-blockdev-template-encrypted",
            "stability": "experimental",
            "summary": "`CfnInstance.EbsProperty.Encrypted`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3688
          },
          "name": "encrypted",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-template.html#cfn-ec2-blockdev-template-iops",
            "stability": "experimental",
            "summary": "`CfnInstance.EbsProperty.Iops`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3693
          },
          "name": "iops",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-template.html#cfn-ec2-blockdev-template-snapshotid",
            "stability": "experimental",
            "summary": "`CfnInstance.EbsProperty.SnapshotId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3698
          },
          "name": "snapshotId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-template.html#cfn-ec2-blockdev-template-volumesize",
            "stability": "experimental",
            "summary": "`CfnInstance.EbsProperty.VolumeSize`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3703
          },
          "name": "volumeSize",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-template.html#cfn-ec2-blockdev-template-volumetype",
            "stability": "experimental",
            "summary": "`CfnInstance.EbsProperty.VolumeType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3708
          },
          "name": "volumeType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnInstance.ElasticGpuSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-elasticgpuspecification.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnInstance.ElasticGpuSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 3756
      },
      "name": "ElasticGpuSpecificationProperty",
      "namespace": "CfnInstance",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-elasticgpuspecification.html#cfn-ec2-instance-elasticgpuspecification-type",
            "stability": "experimental",
            "summary": "`CfnInstance.ElasticGpuSpecificationProperty.Type`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3761
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnInstance.ElasticInferenceAcceleratorProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-elasticinferenceaccelerator.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnInstance.ElasticInferenceAcceleratorProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 3800
      },
      "name": "ElasticInferenceAcceleratorProperty",
      "namespace": "CfnInstance",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-elasticinferenceaccelerator.html#cfn-ec2-instance-elasticinferenceaccelerator-type",
            "stability": "experimental",
            "summary": "`CfnInstance.ElasticInferenceAcceleratorProperty.Type`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3805
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnInstance.InstanceIpv6AddressProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-instanceipv6address.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnInstance.InstanceIpv6AddressProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 3844
      },
      "name": "InstanceIpv6AddressProperty",
      "namespace": "CfnInstance",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-instanceipv6address.html#cfn-ec2-instance-instanceipv6address-ipv6address",
            "stability": "experimental",
            "summary": "`CfnInstance.InstanceIpv6AddressProperty.Ipv6Address`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3849
          },
          "name": "ipv6Address",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnInstance.LaunchTemplateSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-launchtemplatespecification.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnInstance.LaunchTemplateSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 3888
      },
      "name": "LaunchTemplateSpecificationProperty",
      "namespace": "CfnInstance",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-launchtemplatespecification.html#cfn-ec2-instance-launchtemplatespecification-version",
            "stability": "experimental",
            "summary": "`CfnInstance.LaunchTemplateSpecificationProperty.Version`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3903
          },
          "name": "version",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-launchtemplatespecification.html#cfn-ec2-instance-launchtemplatespecification-launchtemplateid",
            "stability": "experimental",
            "summary": "`CfnInstance.LaunchTemplateSpecificationProperty.LaunchTemplateId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3893
          },
          "name": "launchTemplateId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-launchtemplatespecification.html#cfn-ec2-instance-launchtemplatespecification-launchtemplatename",
            "stability": "experimental",
            "summary": "`CfnInstance.LaunchTemplateSpecificationProperty.LaunchTemplateName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3898
          },
          "name": "launchTemplateName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnInstance.LicenseSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-licensespecification.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnInstance.LicenseSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 3946
      },
      "name": "LicenseSpecificationProperty",
      "namespace": "CfnInstance",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-licensespecification.html#cfn-ec2-instance-licensespecification-licenseconfigurationarn",
            "stability": "experimental",
            "summary": "`CfnInstance.LicenseSpecificationProperty.LicenseConfigurationArn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3951
          },
          "name": "licenseConfigurationArn",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnInstance.NetworkInterfaceProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnInstance.NetworkInterfaceProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 3990
      },
      "name": "NetworkInterfaceProperty",
      "namespace": "CfnInstance",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#aws-properties-ec2-network-iface-embedded-deviceindex",
            "stability": "experimental",
            "summary": "`CfnInstance.NetworkInterfaceProperty.DeviceIndex`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4010
          },
          "name": "deviceIndex",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#aws-properties-ec2-network-iface-embedded-associatepubip",
            "stability": "experimental",
            "summary": "`CfnInstance.NetworkInterfaceProperty.AssociatePublicIpAddress`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3995
          },
          "name": "associatePublicIpAddress",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#aws-properties-ec2-network-iface-embedded-delete",
            "stability": "experimental",
            "summary": "`CfnInstance.NetworkInterfaceProperty.DeleteOnTermination`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4000
          },
          "name": "deleteOnTermination",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#aws-properties-ec2-network-iface-embedded-description",
            "stability": "experimental",
            "summary": "`CfnInstance.NetworkInterfaceProperty.Description`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4005
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#aws-properties-ec2-network-iface-embedded-groupset",
            "stability": "experimental",
            "summary": "`CfnInstance.NetworkInterfaceProperty.GroupSet`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4015
          },
          "name": "groupSet",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#cfn-ec2-instance-networkinterface-ipv6addresscount",
            "stability": "experimental",
            "summary": "`CfnInstance.NetworkInterfaceProperty.Ipv6AddressCount`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4020
          },
          "name": "ipv6AddressCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#cfn-ec2-instance-networkinterface-ipv6addresses",
            "stability": "experimental",
            "summary": "`CfnInstance.NetworkInterfaceProperty.Ipv6Addresses`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4025
          },
          "name": "ipv6Addresses",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnInstance.InstanceIpv6AddressProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#aws-properties-ec2-network-iface-embedded-network-iface",
            "stability": "experimental",
            "summary": "`CfnInstance.NetworkInterfaceProperty.NetworkInterfaceId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4030
          },
          "name": "networkInterfaceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#aws-properties-ec2-network-iface-embedded-privateipaddress",
            "stability": "experimental",
            "summary": "`CfnInstance.NetworkInterfaceProperty.PrivateIpAddress`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4035
          },
          "name": "privateIpAddress",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#aws-properties-ec2-network-iface-embedded-privateipaddresses",
            "stability": "experimental",
            "summary": "`CfnInstance.NetworkInterfaceProperty.PrivateIpAddresses`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4040
          },
          "name": "privateIpAddresses",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnInstance.PrivateIpAddressSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#aws-properties-ec2-network-iface-embedded-secondprivateip",
            "stability": "experimental",
            "summary": "`CfnInstance.NetworkInterfaceProperty.SecondaryPrivateIpAddressCount`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4045
          },
          "name": "secondaryPrivateIpAddressCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#aws-properties-ec2-network-iface-embedded-subnetid",
            "stability": "experimental",
            "summary": "`CfnInstance.NetworkInterfaceProperty.SubnetId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4050
          },
          "name": "subnetId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnInstance.NoDeviceProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-nodevice.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnInstance.NoDeviceProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 4112
      },
      "name": "NoDeviceProperty",
      "namespace": "CfnInstance"
    },
    "@aws-cdk/aws-ec2.CfnInstance.PrivateIpAddressSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-interface-privateipspec.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnInstance.PrivateIpAddressSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 4148
      },
      "name": "PrivateIpAddressSpecificationProperty",
      "namespace": "CfnInstance",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-interface-privateipspec.html#cfn-ec2-networkinterface-privateipspecification-primary",
            "stability": "experimental",
            "summary": "`CfnInstance.PrivateIpAddressSpecificationProperty.Primary`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4153
          },
          "name": "primary",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-interface-privateipspec.html#cfn-ec2-networkinterface-privateipspecification-privateipaddress",
            "stability": "experimental",
            "summary": "`CfnInstance.PrivateIpAddressSpecificationProperty.PrivateIpAddress`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4158
          },
          "name": "privateIpAddress",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnInstance.SsmAssociationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-ssmassociations.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnInstance.SsmAssociationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 4200
      },
      "name": "SsmAssociationProperty",
      "namespace": "CfnInstance",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-ssmassociations.html#cfn-ec2-instance-ssmassociations-documentname",
            "stability": "experimental",
            "summary": "`CfnInstance.SsmAssociationProperty.DocumentName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4210
          },
          "name": "documentName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-ssmassociations.html#cfn-ec2-instance-ssmassociations-associationparameters",
            "stability": "experimental",
            "summary": "`CfnInstance.SsmAssociationProperty.AssociationParameters`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4205
          },
          "name": "associationParameters",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnInstance.AssociationParameterProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnInstance.VolumeProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-mount-point.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnInstance.VolumeProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 4251
      },
      "name": "VolumeProperty",
      "namespace": "CfnInstance",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-mount-point.html#cfn-ec2-mountpoint-device",
            "stability": "experimental",
            "summary": "`CfnInstance.VolumeProperty.Device`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4256
          },
          "name": "device",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-mount-point.html#cfn-ec2-mountpoint-volumeid",
            "stability": "experimental",
            "summary": "`CfnInstance.VolumeProperty.VolumeId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4261
          },
          "name": "volumeId",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnInstanceProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html",
        "stability": "experimental",
        "summary": "Properties for defining a `AWS::EC2::Instance`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnInstanceProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 2876
      },
      "name": "CfnInstanceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-additionalinfo",
            "stability": "experimental",
            "summary": "`AWS::EC2::Instance.AdditionalInfo`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2882
          },
          "name": "additionalInfo",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-affinity",
            "stability": "experimental",
            "summary": "`AWS::EC2::Instance.Affinity`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2888
          },
          "name": "affinity",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-availabilityzone",
            "stability": "experimental",
            "summary": "`AWS::EC2::Instance.AvailabilityZone`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2894
          },
          "name": "availabilityZone",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-blockdevicemappings",
            "stability": "experimental",
            "summary": "`AWS::EC2::Instance.BlockDeviceMappings`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2900
          },
          "name": "blockDeviceMappings",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnInstance.BlockDeviceMappingProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-creditspecification",
            "stability": "experimental",
            "summary": "`AWS::EC2::Instance.CreditSpecification`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2906
          },
          "name": "creditSpecification",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnInstance.CreditSpecificationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-disableapitermination",
            "stability": "experimental",
            "summary": "`AWS::EC2::Instance.DisableApiTermination`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2912
          },
          "name": "disableApiTermination",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-ebsoptimized",
            "stability": "experimental",
            "summary": "`AWS::EC2::Instance.EbsOptimized`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2918
          },
          "name": "ebsOptimized",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-elasticgpuspecifications",
            "stability": "experimental",
            "summary": "`AWS::EC2::Instance.ElasticGpuSpecifications`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2924
          },
          "name": "elasticGpuSpecifications",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnInstance.ElasticGpuSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-elasticinferenceaccelerators",
            "stability": "experimental",
            "summary": "`AWS::EC2::Instance.ElasticInferenceAccelerators`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2930
          },
          "name": "elasticInferenceAccelerators",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnInstance.ElasticInferenceAcceleratorProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-hostid",
            "stability": "experimental",
            "summary": "`AWS::EC2::Instance.HostId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2936
          },
          "name": "hostId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-iaminstanceprofile",
            "stability": "experimental",
            "summary": "`AWS::EC2::Instance.IamInstanceProfile`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2942
          },
          "name": "iamInstanceProfile",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-imageid",
            "stability": "experimental",
            "summary": "`AWS::EC2::Instance.ImageId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2948
          },
          "name": "imageId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-instanceinitiatedshutdownbehavior",
            "stability": "experimental",
            "summary": "`AWS::EC2::Instance.InstanceInitiatedShutdownBehavior`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2954
          },
          "name": "instanceInitiatedShutdownBehavior",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-instancetype",
            "stability": "experimental",
            "summary": "`AWS::EC2::Instance.InstanceType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2960
          },
          "name": "instanceType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-ipv6addresscount",
            "stability": "experimental",
            "summary": "`AWS::EC2::Instance.Ipv6AddressCount`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2966
          },
          "name": "ipv6AddressCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-ipv6addresses",
            "stability": "experimental",
            "summary": "`AWS::EC2::Instance.Ipv6Addresses`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2972
          },
          "name": "ipv6Addresses",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnInstance.InstanceIpv6AddressProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-kernelid",
            "stability": "experimental",
            "summary": "`AWS::EC2::Instance.KernelId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2978
          },
          "name": "kernelId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-keyname",
            "stability": "experimental",
            "summary": "`AWS::EC2::Instance.KeyName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2984
          },
          "name": "keyName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-launchtemplate",
            "stability": "experimental",
            "summary": "`AWS::EC2::Instance.LaunchTemplate`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2990
          },
          "name": "launchTemplate",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnInstance.LaunchTemplateSpecificationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-licensespecifications",
            "stability": "experimental",
            "summary": "`AWS::EC2::Instance.LicenseSpecifications`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2996
          },
          "name": "licenseSpecifications",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnInstance.LicenseSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-monitoring",
            "stability": "experimental",
            "summary": "`AWS::EC2::Instance.Monitoring`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3002
          },
          "name": "monitoring",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-networkinterfaces",
            "stability": "experimental",
            "summary": "`AWS::EC2::Instance.NetworkInterfaces`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3008
          },
          "name": "networkInterfaces",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnInstance.NetworkInterfaceProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-placementgroupname",
            "stability": "experimental",
            "summary": "`AWS::EC2::Instance.PlacementGroupName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3014
          },
          "name": "placementGroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-privateipaddress",
            "stability": "experimental",
            "summary": "`AWS::EC2::Instance.PrivateIpAddress`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3020
          },
          "name": "privateIpAddress",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-ramdiskid",
            "stability": "experimental",
            "summary": "`AWS::EC2::Instance.RamdiskId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3026
          },
          "name": "ramdiskId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-securitygroupids",
            "stability": "experimental",
            "summary": "`AWS::EC2::Instance.SecurityGroupIds`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3032
          },
          "name": "securityGroupIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-securitygroups",
            "stability": "experimental",
            "summary": "`AWS::EC2::Instance.SecurityGroups`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3038
          },
          "name": "securityGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-sourcedestcheck",
            "stability": "experimental",
            "summary": "`AWS::EC2::Instance.SourceDestCheck`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3044
          },
          "name": "sourceDestCheck",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-ssmassociations",
            "stability": "experimental",
            "summary": "`AWS::EC2::Instance.SsmAssociations`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3050
          },
          "name": "ssmAssociations",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnInstance.SsmAssociationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-subnetid",
            "stability": "experimental",
            "summary": "`AWS::EC2::Instance.SubnetId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3056
          },
          "name": "subnetId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-tags",
            "stability": "experimental",
            "summary": "`AWS::EC2::Instance.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3062
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cdk.CfnTag"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-tenancy",
            "stability": "experimental",
            "summary": "`AWS::EC2::Instance.Tenancy`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3068
          },
          "name": "tenancy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-userdata",
            "stability": "experimental",
            "summary": "`AWS::EC2::Instance.UserData`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3074
          },
          "name": "userData",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-volumes",
            "stability": "experimental",
            "summary": "`AWS::EC2::Instance.Volumes`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3080
          },
          "name": "volumes",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnInstance.VolumeProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnInternetGateway": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/cdk.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::InternetGateway"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-internetgateway.html",
        "stability": "experimental",
        "summary": "A CloudFormation `AWS::EC2::InternetGateway`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnInternetGateway",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Create a new `AWS::EC2::InternetGateway`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnInternetGatewayProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 4348
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4378
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnInternetGateway",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4352
          },
          "name": "cfnResourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4373
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-internetgateway.html#cfn-ec2-internetgateway-tags",
            "stability": "experimental",
            "summary": "`AWS::EC2::InternetGateway.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4358
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/cdk.TagManager"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnInternetGatewayProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-internetgateway.html",
        "stability": "experimental",
        "summary": "Properties for defining a `AWS::EC2::InternetGateway`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnInternetGatewayProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 4303
      },
      "name": "CfnInternetGatewayProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-internetgateway.html#cfn-ec2-internetgateway-tags",
            "stability": "experimental",
            "summary": "`AWS::EC2::InternetGateway.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4309
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cdk.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/cdk.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::LaunchTemplate"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate.html",
        "stability": "experimental",
        "summary": "A CloudFormation `AWS::EC2::LaunchTemplate`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Create a new `AWS::EC2::LaunchTemplate`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplateProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 4440
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4490
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnLaunchTemplate",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4444
          },
          "name": "cfnResourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "DefaultVersionNumber"
            },
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4449
          },
          "name": "attrDefaultVersionNumber",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "LatestVersionNumber"
            },
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4454
          },
          "name": "attrLatestVersionNumber",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4484
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate.html#cfn-ec2-launchtemplate-launchtemplatedata",
            "stability": "experimental",
            "summary": "`AWS::EC2::LaunchTemplate.LaunchTemplateData`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4460
          },
          "name": "launchTemplateData",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.LaunchTemplateDataProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate.html#cfn-ec2-launchtemplate-launchtemplatename",
            "stability": "experimental",
            "summary": "`AWS::EC2::LaunchTemplate.LaunchTemplateName`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4466
          },
          "name": "launchTemplateName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.BlockDeviceMappingProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.BlockDeviceMappingProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 4499
      },
      "name": "BlockDeviceMappingProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping.html#cfn-ec2-launchtemplate-blockdevicemapping-devicename",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.BlockDeviceMappingProperty.DeviceName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4504
          },
          "name": "deviceName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping.html#cfn-ec2-launchtemplate-blockdevicemapping-ebs",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.BlockDeviceMappingProperty.Ebs`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4509
          },
          "name": "ebs",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.EbsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping.html#cfn-ec2-launchtemplate-blockdevicemapping-nodevice",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.BlockDeviceMappingProperty.NoDevice`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4514
          },
          "name": "noDevice",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping.html#cfn-ec2-launchtemplate-blockdevicemapping-virtualname",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.BlockDeviceMappingProperty.VirtualName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4519
          },
          "name": "virtualName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.CapacityReservationSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-capacityreservationspecification.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.CapacityReservationSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 4563
      },
      "name": "CapacityReservationSpecificationProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-capacityreservationspecification.html#cfn-ec2-launchtemplate-launchtemplatedata-capacityreservationspecification-capacityreservationpreference",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.CapacityReservationSpecificationProperty.CapacityReservationPreference`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4568
          },
          "name": "capacityReservationPreference",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-capacityreservationspecification.html#cfn-ec2-launchtemplate-launchtemplatedata-capacityreservationspecification-capacityreservationtarget",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.CapacityReservationSpecificationProperty.CapacityReservationTarget`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4573
          },
          "name": "capacityReservationTarget",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.CapacityReservationTargetProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.CapacityReservationTargetProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-capacityreservationtarget.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.CapacityReservationTargetProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 4613
      },
      "name": "CapacityReservationTargetProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-capacityreservationtarget.html#cfn-ec2-launchtemplate-capacityreservationtarget-capacityreservationid",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.CapacityReservationTargetProperty.CapacityReservationId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4618
          },
          "name": "capacityReservationId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.CpuOptionsProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-cpuoptions.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.CpuOptionsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 4656
      },
      "name": "CpuOptionsProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-cpuoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-cpuoptions-corecount",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.CpuOptionsProperty.CoreCount`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4661
          },
          "name": "coreCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-cpuoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-cpuoptions-threadspercore",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.CpuOptionsProperty.ThreadsPerCore`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4666
          },
          "name": "threadsPerCore",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.CreditSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-creditspecification.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.CreditSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 4706
      },
      "name": "CreditSpecificationProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-creditspecification.html#cfn-ec2-launchtemplate-launchtemplatedata-creditspecification-cpucredits",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.CreditSpecificationProperty.CpuCredits`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4711
          },
          "name": "cpuCredits",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.EbsProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping-ebs.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.EbsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 4749
      },
      "name": "EbsProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping-ebs.html#cfn-ec2-launchtemplate-blockdevicemapping-ebs-deleteontermination",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.EbsProperty.DeleteOnTermination`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4754
          },
          "name": "deleteOnTermination",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping-ebs.html#cfn-ec2-launchtemplate-blockdevicemapping-ebs-encrypted",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.EbsProperty.Encrypted`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4759
          },
          "name": "encrypted",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping-ebs.html#cfn-ec2-launchtemplate-blockdevicemapping-ebs-iops",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.EbsProperty.Iops`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4764
          },
          "name": "iops",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping-ebs.html#cfn-ec2-launchtemplate-blockdevicemapping-ebs-kmskeyid",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.EbsProperty.KmsKeyId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4769
          },
          "name": "kmsKeyId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping-ebs.html#cfn-ec2-launchtemplate-blockdevicemapping-ebs-snapshotid",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.EbsProperty.SnapshotId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4774
          },
          "name": "snapshotId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping-ebs.html#cfn-ec2-launchtemplate-blockdevicemapping-ebs-volumesize",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.EbsProperty.VolumeSize`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4779
          },
          "name": "volumeSize",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping-ebs.html#cfn-ec2-launchtemplate-blockdevicemapping-ebs-volumetype",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.EbsProperty.VolumeType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4784
          },
          "name": "volumeType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.ElasticGpuSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-elasticgpuspecification.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.ElasticGpuSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 4834
      },
      "name": "ElasticGpuSpecificationProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-elasticgpuspecification.html#cfn-ec2-launchtemplate-elasticgpuspecification-type",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.ElasticGpuSpecificationProperty.Type`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4839
          },
          "name": "type",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.HibernationOptionsProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-hibernationoptions.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.HibernationOptionsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 4877
      },
      "name": "HibernationOptionsProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-hibernationoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-hibernationoptions-configured",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.HibernationOptionsProperty.Configured`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4882
          },
          "name": "configured",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.IamInstanceProfileProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-iaminstanceprofile.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.IamInstanceProfileProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 4920
      },
      "name": "IamInstanceProfileProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-iaminstanceprofile.html#cfn-ec2-launchtemplate-launchtemplatedata-iaminstanceprofile-arn",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.IamInstanceProfileProperty.Arn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4925
          },
          "name": "arn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-iaminstanceprofile.html#cfn-ec2-launchtemplate-launchtemplatedata-iaminstanceprofile-name",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.IamInstanceProfileProperty.Name`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4930
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.InstanceMarketOptionsProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancemarketoptions.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.InstanceMarketOptionsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 4970
      },
      "name": "InstanceMarketOptionsProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancemarketoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-instancemarketoptions-markettype",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.InstanceMarketOptionsProperty.MarketType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4975
          },
          "name": "marketType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancemarketoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-instancemarketoptions-spotoptions",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.InstanceMarketOptionsProperty.SpotOptions`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4980
          },
          "name": "spotOptions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.SpotOptionsProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.Ipv6AddProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-ipv6add.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.Ipv6AddProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 5020
      },
      "name": "Ipv6AddProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-ipv6add.html#cfn-ec2-launchtemplate-ipv6add-ipv6address",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.Ipv6AddProperty.Ipv6Address`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5025
          },
          "name": "ipv6Address",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.LaunchTemplateDataProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.LaunchTemplateDataProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 5063
      },
      "name": "LaunchTemplateDataProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-blockdevicemappings",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.LaunchTemplateDataProperty.BlockDeviceMappings`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5068
          },
          "name": "blockDeviceMappings",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.BlockDeviceMappingProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-capacityreservationspecification",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.LaunchTemplateDataProperty.CapacityReservationSpecification`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5073
          },
          "name": "capacityReservationSpecification",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.CapacityReservationSpecificationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-cpuoptions",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.LaunchTemplateDataProperty.CpuOptions`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5078
          },
          "name": "cpuOptions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.CpuOptionsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-creditspecification",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.LaunchTemplateDataProperty.CreditSpecification`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5083
          },
          "name": "creditSpecification",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.CreditSpecificationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-disableapitermination",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.LaunchTemplateDataProperty.DisableApiTermination`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5088
          },
          "name": "disableApiTermination",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-ebsoptimized",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.LaunchTemplateDataProperty.EbsOptimized`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5093
          },
          "name": "ebsOptimized",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-elasticgpuspecifications",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.LaunchTemplateDataProperty.ElasticGpuSpecifications`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5098
          },
          "name": "elasticGpuSpecifications",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.ElasticGpuSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-elasticinferenceaccelerators",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.LaunchTemplateDataProperty.ElasticInferenceAccelerators`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5103
          },
          "name": "elasticInferenceAccelerators",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.LaunchTemplateElasticInferenceAcceleratorProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-hibernationoptions",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.LaunchTemplateDataProperty.HibernationOptions`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5108
          },
          "name": "hibernationOptions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.HibernationOptionsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-iaminstanceprofile",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.LaunchTemplateDataProperty.IamInstanceProfile`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5113
          },
          "name": "iamInstanceProfile",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.IamInstanceProfileProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-imageid",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.LaunchTemplateDataProperty.ImageId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5118
          },
          "name": "imageId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-instanceinitiatedshutdownbehavior",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.LaunchTemplateDataProperty.InstanceInitiatedShutdownBehavior`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5123
          },
          "name": "instanceInitiatedShutdownBehavior",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-instancemarketoptions",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.LaunchTemplateDataProperty.InstanceMarketOptions`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5128
          },
          "name": "instanceMarketOptions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.InstanceMarketOptionsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-instancetype",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.LaunchTemplateDataProperty.InstanceType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5133
          },
          "name": "instanceType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-kernelid",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.LaunchTemplateDataProperty.KernelId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5138
          },
          "name": "kernelId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-keyname",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.LaunchTemplateDataProperty.KeyName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5143
          },
          "name": "keyName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-licensespecifications",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.LaunchTemplateDataProperty.LicenseSpecifications`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5148
          },
          "name": "licenseSpecifications",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.LicenseSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-monitoring",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.LaunchTemplateDataProperty.Monitoring`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5153
          },
          "name": "monitoring",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.MonitoringProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-networkinterfaces",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.LaunchTemplateDataProperty.NetworkInterfaces`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5158
          },
          "name": "networkInterfaces",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.NetworkInterfaceProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-placement",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.LaunchTemplateDataProperty.Placement`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5163
          },
          "name": "placement",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.PlacementProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-ramdiskid",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.LaunchTemplateDataProperty.RamDiskId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5168
          },
          "name": "ramDiskId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-securitygroupids",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.LaunchTemplateDataProperty.SecurityGroupIds`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5173
          },
          "name": "securityGroupIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-securitygroups",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.LaunchTemplateDataProperty.SecurityGroups`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5178
          },
          "name": "securityGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-tagspecifications",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.LaunchTemplateDataProperty.TagSpecifications`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5183
          },
          "name": "tagSpecifications",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.TagSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-userdata",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.LaunchTemplateDataProperty.UserData`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5188
          },
          "name": "userData",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.LaunchTemplateElasticInferenceAcceleratorProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplateelasticinferenceaccelerator.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.LaunchTemplateElasticInferenceAcceleratorProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 5274
      },
      "name": "LaunchTemplateElasticInferenceAcceleratorProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplateelasticinferenceaccelerator.html#cfn-ec2-launchtemplate-launchtemplateelasticinferenceaccelerator-type",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.LaunchTemplateElasticInferenceAcceleratorProperty.Type`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5279
          },
          "name": "type",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.LicenseSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-licensespecification.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.LicenseSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 5317
      },
      "name": "LicenseSpecificationProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-licensespecification.html#cfn-ec2-launchtemplate-licensespecification-licenseconfigurationarn",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.LicenseSpecificationProperty.LicenseConfigurationArn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5322
          },
          "name": "licenseConfigurationArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.MonitoringProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-monitoring.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.MonitoringProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 5360
      },
      "name": "MonitoringProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-monitoring.html#cfn-ec2-launchtemplate-launchtemplatedata-monitoring-enabled",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.MonitoringProperty.Enabled`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5365
          },
          "name": "enabled",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.NetworkInterfaceProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.NetworkInterfaceProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 5403
      },
      "name": "NetworkInterfaceProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-associatepublicipaddress",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.NetworkInterfaceProperty.AssociatePublicIpAddress`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5408
          },
          "name": "associatePublicIpAddress",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-deleteontermination",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.NetworkInterfaceProperty.DeleteOnTermination`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5413
          },
          "name": "deleteOnTermination",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-description",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.NetworkInterfaceProperty.Description`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5418
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-deviceindex",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.NetworkInterfaceProperty.DeviceIndex`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5423
          },
          "name": "deviceIndex",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-groups",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.NetworkInterfaceProperty.Groups`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5428
          },
          "name": "groups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-interfacetype",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.NetworkInterfaceProperty.InterfaceType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5433
          },
          "name": "interfaceType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-ipv6addresscount",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.NetworkInterfaceProperty.Ipv6AddressCount`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5438
          },
          "name": "ipv6AddressCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-ipv6addresses",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.NetworkInterfaceProperty.Ipv6Addresses`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5443
          },
          "name": "ipv6Addresses",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.Ipv6AddProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-networkinterfaceid",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.NetworkInterfaceProperty.NetworkInterfaceId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5448
          },
          "name": "networkInterfaceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-privateipaddress",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.NetworkInterfaceProperty.PrivateIpAddress`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5453
          },
          "name": "privateIpAddress",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-privateipaddresses",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.NetworkInterfaceProperty.PrivateIpAddresses`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5458
          },
          "name": "privateIpAddresses",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.PrivateIpAddProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-secondaryprivateipaddresscount",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.NetworkInterfaceProperty.SecondaryPrivateIpAddressCount`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5463
          },
          "name": "secondaryPrivateIpAddressCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-subnetid",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.NetworkInterfaceProperty.SubnetId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5468
          },
          "name": "subnetId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.PlacementProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-placement.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.PlacementProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 5530
      },
      "name": "PlacementProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-placement.html#cfn-ec2-launchtemplate-launchtemplatedata-placement-affinity",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.PlacementProperty.Affinity`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5535
          },
          "name": "affinity",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-placement.html#cfn-ec2-launchtemplate-launchtemplatedata-placement-availabilityzone",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.PlacementProperty.AvailabilityZone`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5540
          },
          "name": "availabilityZone",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-placement.html#cfn-ec2-launchtemplate-launchtemplatedata-placement-groupname",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.PlacementProperty.GroupName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5545
          },
          "name": "groupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-placement.html#cfn-ec2-launchtemplate-launchtemplatedata-placement-hostid",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.PlacementProperty.HostId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5550
          },
          "name": "hostId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-placement.html#cfn-ec2-launchtemplate-launchtemplatedata-placement-tenancy",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.PlacementProperty.Tenancy`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5555
          },
          "name": "tenancy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.PrivateIpAddProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-privateipadd.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.PrivateIpAddProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 5601
      },
      "name": "PrivateIpAddProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-privateipadd.html#cfn-ec2-launchtemplate-privateipadd-primary",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.PrivateIpAddProperty.Primary`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5606
          },
          "name": "primary",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-privateipadd.html#cfn-ec2-launchtemplate-privateipadd-privateipaddress",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.PrivateIpAddProperty.PrivateIpAddress`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5611
          },
          "name": "privateIpAddress",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.SpotOptionsProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancemarketoptions-spotoptions.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.SpotOptionsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 5651
      },
      "name": "SpotOptionsProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancemarketoptions-spotoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-instancemarketoptions-spotoptions-instanceinterruptionbehavior",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.SpotOptionsProperty.InstanceInterruptionBehavior`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5656
          },
          "name": "instanceInterruptionBehavior",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancemarketoptions-spotoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-instancemarketoptions-spotoptions-maxprice",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.SpotOptionsProperty.MaxPrice`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5661
          },
          "name": "maxPrice",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancemarketoptions-spotoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-instancemarketoptions-spotoptions-spotinstancetype",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.SpotOptionsProperty.SpotInstanceType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5666
          },
          "name": "spotInstanceType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.TagSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-tagspecification.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.TagSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 5708
      },
      "name": "TagSpecificationProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-tagspecification.html#cfn-ec2-launchtemplate-tagspecification-resourcetype",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.TagSpecificationProperty.ResourceType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5713
          },
          "name": "resourceType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-tagspecification.html#cfn-ec2-launchtemplate-tagspecification-tags",
            "stability": "experimental",
            "summary": "`CfnLaunchTemplate.TagSpecificationProperty.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5718
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cdk.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplateProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate.html",
        "stability": "experimental",
        "summary": "Properties for defining a `AWS::EC2::LaunchTemplate`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplateProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 4387
      },
      "name": "CfnLaunchTemplateProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate.html#cfn-ec2-launchtemplate-launchtemplatedata",
            "stability": "experimental",
            "summary": "`AWS::EC2::LaunchTemplate.LaunchTemplateData`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4393
          },
          "name": "launchTemplateData",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.LaunchTemplateDataProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate.html#cfn-ec2-launchtemplate-launchtemplatename",
            "stability": "experimental",
            "summary": "`AWS::EC2::LaunchTemplate.LaunchTemplateName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4399
          },
          "name": "launchTemplateName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnNatGateway": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/cdk.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::NatGateway"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html",
        "stability": "experimental",
        "summary": "A CloudFormation `AWS::EC2::NatGateway`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNatGateway",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Create a new `AWS::EC2::NatGateway`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnNatGatewayProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 5821
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5869
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnNatGateway",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5825
          },
          "name": "cfnResourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5862
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html#cfn-ec2-natgateway-tags",
            "stability": "experimental",
            "summary": "`AWS::EC2::NatGateway.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5843
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/cdk.TagManager"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html#cfn-ec2-natgateway-allocationid",
            "stability": "experimental",
            "summary": "`AWS::EC2::NatGateway.AllocationId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5831
          },
          "name": "allocationId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html#cfn-ec2-natgateway-subnetid",
            "stability": "experimental",
            "summary": "`AWS::EC2::NatGateway.SubnetId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5837
          },
          "name": "subnetId",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnNatGatewayProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html",
        "stability": "experimental",
        "summary": "Properties for defining a `AWS::EC2::NatGateway`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNatGatewayProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 5758
      },
      "name": "CfnNatGatewayProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html#cfn-ec2-natgateway-allocationid",
            "stability": "experimental",
            "summary": "`AWS::EC2::NatGateway.AllocationId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5764
          },
          "name": "allocationId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html#cfn-ec2-natgateway-subnetid",
            "stability": "experimental",
            "summary": "`AWS::EC2::NatGateway.SubnetId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5770
          },
          "name": "subnetId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html#cfn-ec2-natgateway-tags",
            "stability": "experimental",
            "summary": "`AWS::EC2::NatGateway.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5776
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cdk.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnNetworkAcl": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/cdk.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::NetworkAcl"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl.html",
        "stability": "experimental",
        "summary": "A CloudFormation `AWS::EC2::NetworkAcl`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkAcl",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Create a new `AWS::EC2::NetworkAcl`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnNetworkAclProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 5932
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5971
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnNetworkAcl",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5936
          },
          "name": "cfnResourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5965
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl.html#cfn-ec2-networkacl-tags",
            "stability": "experimental",
            "summary": "`AWS::EC2::NetworkAcl.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5948
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/cdk.TagManager"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl.html#cfn-ec2-networkacl-vpcid",
            "stability": "experimental",
            "summary": "`AWS::EC2::NetworkAcl.VpcId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5942
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnNetworkAclEntry": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/cdk.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::NetworkAclEntry"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl-entry.html",
        "stability": "experimental",
        "summary": "A CloudFormation `AWS::EC2::NetworkAclEntry`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkAclEntry",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Create a new `AWS::EC2::NetworkAclEntry`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnNetworkAclEntryProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 6093
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6191
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnNetworkAclEntry",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6097
          },
          "name": "cfnResourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6178
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl-entry.html#cfn-ec2-networkaclentry-networkaclid",
            "stability": "experimental",
            "summary": "`AWS::EC2::NetworkAclEntry.NetworkAclId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6103
          },
          "name": "networkAclId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl-entry.html#cfn-ec2-networkaclentry-protocol",
            "stability": "experimental",
            "summary": "`AWS::EC2::NetworkAclEntry.Protocol`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6109
          },
          "name": "protocol",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl-entry.html#cfn-ec2-networkaclentry-ruleaction",
            "stability": "experimental",
            "summary": "`AWS::EC2::NetworkAclEntry.RuleAction`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6115
          },
          "name": "ruleAction",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl-entry.html#cfn-ec2-networkaclentry-rulenumber",
            "stability": "experimental",
            "summary": "`AWS::EC2::NetworkAclEntry.RuleNumber`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6121
          },
          "name": "ruleNumber",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl-entry.html#cfn-ec2-networkaclentry-cidrblock",
            "stability": "experimental",
            "summary": "`AWS::EC2::NetworkAclEntry.CidrBlock`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6127
          },
          "name": "cidrBlock",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl-entry.html#cfn-ec2-networkaclentry-egress",
            "stability": "experimental",
            "summary": "`AWS::EC2::NetworkAclEntry.Egress`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6133
          },
          "name": "egress",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl-entry.html#cfn-ec2-networkaclentry-icmp",
            "stability": "experimental",
            "summary": "`AWS::EC2::NetworkAclEntry.Icmp`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6139
          },
          "name": "icmp",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkAclEntry.IcmpProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl-entry.html#cfn-ec2-networkaclentry-ipv6cidrblock",
            "stability": "experimental",
            "summary": "`AWS::EC2::NetworkAclEntry.Ipv6CidrBlock`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6145
          },
          "name": "ipv6CidrBlock",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl-entry.html#cfn-ec2-networkaclentry-portrange",
            "stability": "experimental",
            "summary": "`AWS::EC2::NetworkAclEntry.PortRange`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6151
          },
          "name": "portRange",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkAclEntry.PortRangeProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnNetworkAclEntry.IcmpProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkaclentry-icmp.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkAclEntry.IcmpProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 6200
      },
      "name": "IcmpProperty",
      "namespace": "CfnNetworkAclEntry",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkaclentry-icmp.html#cfn-ec2-networkaclentry-icmp-code",
            "stability": "experimental",
            "summary": "`CfnNetworkAclEntry.IcmpProperty.Code`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6205
          },
          "name": "code",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkaclentry-icmp.html#cfn-ec2-networkaclentry-icmp-type",
            "stability": "experimental",
            "summary": "`CfnNetworkAclEntry.IcmpProperty.Type`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6210
          },
          "name": "type",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnNetworkAclEntry.PortRangeProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkaclentry-portrange.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkAclEntry.PortRangeProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 6250
      },
      "name": "PortRangeProperty",
      "namespace": "CfnNetworkAclEntry",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkaclentry-portrange.html#cfn-ec2-networkaclentry-portrange-from",
            "stability": "experimental",
            "summary": "`CfnNetworkAclEntry.PortRangeProperty.From`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6255
          },
          "name": "from",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkaclentry-portrange.html#cfn-ec2-networkaclentry-portrange-to",
            "stability": "experimental",
            "summary": "`CfnNetworkAclEntry.PortRangeProperty.To`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6260
          },
          "name": "to",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnNetworkAclEntryProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl-entry.html",
        "stability": "experimental",
        "summary": "Properties for defining a `AWS::EC2::NetworkAclEntry`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkAclEntryProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 5980
      },
      "name": "CfnNetworkAclEntryProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl-entry.html#cfn-ec2-networkaclentry-networkaclid",
            "stability": "experimental",
            "summary": "`AWS::EC2::NetworkAclEntry.NetworkAclId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5986
          },
          "name": "networkAclId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl-entry.html#cfn-ec2-networkaclentry-protocol",
            "stability": "experimental",
            "summary": "`AWS::EC2::NetworkAclEntry.Protocol`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5992
          },
          "name": "protocol",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl-entry.html#cfn-ec2-networkaclentry-ruleaction",
            "stability": "experimental",
            "summary": "`AWS::EC2::NetworkAclEntry.RuleAction`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5998
          },
          "name": "ruleAction",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl-entry.html#cfn-ec2-networkaclentry-rulenumber",
            "stability": "experimental",
            "summary": "`AWS::EC2::NetworkAclEntry.RuleNumber`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6004
          },
          "name": "ruleNumber",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl-entry.html#cfn-ec2-networkaclentry-cidrblock",
            "stability": "experimental",
            "summary": "`AWS::EC2::NetworkAclEntry.CidrBlock`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6010
          },
          "name": "cidrBlock",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl-entry.html#cfn-ec2-networkaclentry-egress",
            "stability": "experimental",
            "summary": "`AWS::EC2::NetworkAclEntry.Egress`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6016
          },
          "name": "egress",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl-entry.html#cfn-ec2-networkaclentry-icmp",
            "stability": "experimental",
            "summary": "`AWS::EC2::NetworkAclEntry.Icmp`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6022
          },
          "name": "icmp",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkAclEntry.IcmpProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl-entry.html#cfn-ec2-networkaclentry-ipv6cidrblock",
            "stability": "experimental",
            "summary": "`AWS::EC2::NetworkAclEntry.Ipv6CidrBlock`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6028
          },
          "name": "ipv6CidrBlock",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl-entry.html#cfn-ec2-networkaclentry-portrange",
            "stability": "experimental",
            "summary": "`AWS::EC2::NetworkAclEntry.PortRange`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6034
          },
          "name": "portRange",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkAclEntry.PortRangeProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnNetworkAclProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl.html",
        "stability": "experimental",
        "summary": "Properties for defining a `AWS::EC2::NetworkAcl`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkAclProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 5878
      },
      "name": "CfnNetworkAclProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl.html#cfn-ec2-networkacl-vpcid",
            "stability": "experimental",
            "summary": "`AWS::EC2::NetworkAcl.VpcId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5884
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl.html#cfn-ec2-networkacl-tags",
            "stability": "experimental",
            "summary": "`AWS::EC2::NetworkAcl.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5890
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cdk.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnNetworkInterface": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/cdk.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::NetworkInterface"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html",
        "stability": "experimental",
        "summary": "A CloudFormation `AWS::EC2::NetworkInterface`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkInterface",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Create a new `AWS::EC2::NetworkInterface`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnNetworkInterfaceProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 6426
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6549
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnNetworkInterface",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6430
          },
          "name": "cfnResourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "PrimaryPrivateIpAddress"
            },
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6435
          },
          "name": "attrPrimaryPrivateIpAddress",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "SecondaryPrivateIpAddresses"
            },
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6440
          },
          "name": "attrSecondaryPrivateIpAddresses",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6534
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-awsec2networkinterface-tags",
            "stability": "experimental",
            "summary": "`AWS::EC2::NetworkInterface.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6506
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/cdk.TagManager"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-awsec2networkinterface-subnetid",
            "stability": "experimental",
            "summary": "`AWS::EC2::NetworkInterface.SubnetId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6446
          },
          "name": "subnetId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-awsec2networkinterface-description",
            "stability": "experimental",
            "summary": "`AWS::EC2::NetworkInterface.Description`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6452
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-awsec2networkinterface-groupset",
            "stability": "experimental",
            "summary": "`AWS::EC2::NetworkInterface.GroupSet`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6458
          },
          "name": "groupSet",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-ec2-networkinterface-interfacetype",
            "stability": "experimental",
            "summary": "`AWS::EC2::NetworkInterface.InterfaceType`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6464
          },
          "name": "interfaceType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-ec2-networkinterface-ipv6addresscount",
            "stability": "experimental",
            "summary": "`AWS::EC2::NetworkInterface.Ipv6AddressCount`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6470
          },
          "name": "ipv6AddressCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-ec2-networkinterface-ipv6addresses",
            "stability": "experimental",
            "summary": "`AWS::EC2::NetworkInterface.Ipv6Addresses`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6476
          },
          "name": "ipv6Addresses",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInterface.InstanceIpv6AddressProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-awsec2networkinterface-privateipaddress",
            "stability": "experimental",
            "summary": "`AWS::EC2::NetworkInterface.PrivateIpAddress`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6482
          },
          "name": "privateIpAddress",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-awsec2networkinterface-privateipaddresses",
            "stability": "experimental",
            "summary": "`AWS::EC2::NetworkInterface.PrivateIpAddresses`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6488
          },
          "name": "privateIpAddresses",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnNetworkInterface.PrivateIpAddressSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-awsec2networkinterface-secondaryprivateipcount",
            "stability": "experimental",
            "summary": "`AWS::EC2::NetworkInterface.SecondaryPrivateIpAddressCount`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6494
          },
          "name": "secondaryPrivateIpAddressCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-awsec2networkinterface-sourcedestcheck",
            "stability": "experimental",
            "summary": "`AWS::EC2::NetworkInterface.SourceDestCheck`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6500
          },
          "name": "sourceDestCheck",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnNetworkInterface.InstanceIpv6AddressProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinterface-instanceipv6address.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkInterface.InstanceIpv6AddressProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 6558
      },
      "name": "InstanceIpv6AddressProperty",
      "namespace": "CfnNetworkInterface",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinterface-instanceipv6address.html#cfn-ec2-networkinterface-instanceipv6address-ipv6address",
            "stability": "experimental",
            "summary": "`CfnNetworkInterface.InstanceIpv6AddressProperty.Ipv6Address`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6563
          },
          "name": "ipv6Address",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnNetworkInterface.PrivateIpAddressSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-interface-privateipspec.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkInterface.PrivateIpAddressSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 6602
      },
      "name": "PrivateIpAddressSpecificationProperty",
      "namespace": "CfnNetworkInterface",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-interface-privateipspec.html#cfn-ec2-networkinterface-privateipspecification-primary",
            "stability": "experimental",
            "summary": "`CfnNetworkInterface.PrivateIpAddressSpecificationProperty.Primary`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6607
          },
          "name": "primary",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-interface-privateipspec.html#cfn-ec2-networkinterface-privateipspecification-privateipaddress",
            "stability": "experimental",
            "summary": "`CfnNetworkInterface.PrivateIpAddressSpecificationProperty.PrivateIpAddress`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6612
          },
          "name": "privateIpAddress",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnNetworkInterfaceAttachment": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/cdk.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::NetworkInterfaceAttachment"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface-attachment.html",
        "stability": "experimental",
        "summary": "A CloudFormation `AWS::EC2::NetworkInterfaceAttachment`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkInterfaceAttachment",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Create a new `AWS::EC2::NetworkInterfaceAttachment`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnNetworkInterfaceAttachmentProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 6726
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6783
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnNetworkInterfaceAttachment",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6730
          },
          "name": "cfnResourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6775
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface-attachment.html#cfn-ec2-network-interface-attachment-deviceindex",
            "stability": "experimental",
            "summary": "`AWS::EC2::NetworkInterfaceAttachment.DeviceIndex`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6736
          },
          "name": "deviceIndex",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface-attachment.html#cfn-ec2-network-interface-attachment-instanceid",
            "stability": "experimental",
            "summary": "`AWS::EC2::NetworkInterfaceAttachment.InstanceId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6742
          },
          "name": "instanceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface-attachment.html#cfn-ec2-network-interface-attachment-networkinterfaceid",
            "stability": "experimental",
            "summary": "`AWS::EC2::NetworkInterfaceAttachment.NetworkInterfaceId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6748
          },
          "name": "networkInterfaceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface-attachment.html#cfn-ec2-network-interface-attachment-deleteonterm",
            "stability": "experimental",
            "summary": "`AWS::EC2::NetworkInterfaceAttachment.DeleteOnTermination`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6754
          },
          "name": "deleteOnTermination",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnNetworkInterfaceAttachmentProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface-attachment.html",
        "stability": "experimental",
        "summary": "Properties for defining a `AWS::EC2::NetworkInterfaceAttachment`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkInterfaceAttachmentProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 6654
      },
      "name": "CfnNetworkInterfaceAttachmentProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface-attachment.html#cfn-ec2-network-interface-attachment-deviceindex",
            "stability": "experimental",
            "summary": "`AWS::EC2::NetworkInterfaceAttachment.DeviceIndex`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6660
          },
          "name": "deviceIndex",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface-attachment.html#cfn-ec2-network-interface-attachment-instanceid",
            "stability": "experimental",
            "summary": "`AWS::EC2::NetworkInterfaceAttachment.InstanceId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6666
          },
          "name": "instanceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface-attachment.html#cfn-ec2-network-interface-attachment-networkinterfaceid",
            "stability": "experimental",
            "summary": "`AWS::EC2::NetworkInterfaceAttachment.NetworkInterfaceId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6672
          },
          "name": "networkInterfaceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface-attachment.html#cfn-ec2-network-interface-attachment-deleteonterm",
            "stability": "experimental",
            "summary": "`AWS::EC2::NetworkInterfaceAttachment.DeleteOnTermination`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6678
          },
          "name": "deleteOnTermination",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnNetworkInterfacePermission": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/cdk.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::NetworkInterfacePermission"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterfacepermission.html",
        "stability": "experimental",
        "summary": "A CloudFormation `AWS::EC2::NetworkInterfacePermission`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkInterfacePermission",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Create a new `AWS::EC2::NetworkInterfacePermission`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnNetworkInterfacePermissionProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 6856
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6905
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnNetworkInterfacePermission",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6860
          },
          "name": "cfnResourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6898
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterfacepermission.html#cfn-ec2-networkinterfacepermission-awsaccountid",
            "stability": "experimental",
            "summary": "`AWS::EC2::NetworkInterfacePermission.AwsAccountId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6866
          },
          "name": "awsAccountId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterfacepermission.html#cfn-ec2-networkinterfacepermission-networkinterfaceid",
            "stability": "experimental",
            "summary": "`AWS::EC2::NetworkInterfacePermission.NetworkInterfaceId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6872
          },
          "name": "networkInterfaceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterfacepermission.html#cfn-ec2-networkinterfacepermission-permission",
            "stability": "experimental",
            "summary": "`AWS::EC2::NetworkInterfacePermission.Permission`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6878
          },
          "name": "permission",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnNetworkInterfacePermissionProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterfacepermission.html",
        "stability": "experimental",
        "summary": "Properties for defining a `AWS::EC2::NetworkInterfacePermission`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkInterfacePermissionProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 6792
      },
      "name": "CfnNetworkInterfacePermissionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterfacepermission.html#cfn-ec2-networkinterfacepermission-awsaccountid",
            "stability": "experimental",
            "summary": "`AWS::EC2::NetworkInterfacePermission.AwsAccountId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6798
          },
          "name": "awsAccountId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterfacepermission.html#cfn-ec2-networkinterfacepermission-networkinterfaceid",
            "stability": "experimental",
            "summary": "`AWS::EC2::NetworkInterfacePermission.NetworkInterfaceId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6804
          },
          "name": "networkInterfaceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterfacepermission.html#cfn-ec2-networkinterfacepermission-permission",
            "stability": "experimental",
            "summary": "`AWS::EC2::NetworkInterfacePermission.Permission`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6810
          },
          "name": "permission",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnNetworkInterfaceProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html",
        "stability": "experimental",
        "summary": "Properties for defining a `AWS::EC2::NetworkInterface`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkInterfaceProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 6300
      },
      "name": "CfnNetworkInterfaceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-awsec2networkinterface-subnetid",
            "stability": "experimental",
            "summary": "`AWS::EC2::NetworkInterface.SubnetId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6306
          },
          "name": "subnetId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-awsec2networkinterface-description",
            "stability": "experimental",
            "summary": "`AWS::EC2::NetworkInterface.Description`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6312
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-awsec2networkinterface-groupset",
            "stability": "experimental",
            "summary": "`AWS::EC2::NetworkInterface.GroupSet`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6318
          },
          "name": "groupSet",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-ec2-networkinterface-interfacetype",
            "stability": "experimental",
            "summary": "`AWS::EC2::NetworkInterface.InterfaceType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6324
          },
          "name": "interfaceType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-ec2-networkinterface-ipv6addresscount",
            "stability": "experimental",
            "summary": "`AWS::EC2::NetworkInterface.Ipv6AddressCount`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6330
          },
          "name": "ipv6AddressCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-ec2-networkinterface-ipv6addresses",
            "stability": "experimental",
            "summary": "`AWS::EC2::NetworkInterface.Ipv6Addresses`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6336
          },
          "name": "ipv6Addresses",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInterface.InstanceIpv6AddressProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-awsec2networkinterface-privateipaddress",
            "stability": "experimental",
            "summary": "`AWS::EC2::NetworkInterface.PrivateIpAddress`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6342
          },
          "name": "privateIpAddress",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-awsec2networkinterface-privateipaddresses",
            "stability": "experimental",
            "summary": "`AWS::EC2::NetworkInterface.PrivateIpAddresses`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6348
          },
          "name": "privateIpAddresses",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnNetworkInterface.PrivateIpAddressSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-awsec2networkinterface-secondaryprivateipcount",
            "stability": "experimental",
            "summary": "`AWS::EC2::NetworkInterface.SecondaryPrivateIpAddressCount`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6354
          },
          "name": "secondaryPrivateIpAddressCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-awsec2networkinterface-sourcedestcheck",
            "stability": "experimental",
            "summary": "`AWS::EC2::NetworkInterface.SourceDestCheck`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6360
          },
          "name": "sourceDestCheck",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-awsec2networkinterface-tags",
            "stability": "experimental",
            "summary": "`AWS::EC2::NetworkInterface.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6366
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cdk.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnPlacementGroup": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/cdk.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::PlacementGroup"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-placementgroup.html",
        "stability": "experimental",
        "summary": "A CloudFormation `AWS::EC2::PlacementGroup`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnPlacementGroup",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Create a new `AWS::EC2::PlacementGroup`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnPlacementGroupProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 6959
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6989
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnPlacementGroup",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6963
          },
          "name": "cfnResourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6984
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-placementgroup.html#cfn-ec2-placementgroup-strategy",
            "stability": "experimental",
            "summary": "`AWS::EC2::PlacementGroup.Strategy`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6969
          },
          "name": "strategy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnPlacementGroupProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-placementgroup.html",
        "stability": "experimental",
        "summary": "Properties for defining a `AWS::EC2::PlacementGroup`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnPlacementGroupProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 6914
      },
      "name": "CfnPlacementGroupProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-placementgroup.html#cfn-ec2-placementgroup-strategy",
            "stability": "experimental",
            "summary": "`AWS::EC2::PlacementGroup.Strategy`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6920
          },
          "name": "strategy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnRoute": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/cdk.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::Route"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html",
        "stability": "experimental",
        "summary": "A CloudFormation `AWS::EC2::Route`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnRoute",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Create a new `AWS::EC2::Route`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnRouteProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 7116
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7219
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnRoute",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7120
          },
          "name": "cfnResourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7205
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-routetableid",
            "stability": "experimental",
            "summary": "`AWS::EC2::Route.RouteTableId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7126
          },
          "name": "routeTableId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-destinationcidrblock",
            "stability": "experimental",
            "summary": "`AWS::EC2::Route.DestinationCidrBlock`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7132
          },
          "name": "destinationCidrBlock",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-destinationipv6cidrblock",
            "stability": "experimental",
            "summary": "`AWS::EC2::Route.DestinationIpv6CidrBlock`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7138
          },
          "name": "destinationIpv6CidrBlock",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-egressonlyinternetgatewayid",
            "stability": "experimental",
            "summary": "`AWS::EC2::Route.EgressOnlyInternetGatewayId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7144
          },
          "name": "egressOnlyInternetGatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-gatewayid",
            "stability": "experimental",
            "summary": "`AWS::EC2::Route.GatewayId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7150
          },
          "name": "gatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-instanceid",
            "stability": "experimental",
            "summary": "`AWS::EC2::Route.InstanceId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7156
          },
          "name": "instanceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-natgatewayid",
            "stability": "experimental",
            "summary": "`AWS::EC2::Route.NatGatewayId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7162
          },
          "name": "natGatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-networkinterfaceid",
            "stability": "experimental",
            "summary": "`AWS::EC2::Route.NetworkInterfaceId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7168
          },
          "name": "networkInterfaceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-transitgatewayid",
            "stability": "experimental",
            "summary": "`AWS::EC2::Route.TransitGatewayId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7174
          },
          "name": "transitGatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-vpcpeeringconnectionid",
            "stability": "experimental",
            "summary": "`AWS::EC2::Route.VpcPeeringConnectionId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7180
          },
          "name": "vpcPeeringConnectionId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnRouteProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html",
        "stability": "experimental",
        "summary": "Properties for defining a `AWS::EC2::Route`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnRouteProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 6998
      },
      "name": "CfnRouteProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-routetableid",
            "stability": "experimental",
            "summary": "`AWS::EC2::Route.RouteTableId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7004
          },
          "name": "routeTableId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-destinationcidrblock",
            "stability": "experimental",
            "summary": "`AWS::EC2::Route.DestinationCidrBlock`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7010
          },
          "name": "destinationCidrBlock",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-destinationipv6cidrblock",
            "stability": "experimental",
            "summary": "`AWS::EC2::Route.DestinationIpv6CidrBlock`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7016
          },
          "name": "destinationIpv6CidrBlock",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-egressonlyinternetgatewayid",
            "stability": "experimental",
            "summary": "`AWS::EC2::Route.EgressOnlyInternetGatewayId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7022
          },
          "name": "egressOnlyInternetGatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-gatewayid",
            "stability": "experimental",
            "summary": "`AWS::EC2::Route.GatewayId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7028
          },
          "name": "gatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-instanceid",
            "stability": "experimental",
            "summary": "`AWS::EC2::Route.InstanceId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7034
          },
          "name": "instanceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-natgatewayid",
            "stability": "experimental",
            "summary": "`AWS::EC2::Route.NatGatewayId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7040
          },
          "name": "natGatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-networkinterfaceid",
            "stability": "experimental",
            "summary": "`AWS::EC2::Route.NetworkInterfaceId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7046
          },
          "name": "networkInterfaceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-transitgatewayid",
            "stability": "experimental",
            "summary": "`AWS::EC2::Route.TransitGatewayId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7052
          },
          "name": "transitGatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-vpcpeeringconnectionid",
            "stability": "experimental",
            "summary": "`AWS::EC2::Route.VpcPeeringConnectionId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7058
          },
          "name": "vpcPeeringConnectionId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnRouteTable": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/cdk.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::RouteTable"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route-table.html",
        "stability": "experimental",
        "summary": "A CloudFormation `AWS::EC2::RouteTable`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnRouteTable",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Create a new `AWS::EC2::RouteTable`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnRouteTableProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 7282
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7321
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnRouteTable",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7286
          },
          "name": "cfnResourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7315
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route-table.html#cfn-ec2-routetable-tags",
            "stability": "experimental",
            "summary": "`AWS::EC2::RouteTable.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7298
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/cdk.TagManager"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route-table.html#cfn-ec2-routetable-vpcid",
            "stability": "experimental",
            "summary": "`AWS::EC2::RouteTable.VpcId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7292
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnRouteTableProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route-table.html",
        "stability": "experimental",
        "summary": "Properties for defining a `AWS::EC2::RouteTable`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnRouteTableProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 7228
      },
      "name": "CfnRouteTableProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route-table.html#cfn-ec2-routetable-vpcid",
            "stability": "experimental",
            "summary": "`AWS::EC2::RouteTable.VpcId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7234
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route-table.html#cfn-ec2-routetable-tags",
            "stability": "experimental",
            "summary": "`AWS::EC2::RouteTable.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7240
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cdk.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnSecurityGroup": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/cdk.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::SecurityGroup"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html",
        "stability": "experimental",
        "summary": "A CloudFormation `AWS::EC2::SecurityGroup`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSecurityGroup",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Create a new `AWS::EC2::SecurityGroup`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnSecurityGroupProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 7416
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7499
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnSecurityGroup",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7420
          },
          "name": "cfnResourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "GroupId"
            },
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7425
          },
          "name": "attrGroupId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "VpcId"
            },
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7430
          },
          "name": "attrVpcId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7489
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html#cfn-ec2-securitygroup-tags",
            "stability": "experimental",
            "summary": "`AWS::EC2::SecurityGroup.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7460
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/cdk.TagManager"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html#cfn-ec2-securitygroup-groupdescription",
            "stability": "experimental",
            "summary": "`AWS::EC2::SecurityGroup.GroupDescription`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7436
          },
          "name": "groupDescription",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html#cfn-ec2-securitygroup-groupname",
            "stability": "experimental",
            "summary": "`AWS::EC2::SecurityGroup.GroupName`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7442
          },
          "name": "groupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html#cfn-ec2-securitygroup-securitygroupegress",
            "stability": "experimental",
            "summary": "`AWS::EC2::SecurityGroup.SecurityGroupEgress`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7448
          },
          "name": "securityGroupEgress",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnSecurityGroup.EgressProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html#cfn-ec2-securitygroup-securitygroupingress",
            "stability": "experimental",
            "summary": "`AWS::EC2::SecurityGroup.SecurityGroupIngress`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7454
          },
          "name": "securityGroupIngress",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnSecurityGroup.IngressProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html#cfn-ec2-securitygroup-vpcid",
            "stability": "experimental",
            "summary": "`AWS::EC2::SecurityGroup.VpcId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7466
          },
          "name": "vpcId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnSecurityGroup.EgressProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSecurityGroup.EgressProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 7508
      },
      "name": "EgressProperty",
      "namespace": "CfnSecurityGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-ipprotocol",
            "stability": "experimental",
            "summary": "`CfnSecurityGroup.EgressProperty.IpProtocol`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7543
          },
          "name": "ipProtocol",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-cidrip",
            "stability": "experimental",
            "summary": "`CfnSecurityGroup.EgressProperty.CidrIp`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7513
          },
          "name": "cidrIp",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-cidripv6",
            "stability": "experimental",
            "summary": "`CfnSecurityGroup.EgressProperty.CidrIpv6`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7518
          },
          "name": "cidrIpv6",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-description",
            "stability": "experimental",
            "summary": "`CfnSecurityGroup.EgressProperty.Description`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7523
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-destinationprefixlistid",
            "stability": "experimental",
            "summary": "`CfnSecurityGroup.EgressProperty.DestinationPrefixListId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7528
          },
          "name": "destinationPrefixListId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-destsecgroupid",
            "stability": "experimental",
            "summary": "`CfnSecurityGroup.EgressProperty.DestinationSecurityGroupId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7533
          },
          "name": "destinationSecurityGroupId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-fromport",
            "stability": "experimental",
            "summary": "`CfnSecurityGroup.EgressProperty.FromPort`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7538
          },
          "name": "fromPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-toport",
            "stability": "experimental",
            "summary": "`CfnSecurityGroup.EgressProperty.ToPort`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7548
          },
          "name": "toPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnSecurityGroup.IngressProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSecurityGroup.IngressProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 7601
      },
      "name": "IngressProperty",
      "namespace": "CfnSecurityGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-ipprotocol",
            "stability": "experimental",
            "summary": "`CfnSecurityGroup.IngressProperty.IpProtocol`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7626
          },
          "name": "ipProtocol",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-cidrip",
            "stability": "experimental",
            "summary": "`CfnSecurityGroup.IngressProperty.CidrIp`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7606
          },
          "name": "cidrIp",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-cidripv6",
            "stability": "experimental",
            "summary": "`CfnSecurityGroup.IngressProperty.CidrIpv6`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7611
          },
          "name": "cidrIpv6",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-description",
            "stability": "experimental",
            "summary": "`CfnSecurityGroup.IngressProperty.Description`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7616
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-fromport",
            "stability": "experimental",
            "summary": "`CfnSecurityGroup.IngressProperty.FromPort`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7621
          },
          "name": "fromPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-securitygroup-ingress-sourceprefixlistid",
            "stability": "experimental",
            "summary": "`CfnSecurityGroup.IngressProperty.SourcePrefixListId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7631
          },
          "name": "sourcePrefixListId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-sourcesecuritygroupid",
            "stability": "experimental",
            "summary": "`CfnSecurityGroup.IngressProperty.SourceSecurityGroupId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7636
          },
          "name": "sourceSecurityGroupId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-sourcesecuritygroupname",
            "stability": "experimental",
            "summary": "`CfnSecurityGroup.IngressProperty.SourceSecurityGroupName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7641
          },
          "name": "sourceSecurityGroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-sourcesecuritygroupownerid",
            "stability": "experimental",
            "summary": "`CfnSecurityGroup.IngressProperty.SourceSecurityGroupOwnerId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7646
          },
          "name": "sourceSecurityGroupOwnerId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-toport",
            "stability": "experimental",
            "summary": "`CfnSecurityGroup.IngressProperty.ToPort`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7651
          },
          "name": "toPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnSecurityGroupEgress": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/cdk.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::SecurityGroupEgress"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html",
        "stability": "experimental",
        "summary": "A CloudFormation `AWS::EC2::SecurityGroupEgress`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSecurityGroupEgress",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Create a new `AWS::EC2::SecurityGroupEgress`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnSecurityGroupEgressProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 7819
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7915
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnSecurityGroupEgress",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7823
          },
          "name": "cfnResourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7902
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-groupid",
            "stability": "experimental",
            "summary": "`AWS::EC2::SecurityGroupEgress.GroupId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7829
          },
          "name": "groupId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-ipprotocol",
            "stability": "experimental",
            "summary": "`AWS::EC2::SecurityGroupEgress.IpProtocol`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7835
          },
          "name": "ipProtocol",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-cidrip",
            "stability": "experimental",
            "summary": "`AWS::EC2::SecurityGroupEgress.CidrIp`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7841
          },
          "name": "cidrIp",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-cidripv6",
            "stability": "experimental",
            "summary": "`AWS::EC2::SecurityGroupEgress.CidrIpv6`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7847
          },
          "name": "cidrIpv6",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-description",
            "stability": "experimental",
            "summary": "`AWS::EC2::SecurityGroupEgress.Description`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7853
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-destinationprefixlistid",
            "stability": "experimental",
            "summary": "`AWS::EC2::SecurityGroupEgress.DestinationPrefixListId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7859
          },
          "name": "destinationPrefixListId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-destinationsecuritygroupid",
            "stability": "experimental",
            "summary": "`AWS::EC2::SecurityGroupEgress.DestinationSecurityGroupId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7865
          },
          "name": "destinationSecurityGroupId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-fromport",
            "stability": "experimental",
            "summary": "`AWS::EC2::SecurityGroupEgress.FromPort`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7871
          },
          "name": "fromPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-toport",
            "stability": "experimental",
            "summary": "`AWS::EC2::SecurityGroupEgress.ToPort`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7877
          },
          "name": "toPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnSecurityGroupEgressProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html",
        "stability": "experimental",
        "summary": "Properties for defining a `AWS::EC2::SecurityGroupEgress`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSecurityGroupEgressProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 7708
      },
      "name": "CfnSecurityGroupEgressProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-groupid",
            "stability": "experimental",
            "summary": "`AWS::EC2::SecurityGroupEgress.GroupId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7714
          },
          "name": "groupId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-ipprotocol",
            "stability": "experimental",
            "summary": "`AWS::EC2::SecurityGroupEgress.IpProtocol`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7720
          },
          "name": "ipProtocol",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-cidrip",
            "stability": "experimental",
            "summary": "`AWS::EC2::SecurityGroupEgress.CidrIp`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7726
          },
          "name": "cidrIp",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-cidripv6",
            "stability": "experimental",
            "summary": "`AWS::EC2::SecurityGroupEgress.CidrIpv6`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7732
          },
          "name": "cidrIpv6",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-description",
            "stability": "experimental",
            "summary": "`AWS::EC2::SecurityGroupEgress.Description`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7738
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-destinationprefixlistid",
            "stability": "experimental",
            "summary": "`AWS::EC2::SecurityGroupEgress.DestinationPrefixListId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7744
          },
          "name": "destinationPrefixListId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-destinationsecuritygroupid",
            "stability": "experimental",
            "summary": "`AWS::EC2::SecurityGroupEgress.DestinationSecurityGroupId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7750
          },
          "name": "destinationSecurityGroupId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-fromport",
            "stability": "experimental",
            "summary": "`AWS::EC2::SecurityGroupEgress.FromPort`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7756
          },
          "name": "fromPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-toport",
            "stability": "experimental",
            "summary": "`AWS::EC2::SecurityGroupEgress.ToPort`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7762
          },
          "name": "toPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnSecurityGroupIngress": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/cdk.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::SecurityGroupIngress"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html",
        "stability": "experimental",
        "summary": "A CloudFormation `AWS::EC2::SecurityGroupIngress`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSecurityGroupIngress",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Create a new `AWS::EC2::SecurityGroupIngress`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnSecurityGroupIngressProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 8058
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8177
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnSecurityGroupIngress",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8062
          },
          "name": "cfnResourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8161
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-ipprotocol",
            "stability": "experimental",
            "summary": "`AWS::EC2::SecurityGroupIngress.IpProtocol`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8068
          },
          "name": "ipProtocol",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-cidrip",
            "stability": "experimental",
            "summary": "`AWS::EC2::SecurityGroupIngress.CidrIp`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8074
          },
          "name": "cidrIp",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-cidripv6",
            "stability": "experimental",
            "summary": "`AWS::EC2::SecurityGroupIngress.CidrIpv6`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8080
          },
          "name": "cidrIpv6",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-description",
            "stability": "experimental",
            "summary": "`AWS::EC2::SecurityGroupIngress.Description`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8086
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-fromport",
            "stability": "experimental",
            "summary": "`AWS::EC2::SecurityGroupIngress.FromPort`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8092
          },
          "name": "fromPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-groupid",
            "stability": "experimental",
            "summary": "`AWS::EC2::SecurityGroupIngress.GroupId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8098
          },
          "name": "groupId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-groupname",
            "stability": "experimental",
            "summary": "`AWS::EC2::SecurityGroupIngress.GroupName`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8104
          },
          "name": "groupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-securitygroupingress-sourceprefixlistid",
            "stability": "experimental",
            "summary": "`AWS::EC2::SecurityGroupIngress.SourcePrefixListId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8110
          },
          "name": "sourcePrefixListId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-sourcesecuritygroupid",
            "stability": "experimental",
            "summary": "`AWS::EC2::SecurityGroupIngress.SourceSecurityGroupId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8116
          },
          "name": "sourceSecurityGroupId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-sourcesecuritygroupname",
            "stability": "experimental",
            "summary": "`AWS::EC2::SecurityGroupIngress.SourceSecurityGroupName`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8122
          },
          "name": "sourceSecurityGroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-sourcesecuritygroupownerid",
            "stability": "experimental",
            "summary": "`AWS::EC2::SecurityGroupIngress.SourceSecurityGroupOwnerId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8128
          },
          "name": "sourceSecurityGroupOwnerId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-toport",
            "stability": "experimental",
            "summary": "`AWS::EC2::SecurityGroupIngress.ToPort`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8134
          },
          "name": "toPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnSecurityGroupIngressProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html",
        "stability": "experimental",
        "summary": "Properties for defining a `AWS::EC2::SecurityGroupIngress`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSecurityGroupIngressProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 7924
      },
      "name": "CfnSecurityGroupIngressProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-ipprotocol",
            "stability": "experimental",
            "summary": "`AWS::EC2::SecurityGroupIngress.IpProtocol`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7930
          },
          "name": "ipProtocol",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-cidrip",
            "stability": "experimental",
            "summary": "`AWS::EC2::SecurityGroupIngress.CidrIp`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7936
          },
          "name": "cidrIp",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-cidripv6",
            "stability": "experimental",
            "summary": "`AWS::EC2::SecurityGroupIngress.CidrIpv6`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7942
          },
          "name": "cidrIpv6",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-description",
            "stability": "experimental",
            "summary": "`AWS::EC2::SecurityGroupIngress.Description`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7948
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-fromport",
            "stability": "experimental",
            "summary": "`AWS::EC2::SecurityGroupIngress.FromPort`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7954
          },
          "name": "fromPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-groupid",
            "stability": "experimental",
            "summary": "`AWS::EC2::SecurityGroupIngress.GroupId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7960
          },
          "name": "groupId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-groupname",
            "stability": "experimental",
            "summary": "`AWS::EC2::SecurityGroupIngress.GroupName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7966
          },
          "name": "groupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-securitygroupingress-sourceprefixlistid",
            "stability": "experimental",
            "summary": "`AWS::EC2::SecurityGroupIngress.SourcePrefixListId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7972
          },
          "name": "sourcePrefixListId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-sourcesecuritygroupid",
            "stability": "experimental",
            "summary": "`AWS::EC2::SecurityGroupIngress.SourceSecurityGroupId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7978
          },
          "name": "sourceSecurityGroupId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-sourcesecuritygroupname",
            "stability": "experimental",
            "summary": "`AWS::EC2::SecurityGroupIngress.SourceSecurityGroupName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7984
          },
          "name": "sourceSecurityGroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-sourcesecuritygroupownerid",
            "stability": "experimental",
            "summary": "`AWS::EC2::SecurityGroupIngress.SourceSecurityGroupOwnerId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7990
          },
          "name": "sourceSecurityGroupOwnerId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-toport",
            "stability": "experimental",
            "summary": "`AWS::EC2::SecurityGroupIngress.ToPort`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7996
          },
          "name": "toPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnSecurityGroupProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html",
        "stability": "experimental",
        "summary": "Properties for defining a `AWS::EC2::SecurityGroup`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSecurityGroupProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 7330
      },
      "name": "CfnSecurityGroupProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html#cfn-ec2-securitygroup-groupdescription",
            "stability": "experimental",
            "summary": "`AWS::EC2::SecurityGroup.GroupDescription`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7336
          },
          "name": "groupDescription",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html#cfn-ec2-securitygroup-groupname",
            "stability": "experimental",
            "summary": "`AWS::EC2::SecurityGroup.GroupName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7342
          },
          "name": "groupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html#cfn-ec2-securitygroup-securitygroupegress",
            "stability": "experimental",
            "summary": "`AWS::EC2::SecurityGroup.SecurityGroupEgress`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7348
          },
          "name": "securityGroupEgress",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnSecurityGroup.EgressProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html#cfn-ec2-securitygroup-securitygroupingress",
            "stability": "experimental",
            "summary": "`AWS::EC2::SecurityGroup.SecurityGroupIngress`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7354
          },
          "name": "securityGroupIngress",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnSecurityGroup.IngressProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html#cfn-ec2-securitygroup-tags",
            "stability": "experimental",
            "summary": "`AWS::EC2::SecurityGroup.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7360
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cdk.CfnTag"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html#cfn-ec2-securitygroup-vpcid",
            "stability": "experimental",
            "summary": "`AWS::EC2::SecurityGroup.VpcId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7366
          },
          "name": "vpcId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/cdk.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::SpotFleet"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-spotfleet.html",
        "stability": "experimental",
        "summary": "A CloudFormation `AWS::EC2::SpotFleet`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Create a new `AWS::EC2::SpotFleet`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnSpotFleetProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 8232
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8263
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnSpotFleet",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8236
          },
          "name": "cfnResourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8258
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-spotfleet.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata",
            "stability": "experimental",
            "summary": "`AWS::EC2::SpotFleet.SpotFleetRequestConfigData`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8242
          },
          "name": "spotFleetRequestConfigData",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.SpotFleetRequestConfigDataProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.BlockDeviceMappingProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-blockdevicemappings.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.BlockDeviceMappingProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 8272
      },
      "name": "BlockDeviceMappingProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-blockdevicemappings.html#cfn-ec2-spotfleet-blockdevicemapping-devicename",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.BlockDeviceMappingProperty.DeviceName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8277
          },
          "name": "deviceName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-blockdevicemappings.html#cfn-ec2-spotfleet-blockdevicemapping-ebs",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.BlockDeviceMappingProperty.Ebs`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8282
          },
          "name": "ebs",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.EbsBlockDeviceProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-blockdevicemappings.html#cfn-ec2-spotfleet-blockdevicemapping-nodevice",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.BlockDeviceMappingProperty.NoDevice`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8287
          },
          "name": "noDevice",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-blockdevicemappings.html#cfn-ec2-spotfleet-blockdevicemapping-virtualname",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.BlockDeviceMappingProperty.VirtualName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8292
          },
          "name": "virtualName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.ClassicLoadBalancerProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-classicloadbalancer.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.ClassicLoadBalancerProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 8337
      },
      "name": "ClassicLoadBalancerProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-classicloadbalancer.html#cfn-ec2-spotfleet-classicloadbalancer-name",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.ClassicLoadBalancerProperty.Name`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8342
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.ClassicLoadBalancersConfigProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-classicloadbalancersconfig.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.ClassicLoadBalancersConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 8381
      },
      "name": "ClassicLoadBalancersConfigProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-classicloadbalancersconfig.html#cfn-ec2-spotfleet-classicloadbalancersconfig-classicloadbalancers",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.ClassicLoadBalancersConfigProperty.ClassicLoadBalancers`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8386
          },
          "name": "classicLoadBalancers",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.ClassicLoadBalancerProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.EbsBlockDeviceProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-blockdevicemappings-ebs.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.EbsBlockDeviceProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 8425
      },
      "name": "EbsBlockDeviceProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-blockdevicemappings-ebs.html#cfn-ec2-spotfleet-ebsblockdevice-deleteontermination",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.EbsBlockDeviceProperty.DeleteOnTermination`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8430
          },
          "name": "deleteOnTermination",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-blockdevicemappings-ebs.html#cfn-ec2-spotfleet-ebsblockdevice-encrypted",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.EbsBlockDeviceProperty.Encrypted`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8435
          },
          "name": "encrypted",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-blockdevicemappings-ebs.html#cfn-ec2-spotfleet-ebsblockdevice-iops",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.EbsBlockDeviceProperty.Iops`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8440
          },
          "name": "iops",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-blockdevicemappings-ebs.html#cfn-ec2-spotfleet-ebsblockdevice-snapshotid",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.EbsBlockDeviceProperty.SnapshotId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8445
          },
          "name": "snapshotId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-blockdevicemappings-ebs.html#cfn-ec2-spotfleet-ebsblockdevice-volumesize",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.EbsBlockDeviceProperty.VolumeSize`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8450
          },
          "name": "volumeSize",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-blockdevicemappings-ebs.html#cfn-ec2-spotfleet-ebsblockdevice-volumetype",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.EbsBlockDeviceProperty.VolumeType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8455
          },
          "name": "volumeType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.FleetLaunchTemplateSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-fleetlaunchtemplatespecification.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.FleetLaunchTemplateSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 8503
      },
      "name": "FleetLaunchTemplateSpecificationProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-fleetlaunchtemplatespecification.html#cfn-ec2-spotfleet-fleetlaunchtemplatespecification-version",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.FleetLaunchTemplateSpecificationProperty.Version`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8518
          },
          "name": "version",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-fleetlaunchtemplatespecification.html#cfn-ec2-spotfleet-fleetlaunchtemplatespecification-launchtemplateid",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.FleetLaunchTemplateSpecificationProperty.LaunchTemplateId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8508
          },
          "name": "launchTemplateId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-fleetlaunchtemplatespecification.html#cfn-ec2-spotfleet-fleetlaunchtemplatespecification-launchtemplatename",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.FleetLaunchTemplateSpecificationProperty.LaunchTemplateName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8513
          },
          "name": "launchTemplateName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.GroupIdentifierProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-securitygroups.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.GroupIdentifierProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 8561
      },
      "name": "GroupIdentifierProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-securitygroups.html#cfn-ec2-spotfleet-groupidentifier-groupid",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.GroupIdentifierProperty.GroupId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8566
          },
          "name": "groupId",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.IamInstanceProfileSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-iaminstanceprofile.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.IamInstanceProfileSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 8605
      },
      "name": "IamInstanceProfileSpecificationProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-iaminstanceprofile.html#cfn-ec2-spotfleet-iaminstanceprofilespecification-arn",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.IamInstanceProfileSpecificationProperty.Arn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8610
          },
          "name": "arn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.InstanceIpv6AddressProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instanceipv6address.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.InstanceIpv6AddressProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 8648
      },
      "name": "InstanceIpv6AddressProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instanceipv6address.html#cfn-ec2-spotfleet-instanceipv6address-ipv6address",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.InstanceIpv6AddressProperty.Ipv6Address`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8653
          },
          "name": "ipv6Address",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.InstanceNetworkInterfaceSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.InstanceNetworkInterfaceSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 8692
      },
      "name": "InstanceNetworkInterfaceSpecificationProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-associatepublicipaddress",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.InstanceNetworkInterfaceSpecificationProperty.AssociatePublicIpAddress`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8697
          },
          "name": "associatePublicIpAddress",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-deleteontermination",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.InstanceNetworkInterfaceSpecificationProperty.DeleteOnTermination`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8702
          },
          "name": "deleteOnTermination",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-description",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.InstanceNetworkInterfaceSpecificationProperty.Description`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8707
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-deviceindex",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.InstanceNetworkInterfaceSpecificationProperty.DeviceIndex`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8712
          },
          "name": "deviceIndex",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-groups",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.InstanceNetworkInterfaceSpecificationProperty.Groups`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8717
          },
          "name": "groups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-ipv6addresscount",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.InstanceNetworkInterfaceSpecificationProperty.Ipv6AddressCount`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8722
          },
          "name": "ipv6AddressCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-ipv6addresses",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.InstanceNetworkInterfaceSpecificationProperty.Ipv6Addresses`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8727
          },
          "name": "ipv6Addresses",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.InstanceIpv6AddressProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-networkinterfaceid",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.InstanceNetworkInterfaceSpecificationProperty.NetworkInterfaceId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8732
          },
          "name": "networkInterfaceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-privateipaddresses",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.InstanceNetworkInterfaceSpecificationProperty.PrivateIpAddresses`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8737
          },
          "name": "privateIpAddresses",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.PrivateIpAddressSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-secondaryprivateipaddresscount",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.InstanceNetworkInterfaceSpecificationProperty.SecondaryPrivateIpAddressCount`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8742
          },
          "name": "secondaryPrivateIpAddressCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-subnetid",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.InstanceNetworkInterfaceSpecificationProperty.SubnetId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8747
          },
          "name": "subnetId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.LaunchTemplateConfigProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-launchtemplateconfig.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.LaunchTemplateConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 8805
      },
      "name": "LaunchTemplateConfigProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-launchtemplateconfig.html#cfn-ec2-spotfleet-launchtemplateconfig-launchtemplatespecification",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.LaunchTemplateConfigProperty.LaunchTemplateSpecification`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8810
          },
          "name": "launchTemplateSpecification",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.FleetLaunchTemplateSpecificationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-launchtemplateconfig.html#cfn-ec2-spotfleet-launchtemplateconfig-overrides",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.LaunchTemplateConfigProperty.Overrides`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8815
          },
          "name": "overrides",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.LaunchTemplateOverridesProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.LaunchTemplateOverridesProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-launchtemplateoverrides.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.LaunchTemplateOverridesProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 8855
      },
      "name": "LaunchTemplateOverridesProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-launchtemplateoverrides.html#cfn-ec2-spotfleet-launchtemplateoverrides-availabilityzone",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.LaunchTemplateOverridesProperty.AvailabilityZone`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8860
          },
          "name": "availabilityZone",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-launchtemplateoverrides.html#cfn-ec2-spotfleet-launchtemplateoverrides-instancetype",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.LaunchTemplateOverridesProperty.InstanceType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8865
          },
          "name": "instanceType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-launchtemplateoverrides.html#cfn-ec2-spotfleet-launchtemplateoverrides-spotprice",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.LaunchTemplateOverridesProperty.SpotPrice`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8870
          },
          "name": "spotPrice",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-launchtemplateoverrides.html#cfn-ec2-spotfleet-launchtemplateoverrides-subnetid",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.LaunchTemplateOverridesProperty.SubnetId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8875
          },
          "name": "subnetId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-launchtemplateoverrides.html#cfn-ec2-spotfleet-launchtemplateoverrides-weightedcapacity",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.LaunchTemplateOverridesProperty.WeightedCapacity`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8880
          },
          "name": "weightedCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.LoadBalancersConfigProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-loadbalancersconfig.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.LoadBalancersConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 8926
      },
      "name": "LoadBalancersConfigProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-loadbalancersconfig.html#cfn-ec2-spotfleet-loadbalancersconfig-classicloadbalancersconfig",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.LoadBalancersConfigProperty.ClassicLoadBalancersConfig`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8931
          },
          "name": "classicLoadBalancersConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.ClassicLoadBalancersConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-loadbalancersconfig.html#cfn-ec2-spotfleet-loadbalancersconfig-targetgroupsconfig",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.LoadBalancersConfigProperty.TargetGroupsConfig`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8936
          },
          "name": "targetGroupsConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.TargetGroupsConfigProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.PrivateIpAddressSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces-privateipaddresses.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.PrivateIpAddressSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 8976
      },
      "name": "PrivateIpAddressSpecificationProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces-privateipaddresses.html#cfn-ec2-spotfleet-privateipaddressspecification-privateipaddress",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.PrivateIpAddressSpecificationProperty.PrivateIpAddress`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8986
          },
          "name": "privateIpAddress",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces-privateipaddresses.html#cfn-ec2-spotfleet-privateipaddressspecification-primary",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.PrivateIpAddressSpecificationProperty.Primary`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8981
          },
          "name": "primary",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.SpotFleetLaunchSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.SpotFleetLaunchSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 9027
      },
      "name": "SpotFleetLaunchSpecificationProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-imageid",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.SpotFleetLaunchSpecificationProperty.ImageId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9047
          },
          "name": "imageId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-instancetype",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.SpotFleetLaunchSpecificationProperty.InstanceType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9052
          },
          "name": "instanceType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-blockdevicemappings",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.SpotFleetLaunchSpecificationProperty.BlockDeviceMappings`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9032
          },
          "name": "blockDeviceMappings",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.BlockDeviceMappingProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-ebsoptimized",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.SpotFleetLaunchSpecificationProperty.EbsOptimized`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9037
          },
          "name": "ebsOptimized",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-iaminstanceprofile",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.SpotFleetLaunchSpecificationProperty.IamInstanceProfile`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9042
          },
          "name": "iamInstanceProfile",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.IamInstanceProfileSpecificationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-kernelid",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.SpotFleetLaunchSpecificationProperty.KernelId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9057
          },
          "name": "kernelId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-keyname",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.SpotFleetLaunchSpecificationProperty.KeyName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9062
          },
          "name": "keyName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-monitoring",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.SpotFleetLaunchSpecificationProperty.Monitoring`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9067
          },
          "name": "monitoring",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.SpotFleetMonitoringProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-networkinterfaces",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.SpotFleetLaunchSpecificationProperty.NetworkInterfaces`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9072
          },
          "name": "networkInterfaces",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.InstanceNetworkInterfaceSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-placement",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.SpotFleetLaunchSpecificationProperty.Placement`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9077
          },
          "name": "placement",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.SpotPlacementProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-ramdiskid",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.SpotFleetLaunchSpecificationProperty.RamdiskId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9082
          },
          "name": "ramdiskId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-securitygroups",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.SpotFleetLaunchSpecificationProperty.SecurityGroups`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9087
          },
          "name": "securityGroups",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.GroupIdentifierProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-spotprice",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.SpotFleetLaunchSpecificationProperty.SpotPrice`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9092
          },
          "name": "spotPrice",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-subnetid",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.SpotFleetLaunchSpecificationProperty.SubnetId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9097
          },
          "name": "subnetId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-tagspecifications",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.SpotFleetLaunchSpecificationProperty.TagSpecifications`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9102
          },
          "name": "tagSpecifications",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.SpotFleetTagSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-userdata",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.SpotFleetLaunchSpecificationProperty.UserData`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9107
          },
          "name": "userData",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-weightedcapacity",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.SpotFleetLaunchSpecificationProperty.WeightedCapacity`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9112
          },
          "name": "weightedCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.SpotFleetMonitoringProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-monitoring.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.SpotFleetMonitoringProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 9184
      },
      "name": "SpotFleetMonitoringProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-monitoring.html#cfn-ec2-spotfleet-spotfleetmonitoring-enabled",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.SpotFleetMonitoringProperty.Enabled`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9189
          },
          "name": "enabled",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.SpotFleetRequestConfigDataProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.SpotFleetRequestConfigDataProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 9227
      },
      "name": "SpotFleetRequestConfigDataProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-iamfleetrole",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.SpotFleetRequestConfigDataProperty.IamFleetRole`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9242
          },
          "name": "iamFleetRole",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-targetcapacity",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.SpotFleetRequestConfigDataProperty.TargetCapacity`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9277
          },
          "name": "targetCapacity",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-allocationstrategy",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.SpotFleetRequestConfigDataProperty.AllocationStrategy`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9232
          },
          "name": "allocationStrategy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-excesscapacityterminationpolicy",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.SpotFleetRequestConfigDataProperty.ExcessCapacityTerminationPolicy`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9237
          },
          "name": "excessCapacityTerminationPolicy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-instanceinterruptionbehavior",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.SpotFleetRequestConfigDataProperty.InstanceInterruptionBehavior`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9247
          },
          "name": "instanceInterruptionBehavior",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.SpotFleetRequestConfigDataProperty.LaunchSpecifications`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9252
          },
          "name": "launchSpecifications",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.SpotFleetLaunchSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-launchtemplateconfigs",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.SpotFleetRequestConfigDataProperty.LaunchTemplateConfigs`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9257
          },
          "name": "launchTemplateConfigs",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.LaunchTemplateConfigProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-loadbalancersconfig",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.SpotFleetRequestConfigDataProperty.LoadBalancersConfig`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9262
          },
          "name": "loadBalancersConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.LoadBalancersConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-replaceunhealthyinstances",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.SpotFleetRequestConfigDataProperty.ReplaceUnhealthyInstances`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9267
          },
          "name": "replaceUnhealthyInstances",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-spotprice",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.SpotFleetRequestConfigDataProperty.SpotPrice`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9272
          },
          "name": "spotPrice",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-terminateinstanceswithexpiration",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.SpotFleetRequestConfigDataProperty.TerminateInstancesWithExpiration`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9282
          },
          "name": "terminateInstancesWithExpiration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-type",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.SpotFleetRequestConfigDataProperty.Type`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9287
          },
          "name": "type",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-validfrom",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.SpotFleetRequestConfigDataProperty.ValidFrom`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9292
          },
          "name": "validFrom",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-validuntil",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.SpotFleetRequestConfigDataProperty.ValidUntil`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9297
          },
          "name": "validUntil",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.SpotFleetTagSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-tagspecifications.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.SpotFleetTagSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 9363
      },
      "name": "SpotFleetTagSpecificationProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-tagspecifications.html#cfn-ec2-spotfleet-spotfleettagspecification-resourcetype",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.SpotFleetTagSpecificationProperty.ResourceType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9368
          },
          "name": "resourceType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-tagspecifications.html#cfn-ec2-spotfleet-tags",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.SpotFleetTagSpecificationProperty.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9373
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cdk.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.SpotPlacementProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-placement.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.SpotPlacementProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 9413
      },
      "name": "SpotPlacementProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-placement.html#cfn-ec2-spotfleet-spotplacement-availabilityzone",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.SpotPlacementProperty.AvailabilityZone`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9418
          },
          "name": "availabilityZone",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-placement.html#cfn-ec2-spotfleet-spotplacement-groupname",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.SpotPlacementProperty.GroupName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9423
          },
          "name": "groupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-placement.html#cfn-ec2-spotfleet-spotplacement-tenancy",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.SpotPlacementProperty.Tenancy`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9428
          },
          "name": "tenancy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.TargetGroupProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-targetgroup.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.TargetGroupProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 9470
      },
      "name": "TargetGroupProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-targetgroup.html#cfn-ec2-spotfleet-targetgroup-arn",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.TargetGroupProperty.Arn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9475
          },
          "name": "arn",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.TargetGroupsConfigProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-targetgroupsconfig.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.TargetGroupsConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 9514
      },
      "name": "TargetGroupsConfigProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-targetgroupsconfig.html#cfn-ec2-spotfleet-targetgroupsconfig-targetgroups",
            "stability": "experimental",
            "summary": "`CfnSpotFleet.TargetGroupsConfigProperty.TargetGroups`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9519
          },
          "name": "targetGroups",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.TargetGroupProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnSpotFleetProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-spotfleet.html",
        "stability": "experimental",
        "summary": "Properties for defining a `AWS::EC2::SpotFleet`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleetProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 8186
      },
      "name": "CfnSpotFleetProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-spotfleet.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata",
            "stability": "experimental",
            "summary": "`AWS::EC2::SpotFleet.SpotFleetRequestConfigData`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8192
          },
          "name": "spotFleetRequestConfigData",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.SpotFleetRequestConfigDataProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnSubnet": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/cdk.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::Subnet"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html",
        "stability": "experimental",
        "summary": "A CloudFormation `AWS::EC2::Subnet`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSubnet",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Create a new `AWS::EC2::Subnet`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnSubnetProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 9653
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9757
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnSubnet",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9657
          },
          "name": "cfnResourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "AvailabilityZone"
            },
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9662
          },
          "name": "attrAvailabilityZone",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Ipv6CidrBlocks"
            },
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9667
          },
          "name": "attrIpv6CidrBlocks",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "NetworkAclAssociationId"
            },
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9672
          },
          "name": "attrNetworkAclAssociationId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "VpcId"
            },
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9677
          },
          "name": "attrVpcId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9746
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-tags",
            "stability": "experimental",
            "summary": "`AWS::EC2::Subnet.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9719
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/cdk.TagManager"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-cidrblock",
            "stability": "experimental",
            "summary": "`AWS::EC2::Subnet.CidrBlock`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9683
          },
          "name": "cidrBlock",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-awsec2subnet-prop-vpcid",
            "stability": "experimental",
            "summary": "`AWS::EC2::Subnet.VpcId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9689
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-assignipv6addressoncreation",
            "stability": "experimental",
            "summary": "`AWS::EC2::Subnet.AssignIpv6AddressOnCreation`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9695
          },
          "name": "assignIpv6AddressOnCreation",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-availabilityzone",
            "stability": "experimental",
            "summary": "`AWS::EC2::Subnet.AvailabilityZone`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9701
          },
          "name": "availabilityZone",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-ipv6cidrblock",
            "stability": "experimental",
            "summary": "`AWS::EC2::Subnet.Ipv6CidrBlock`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9707
          },
          "name": "ipv6CidrBlock",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-mappubliciponlaunch",
            "stability": "experimental",
            "summary": "`AWS::EC2::Subnet.MapPublicIpOnLaunch`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9713
          },
          "name": "mapPublicIpOnLaunch",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnSubnetCidrBlock": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/cdk.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::SubnetCidrBlock"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnetcidrblock.html",
        "stability": "experimental",
        "summary": "A CloudFormation `AWS::EC2::SubnetCidrBlock`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSubnetCidrBlock",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Create a new `AWS::EC2::SubnetCidrBlock`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnSubnetCidrBlockProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 9821
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9861
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnSubnetCidrBlock",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9825
          },
          "name": "cfnResourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9855
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnetcidrblock.html#cfn-ec2-subnetcidrblock-ipv6cidrblock",
            "stability": "experimental",
            "summary": "`AWS::EC2::SubnetCidrBlock.Ipv6CidrBlock`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9831
          },
          "name": "ipv6CidrBlock",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnetcidrblock.html#cfn-ec2-subnetcidrblock-subnetid",
            "stability": "experimental",
            "summary": "`AWS::EC2::SubnetCidrBlock.SubnetId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9837
          },
          "name": "subnetId",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnSubnetCidrBlockProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnetcidrblock.html",
        "stability": "experimental",
        "summary": "Properties for defining a `AWS::EC2::SubnetCidrBlock`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSubnetCidrBlockProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 9766
      },
      "name": "CfnSubnetCidrBlockProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnetcidrblock.html#cfn-ec2-subnetcidrblock-ipv6cidrblock",
            "stability": "experimental",
            "summary": "`AWS::EC2::SubnetCidrBlock.Ipv6CidrBlock`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9772
          },
          "name": "ipv6CidrBlock",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnetcidrblock.html#cfn-ec2-subnetcidrblock-subnetid",
            "stability": "experimental",
            "summary": "`AWS::EC2::SubnetCidrBlock.SubnetId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9778
          },
          "name": "subnetId",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnSubnetNetworkAclAssociation": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/cdk.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::SubnetNetworkAclAssociation"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-network-acl-assoc.html",
        "stability": "experimental",
        "summary": "A CloudFormation `AWS::EC2::SubnetNetworkAclAssociation`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSubnetNetworkAclAssociation",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Create a new `AWS::EC2::SubnetNetworkAclAssociation`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnSubnetNetworkAclAssociationProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 9925
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9971
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnSubnetNetworkAclAssociation",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9929
          },
          "name": "cfnResourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "AssociationId"
            },
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9934
          },
          "name": "attrAssociationId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9965
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-network-acl-assoc.html#cfn-ec2-subnetnetworkaclassociation-networkaclid",
            "stability": "experimental",
            "summary": "`AWS::EC2::SubnetNetworkAclAssociation.NetworkAclId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9940
          },
          "name": "networkAclId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-network-acl-assoc.html#cfn-ec2-subnetnetworkaclassociation-associationid",
            "stability": "experimental",
            "summary": "`AWS::EC2::SubnetNetworkAclAssociation.SubnetId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9946
          },
          "name": "subnetId",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnSubnetNetworkAclAssociationProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-network-acl-assoc.html",
        "stability": "experimental",
        "summary": "Properties for defining a `AWS::EC2::SubnetNetworkAclAssociation`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSubnetNetworkAclAssociationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 9870
      },
      "name": "CfnSubnetNetworkAclAssociationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-network-acl-assoc.html#cfn-ec2-subnetnetworkaclassociation-networkaclid",
            "stability": "experimental",
            "summary": "`AWS::EC2::SubnetNetworkAclAssociation.NetworkAclId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9876
          },
          "name": "networkAclId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-network-acl-assoc.html#cfn-ec2-subnetnetworkaclassociation-associationid",
            "stability": "experimental",
            "summary": "`AWS::EC2::SubnetNetworkAclAssociation.SubnetId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9882
          },
          "name": "subnetId",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnSubnetProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html",
        "stability": "experimental",
        "summary": "Properties for defining a `AWS::EC2::Subnet`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSubnetProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 9558
      },
      "name": "CfnSubnetProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-cidrblock",
            "stability": "experimental",
            "summary": "`AWS::EC2::Subnet.CidrBlock`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9564
          },
          "name": "cidrBlock",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-awsec2subnet-prop-vpcid",
            "stability": "experimental",
            "summary": "`AWS::EC2::Subnet.VpcId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9570
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-assignipv6addressoncreation",
            "stability": "experimental",
            "summary": "`AWS::EC2::Subnet.AssignIpv6AddressOnCreation`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9576
          },
          "name": "assignIpv6AddressOnCreation",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-availabilityzone",
            "stability": "experimental",
            "summary": "`AWS::EC2::Subnet.AvailabilityZone`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9582
          },
          "name": "availabilityZone",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-ipv6cidrblock",
            "stability": "experimental",
            "summary": "`AWS::EC2::Subnet.Ipv6CidrBlock`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9588
          },
          "name": "ipv6CidrBlock",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-mappubliciponlaunch",
            "stability": "experimental",
            "summary": "`AWS::EC2::Subnet.MapPublicIpOnLaunch`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9594
          },
          "name": "mapPublicIpOnLaunch",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-tags",
            "stability": "experimental",
            "summary": "`AWS::EC2::Subnet.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9600
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cdk.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnSubnetRouteTableAssociation": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/cdk.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::SubnetRouteTableAssociation"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-route-table-assoc.html",
        "stability": "experimental",
        "summary": "A CloudFormation `AWS::EC2::SubnetRouteTableAssociation`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSubnetRouteTableAssociation",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Create a new `AWS::EC2::SubnetRouteTableAssociation`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnSubnetRouteTableAssociationProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 10035
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10075
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnSubnetRouteTableAssociation",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10039
          },
          "name": "cfnResourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10069
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-route-table-assoc.html#cfn-ec2-subnetroutetableassociation-routetableid",
            "stability": "experimental",
            "summary": "`AWS::EC2::SubnetRouteTableAssociation.RouteTableId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10045
          },
          "name": "routeTableId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-route-table-assoc.html#cfn-ec2-subnetroutetableassociation-subnetid",
            "stability": "experimental",
            "summary": "`AWS::EC2::SubnetRouteTableAssociation.SubnetId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10051
          },
          "name": "subnetId",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnSubnetRouteTableAssociationProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-route-table-assoc.html",
        "stability": "experimental",
        "summary": "Properties for defining a `AWS::EC2::SubnetRouteTableAssociation`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSubnetRouteTableAssociationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 9980
      },
      "name": "CfnSubnetRouteTableAssociationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-route-table-assoc.html#cfn-ec2-subnetroutetableassociation-routetableid",
            "stability": "experimental",
            "summary": "`AWS::EC2::SubnetRouteTableAssociation.RouteTableId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9986
          },
          "name": "routeTableId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-route-table-assoc.html#cfn-ec2-subnetroutetableassociation-subnetid",
            "stability": "experimental",
            "summary": "`AWS::EC2::SubnetRouteTableAssociation.SubnetId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9992
          },
          "name": "subnetId",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnTransitGateway": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/cdk.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::TransitGateway"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html",
        "stability": "experimental",
        "summary": "A CloudFormation `AWS::EC2::TransitGateway`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTransitGateway",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Create a new `AWS::EC2::TransitGateway`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 10185
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10271
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnTransitGateway",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10189
          },
          "name": "cfnResourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10259
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-tags",
            "stability": "experimental",
            "summary": "`AWS::EC2::TransitGateway.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10231
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/cdk.TagManager"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-amazonsideasn",
            "stability": "experimental",
            "summary": "`AWS::EC2::TransitGateway.AmazonSideAsn`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10195
          },
          "name": "amazonSideAsn",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-autoacceptsharedattachments",
            "stability": "experimental",
            "summary": "`AWS::EC2::TransitGateway.AutoAcceptSharedAttachments`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10201
          },
          "name": "autoAcceptSharedAttachments",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-defaultroutetableassociation",
            "stability": "experimental",
            "summary": "`AWS::EC2::TransitGateway.DefaultRouteTableAssociation`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10207
          },
          "name": "defaultRouteTableAssociation",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-defaultroutetablepropagation",
            "stability": "experimental",
            "summary": "`AWS::EC2::TransitGateway.DefaultRouteTablePropagation`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10213
          },
          "name": "defaultRouteTablePropagation",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-description",
            "stability": "experimental",
            "summary": "`AWS::EC2::TransitGateway.Description`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10219
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-dnssupport",
            "stability": "experimental",
            "summary": "`AWS::EC2::TransitGateway.DnsSupport`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10225
          },
          "name": "dnsSupport",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-vpnecmpsupport",
            "stability": "experimental",
            "summary": "`AWS::EC2::TransitGateway.VpnEcmpSupport`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10237
          },
          "name": "vpnEcmpSupport",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnTransitGatewayAttachment": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/cdk.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::TransitGatewayAttachment"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayattachment.html",
        "stability": "experimental",
        "summary": "A CloudFormation `AWS::EC2::TransitGatewayAttachment`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayAttachment",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Create a new `AWS::EC2::TransitGatewayAttachment`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayAttachmentProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 10352
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10409
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnTransitGatewayAttachment",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10356
          },
          "name": "cfnResourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10401
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayattachment.html#cfn-ec2-transitgatewayattachment-tags",
            "stability": "experimental",
            "summary": "`AWS::EC2::TransitGatewayAttachment.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10380
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/cdk.TagManager"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayattachment.html#cfn-ec2-transitgatewayattachment-subnetids",
            "stability": "experimental",
            "summary": "`AWS::EC2::TransitGatewayAttachment.SubnetIds`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10362
          },
          "name": "subnetIds",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayattachment.html#cfn-ec2-transitgatewayattachment-transitgatewayid",
            "stability": "experimental",
            "summary": "`AWS::EC2::TransitGatewayAttachment.TransitGatewayId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10368
          },
          "name": "transitGatewayId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayattachment.html#cfn-ec2-transitgatewayattachment-vpcid",
            "stability": "experimental",
            "summary": "`AWS::EC2::TransitGatewayAttachment.VpcId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10374
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnTransitGatewayAttachmentProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayattachment.html",
        "stability": "experimental",
        "summary": "Properties for defining a `AWS::EC2::TransitGatewayAttachment`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayAttachmentProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 10280
      },
      "name": "CfnTransitGatewayAttachmentProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayattachment.html#cfn-ec2-transitgatewayattachment-subnetids",
            "stability": "experimental",
            "summary": "`AWS::EC2::TransitGatewayAttachment.SubnetIds`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10286
          },
          "name": "subnetIds",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayattachment.html#cfn-ec2-transitgatewayattachment-transitgatewayid",
            "stability": "experimental",
            "summary": "`AWS::EC2::TransitGatewayAttachment.TransitGatewayId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10292
          },
          "name": "transitGatewayId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayattachment.html#cfn-ec2-transitgatewayattachment-vpcid",
            "stability": "experimental",
            "summary": "`AWS::EC2::TransitGatewayAttachment.VpcId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10298
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayattachment.html#cfn-ec2-transitgatewayattachment-tags",
            "stability": "experimental",
            "summary": "`AWS::EC2::TransitGatewayAttachment.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10304
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cdk.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnTransitGatewayProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html",
        "stability": "experimental",
        "summary": "Properties for defining a `AWS::EC2::TransitGateway`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 10084
      },
      "name": "CfnTransitGatewayProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-amazonsideasn",
            "stability": "experimental",
            "summary": "`AWS::EC2::TransitGateway.AmazonSideAsn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10090
          },
          "name": "amazonSideAsn",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-autoacceptsharedattachments",
            "stability": "experimental",
            "summary": "`AWS::EC2::TransitGateway.AutoAcceptSharedAttachments`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10096
          },
          "name": "autoAcceptSharedAttachments",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-defaultroutetableassociation",
            "stability": "experimental",
            "summary": "`AWS::EC2::TransitGateway.DefaultRouteTableAssociation`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10102
          },
          "name": "defaultRouteTableAssociation",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-defaultroutetablepropagation",
            "stability": "experimental",
            "summary": "`AWS::EC2::TransitGateway.DefaultRouteTablePropagation`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10108
          },
          "name": "defaultRouteTablePropagation",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-description",
            "stability": "experimental",
            "summary": "`AWS::EC2::TransitGateway.Description`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10114
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-dnssupport",
            "stability": "experimental",
            "summary": "`AWS::EC2::TransitGateway.DnsSupport`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10120
          },
          "name": "dnsSupport",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-tags",
            "stability": "experimental",
            "summary": "`AWS::EC2::TransitGateway.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10126
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cdk.CfnTag"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-vpnecmpsupport",
            "stability": "experimental",
            "summary": "`AWS::EC2::TransitGateway.VpnEcmpSupport`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10132
          },
          "name": "vpnEcmpSupport",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnTransitGatewayRoute": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/cdk.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::TransitGatewayRoute"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroute.html",
        "stability": "experimental",
        "summary": "A CloudFormation `AWS::EC2::TransitGatewayRoute`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayRoute",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Create a new `AWS::EC2::TransitGatewayRoute`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayRouteProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 10488
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10543
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnTransitGatewayRoute",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10492
          },
          "name": "cfnResourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10535
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroute.html#cfn-ec2-transitgatewayroute-transitgatewayroutetableid",
            "stability": "experimental",
            "summary": "`AWS::EC2::TransitGatewayRoute.TransitGatewayRouteTableId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10498
          },
          "name": "transitGatewayRouteTableId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroute.html#cfn-ec2-transitgatewayroute-blackhole",
            "stability": "experimental",
            "summary": "`AWS::EC2::TransitGatewayRoute.Blackhole`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10504
          },
          "name": "blackhole",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroute.html#cfn-ec2-transitgatewayroute-destinationcidrblock",
            "stability": "experimental",
            "summary": "`AWS::EC2::TransitGatewayRoute.DestinationCidrBlock`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10510
          },
          "name": "destinationCidrBlock",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroute.html#cfn-ec2-transitgatewayroute-transitgatewayattachmentid",
            "stability": "experimental",
            "summary": "`AWS::EC2::TransitGatewayRoute.TransitGatewayAttachmentId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10516
          },
          "name": "transitGatewayAttachmentId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnTransitGatewayRouteProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroute.html",
        "stability": "experimental",
        "summary": "Properties for defining a `AWS::EC2::TransitGatewayRoute`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayRouteProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 10418
      },
      "name": "CfnTransitGatewayRouteProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroute.html#cfn-ec2-transitgatewayroute-transitgatewayroutetableid",
            "stability": "experimental",
            "summary": "`AWS::EC2::TransitGatewayRoute.TransitGatewayRouteTableId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10424
          },
          "name": "transitGatewayRouteTableId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroute.html#cfn-ec2-transitgatewayroute-blackhole",
            "stability": "experimental",
            "summary": "`AWS::EC2::TransitGatewayRoute.Blackhole`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10430
          },
          "name": "blackhole",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroute.html#cfn-ec2-transitgatewayroute-destinationcidrblock",
            "stability": "experimental",
            "summary": "`AWS::EC2::TransitGatewayRoute.DestinationCidrBlock`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10436
          },
          "name": "destinationCidrBlock",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroute.html#cfn-ec2-transitgatewayroute-transitgatewayattachmentid",
            "stability": "experimental",
            "summary": "`AWS::EC2::TransitGatewayRoute.TransitGatewayAttachmentId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10442
          },
          "name": "transitGatewayAttachmentId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnTransitGatewayRouteTable": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/cdk.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::TransitGatewayRouteTable"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetable.html",
        "stability": "experimental",
        "summary": "A CloudFormation `AWS::EC2::TransitGatewayRouteTable`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayRouteTable",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Create a new `AWS::EC2::TransitGatewayRouteTable`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayRouteTableProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 10606
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10645
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnTransitGatewayRouteTable",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10610
          },
          "name": "cfnResourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10639
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetable.html#cfn-ec2-transitgatewayroutetable-tags",
            "stability": "experimental",
            "summary": "`AWS::EC2::TransitGatewayRouteTable.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10622
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/cdk.TagManager"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetable.html#cfn-ec2-transitgatewayroutetable-transitgatewayid",
            "stability": "experimental",
            "summary": "`AWS::EC2::TransitGatewayRouteTable.TransitGatewayId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10616
          },
          "name": "transitGatewayId",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnTransitGatewayRouteTableAssociation": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/cdk.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::TransitGatewayRouteTableAssociation"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetableassociation.html",
        "stability": "experimental",
        "summary": "A CloudFormation `AWS::EC2::TransitGatewayRouteTableAssociation`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayRouteTableAssociation",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Create a new `AWS::EC2::TransitGatewayRouteTableAssociation`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayRouteTableAssociationProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 10709
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10749
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnTransitGatewayRouteTableAssociation",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10713
          },
          "name": "cfnResourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10743
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetableassociation.html#cfn-ec2-transitgatewayroutetableassociation-transitgatewayattachmentid",
            "stability": "experimental",
            "summary": "`AWS::EC2::TransitGatewayRouteTableAssociation.TransitGatewayAttachmentId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10719
          },
          "name": "transitGatewayAttachmentId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetableassociation.html#cfn-ec2-transitgatewayroutetableassociation-transitgatewayroutetableid",
            "stability": "experimental",
            "summary": "`AWS::EC2::TransitGatewayRouteTableAssociation.TransitGatewayRouteTableId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10725
          },
          "name": "transitGatewayRouteTableId",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnTransitGatewayRouteTableAssociationProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetableassociation.html",
        "stability": "experimental",
        "summary": "Properties for defining a `AWS::EC2::TransitGatewayRouteTableAssociation`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayRouteTableAssociationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 10654
      },
      "name": "CfnTransitGatewayRouteTableAssociationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetableassociation.html#cfn-ec2-transitgatewayroutetableassociation-transitgatewayattachmentid",
            "stability": "experimental",
            "summary": "`AWS::EC2::TransitGatewayRouteTableAssociation.TransitGatewayAttachmentId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10660
          },
          "name": "transitGatewayAttachmentId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetableassociation.html#cfn-ec2-transitgatewayroutetableassociation-transitgatewayroutetableid",
            "stability": "experimental",
            "summary": "`AWS::EC2::TransitGatewayRouteTableAssociation.TransitGatewayRouteTableId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10666
          },
          "name": "transitGatewayRouteTableId",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnTransitGatewayRouteTablePropagation": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/cdk.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::TransitGatewayRouteTablePropagation"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetablepropagation.html",
        "stability": "experimental",
        "summary": "A CloudFormation `AWS::EC2::TransitGatewayRouteTablePropagation`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayRouteTablePropagation",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Create a new `AWS::EC2::TransitGatewayRouteTablePropagation`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayRouteTablePropagationProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 10813
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10853
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnTransitGatewayRouteTablePropagation",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10817
          },
          "name": "cfnResourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10847
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetablepropagation.html#cfn-ec2-transitgatewayroutetablepropagation-transitgatewayattachmentid",
            "stability": "experimental",
            "summary": "`AWS::EC2::TransitGatewayRouteTablePropagation.TransitGatewayAttachmentId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10823
          },
          "name": "transitGatewayAttachmentId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetablepropagation.html#cfn-ec2-transitgatewayroutetablepropagation-transitgatewayroutetableid",
            "stability": "experimental",
            "summary": "`AWS::EC2::TransitGatewayRouteTablePropagation.TransitGatewayRouteTableId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10829
          },
          "name": "transitGatewayRouteTableId",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnTransitGatewayRouteTablePropagationProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetablepropagation.html",
        "stability": "experimental",
        "summary": "Properties for defining a `AWS::EC2::TransitGatewayRouteTablePropagation`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayRouteTablePropagationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 10758
      },
      "name": "CfnTransitGatewayRouteTablePropagationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetablepropagation.html#cfn-ec2-transitgatewayroutetablepropagation-transitgatewayattachmentid",
            "stability": "experimental",
            "summary": "`AWS::EC2::TransitGatewayRouteTablePropagation.TransitGatewayAttachmentId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10764
          },
          "name": "transitGatewayAttachmentId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetablepropagation.html#cfn-ec2-transitgatewayroutetablepropagation-transitgatewayroutetableid",
            "stability": "experimental",
            "summary": "`AWS::EC2::TransitGatewayRouteTablePropagation.TransitGatewayRouteTableId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10770
          },
          "name": "transitGatewayRouteTableId",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnTransitGatewayRouteTableProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetable.html",
        "stability": "experimental",
        "summary": "Properties for defining a `AWS::EC2::TransitGatewayRouteTable`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayRouteTableProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 10552
      },
      "name": "CfnTransitGatewayRouteTableProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetable.html#cfn-ec2-transitgatewayroutetable-transitgatewayid",
            "stability": "experimental",
            "summary": "`AWS::EC2::TransitGatewayRouteTable.TransitGatewayId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10558
          },
          "name": "transitGatewayId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetable.html#cfn-ec2-transitgatewayroutetable-tags",
            "stability": "experimental",
            "summary": "`AWS::EC2::TransitGatewayRouteTable.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10564
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cdk.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnVPC": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/cdk.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::VPC"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html",
        "stability": "experimental",
        "summary": "A CloudFormation `AWS::EC2::VPC`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPC",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Create a new `AWS::EC2::VPC`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnVPCProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 10940
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11033
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnVPC",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10944
          },
          "name": "cfnResourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "CidrBlock"
            },
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10949
          },
          "name": "attrCidrBlock",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "CidrBlockAssociations"
            },
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10954
          },
          "name": "attrCidrBlockAssociations",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "DefaultNetworkAcl"
            },
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10959
          },
          "name": "attrDefaultNetworkAcl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "DefaultSecurityGroup"
            },
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10964
          },
          "name": "attrDefaultSecurityGroup",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Ipv6CidrBlocks"
            },
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10969
          },
          "name": "attrIpv6CidrBlocks",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11024
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html#cfn-aws-ec2-vpc-tags",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPC.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10999
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/cdk.TagManager"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html#cfn-aws-ec2-vpc-cidrblock",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPC.CidrBlock`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10975
          },
          "name": "cidrBlock",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html#cfn-aws-ec2-vpc-EnableDnsHostnames",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPC.EnableDnsHostnames`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10981
          },
          "name": "enableDnsHostnames",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html#cfn-aws-ec2-vpc-EnableDnsSupport",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPC.EnableDnsSupport`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10987
          },
          "name": "enableDnsSupport",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html#cfn-aws-ec2-vpc-instancetenancy",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPC.InstanceTenancy`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10993
          },
          "name": "instanceTenancy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnVPCCidrBlock": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/cdk.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::VPCCidrBlock"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html",
        "stability": "experimental",
        "summary": "A CloudFormation `AWS::EC2::VPCCidrBlock`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPCCidrBlock",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Create a new `AWS::EC2::VPCCidrBlock`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnVPCCidrBlockProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 11104
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11151
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnVPCCidrBlock",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11108
          },
          "name": "cfnResourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11144
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-vpcid",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPCCidrBlock.VpcId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11114
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-amazonprovidedipv6cidrblock",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPCCidrBlock.AmazonProvidedIpv6CidrBlock`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11120
          },
          "name": "amazonProvidedIpv6CidrBlock",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-cidrblock",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPCCidrBlock.CidrBlock`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11126
          },
          "name": "cidrBlock",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnVPCCidrBlockProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html",
        "stability": "experimental",
        "summary": "Properties for defining a `AWS::EC2::VPCCidrBlock`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPCCidrBlockProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 11042
      },
      "name": "CfnVPCCidrBlockProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-vpcid",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPCCidrBlock.VpcId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11048
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-amazonprovidedipv6cidrblock",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPCCidrBlock.AmazonProvidedIpv6CidrBlock`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11054
          },
          "name": "amazonProvidedIpv6CidrBlock",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-cidrblock",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPCCidrBlock.CidrBlock`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11060
          },
          "name": "cidrBlock",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnVPCDHCPOptionsAssociation": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/cdk.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::VPCDHCPOptionsAssociation"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-dhcp-options-assoc.html",
        "stability": "experimental",
        "summary": "A CloudFormation `AWS::EC2::VPCDHCPOptionsAssociation`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPCDHCPOptionsAssociation",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Create a new `AWS::EC2::VPCDHCPOptionsAssociation`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnVPCDHCPOptionsAssociationProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 11215
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11255
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnVPCDHCPOptionsAssociation",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11219
          },
          "name": "cfnResourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11249
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-dhcp-options-assoc.html#cfn-ec2-vpcdhcpoptionsassociation-dhcpoptionsid",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPCDHCPOptionsAssociation.DhcpOptionsId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11225
          },
          "name": "dhcpOptionsId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-dhcp-options-assoc.html#cfn-ec2-vpcdhcpoptionsassociation-vpcid",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPCDHCPOptionsAssociation.VpcId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11231
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnVPCDHCPOptionsAssociationProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-dhcp-options-assoc.html",
        "stability": "experimental",
        "summary": "Properties for defining a `AWS::EC2::VPCDHCPOptionsAssociation`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPCDHCPOptionsAssociationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 11160
      },
      "name": "CfnVPCDHCPOptionsAssociationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-dhcp-options-assoc.html#cfn-ec2-vpcdhcpoptionsassociation-dhcpoptionsid",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPCDHCPOptionsAssociation.DhcpOptionsId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11166
          },
          "name": "dhcpOptionsId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-dhcp-options-assoc.html#cfn-ec2-vpcdhcpoptionsassociation-vpcid",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPCDHCPOptionsAssociation.VpcId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11172
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnVPCEndpoint": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/cdk.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::VPCEndpoint"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html",
        "stability": "experimental",
        "summary": "A CloudFormation `AWS::EC2::VPCEndpoint`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPCEndpoint",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Create a new `AWS::EC2::VPCEndpoint`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnVPCEndpointProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 11367
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11473
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnVPCEndpoint",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11371
          },
          "name": "cfnResourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "CreationTimestamp"
            },
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11376
          },
          "name": "attrCreationTimestamp",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "DnsEntries"
            },
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11381
          },
          "name": "attrDnsEntries",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "NetworkInterfaceIds"
            },
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11386
          },
          "name": "attrNetworkInterfaceIds",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11461
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-servicename",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPCEndpoint.ServiceName`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11392
          },
          "name": "serviceName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-vpcid",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPCEndpoint.VpcId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11398
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-policydocument",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPCEndpoint.PolicyDocument`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11404
          },
          "name": "policyDocument",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "json"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-privatednsenabled",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPCEndpoint.PrivateDnsEnabled`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11410
          },
          "name": "privateDnsEnabled",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-routetableids",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPCEndpoint.RouteTableIds`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11416
          },
          "name": "routeTableIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-securitygroupids",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPCEndpoint.SecurityGroupIds`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11422
          },
          "name": "securityGroupIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-subnetids",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPCEndpoint.SubnetIds`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11428
          },
          "name": "subnetIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-vpcendpointtype",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPCEndpoint.VpcEndpointType`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11434
          },
          "name": "vpcEndpointType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnVPCEndpointConnectionNotification": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/cdk.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::VPCEndpointConnectionNotification"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html",
        "stability": "experimental",
        "summary": "A CloudFormation `AWS::EC2::VPCEndpointConnectionNotification`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPCEndpointConnectionNotification",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Create a new `AWS::EC2::VPCEndpointConnectionNotification`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnVPCEndpointConnectionNotificationProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 11553
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11609
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnVPCEndpointConnectionNotification",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11557
          },
          "name": "cfnResourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11601
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html#cfn-ec2-vpcendpointconnectionnotification-connectionevents",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPCEndpointConnectionNotification.ConnectionEvents`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11563
          },
          "name": "connectionEvents",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html#cfn-ec2-vpcendpointconnectionnotification-connectionnotificationarn",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPCEndpointConnectionNotification.ConnectionNotificationArn`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11569
          },
          "name": "connectionNotificationArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html#cfn-ec2-vpcendpointconnectionnotification-serviceid",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPCEndpointConnectionNotification.ServiceId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11575
          },
          "name": "serviceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html#cfn-ec2-vpcendpointconnectionnotification-vpcendpointid",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPCEndpointConnectionNotification.VPCEndpointId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11581
          },
          "name": "vpcEndpointId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnVPCEndpointConnectionNotificationProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html",
        "stability": "experimental",
        "summary": "Properties for defining a `AWS::EC2::VPCEndpointConnectionNotification`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPCEndpointConnectionNotificationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 11482
      },
      "name": "CfnVPCEndpointConnectionNotificationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html#cfn-ec2-vpcendpointconnectionnotification-connectionevents",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPCEndpointConnectionNotification.ConnectionEvents`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11488
          },
          "name": "connectionEvents",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html#cfn-ec2-vpcendpointconnectionnotification-connectionnotificationarn",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPCEndpointConnectionNotification.ConnectionNotificationArn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11494
          },
          "name": "connectionNotificationArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html#cfn-ec2-vpcendpointconnectionnotification-serviceid",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPCEndpointConnectionNotification.ServiceId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11500
          },
          "name": "serviceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html#cfn-ec2-vpcendpointconnectionnotification-vpcendpointid",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPCEndpointConnectionNotification.VPCEndpointId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11506
          },
          "name": "vpcEndpointId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnVPCEndpointProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html",
        "stability": "experimental",
        "summary": "Properties for defining a `AWS::EC2::VPCEndpoint`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPCEndpointProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 11264
      },
      "name": "CfnVPCEndpointProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-servicename",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPCEndpoint.ServiceName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11270
          },
          "name": "serviceName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-vpcid",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPCEndpoint.VpcId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11276
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-policydocument",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPCEndpoint.PolicyDocument`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11282
          },
          "name": "policyDocument",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "json"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-privatednsenabled",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPCEndpoint.PrivateDnsEnabled`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11288
          },
          "name": "privateDnsEnabled",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-routetableids",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPCEndpoint.RouteTableIds`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11294
          },
          "name": "routeTableIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-securitygroupids",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPCEndpoint.SecurityGroupIds`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11300
          },
          "name": "securityGroupIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-subnetids",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPCEndpoint.SubnetIds`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11306
          },
          "name": "subnetIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-vpcendpointtype",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPCEndpoint.VpcEndpointType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11312
          },
          "name": "vpcEndpointType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnVPCEndpointService": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/cdk.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::VPCEndpointService"
        },
        "see": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservice.html",
        "stability": "experimental",
        "summary": "A CloudFormation `AWS::EC2::VPCEndpointService`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPCEndpointService",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Create a new `AWS::EC2::VPCEndpointService`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnVPCEndpointServiceProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 11672
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11711
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnVPCEndpointService",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11676
          },
          "name": "cfnResourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11705
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservice.html#cfn-ec2-vpcendpointservice-networkloadbalancerarns",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPCEndpointService.NetworkLoadBalancerArns`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11682
          },
          "name": "networkLoadBalancerArns",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservice.html#cfn-ec2-vpcendpointservice-acceptancerequired",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPCEndpointService.AcceptanceRequired`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11688
          },
          "name": "acceptanceRequired",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnVPCEndpointServicePermissions": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/cdk.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::VPCEndpointServicePermissions"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservicepermissions.html",
        "stability": "experimental",
        "summary": "A CloudFormation `AWS::EC2::VPCEndpointServicePermissions`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPCEndpointServicePermissions",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Create a new `AWS::EC2::VPCEndpointServicePermissions`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnVPCEndpointServicePermissionsProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 11774
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11813
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnVPCEndpointServicePermissions",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11778
          },
          "name": "cfnResourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11807
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservicepermissions.html#cfn-ec2-vpcendpointservicepermissions-serviceid",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPCEndpointServicePermissions.ServiceId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11784
          },
          "name": "serviceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservicepermissions.html#cfn-ec2-vpcendpointservicepermissions-allowedprincipals",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPCEndpointServicePermissions.AllowedPrincipals`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11790
          },
          "name": "allowedPrincipals",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnVPCEndpointServicePermissionsProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservicepermissions.html",
        "stability": "experimental",
        "summary": "Properties for defining a `AWS::EC2::VPCEndpointServicePermissions`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPCEndpointServicePermissionsProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 11720
      },
      "name": "CfnVPCEndpointServicePermissionsProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservicepermissions.html#cfn-ec2-vpcendpointservicepermissions-serviceid",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPCEndpointServicePermissions.ServiceId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11726
          },
          "name": "serviceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservicepermissions.html#cfn-ec2-vpcendpointservicepermissions-allowedprincipals",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPCEndpointServicePermissions.AllowedPrincipals`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11732
          },
          "name": "allowedPrincipals",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnVPCEndpointServiceProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservice.html",
        "stability": "experimental",
        "summary": "Properties for defining a `AWS::EC2::VPCEndpointService`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPCEndpointServiceProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 11618
      },
      "name": "CfnVPCEndpointServiceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservice.html#cfn-ec2-vpcendpointservice-networkloadbalancerarns",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPCEndpointService.NetworkLoadBalancerArns`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11624
          },
          "name": "networkLoadBalancerArns",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservice.html#cfn-ec2-vpcendpointservice-acceptancerequired",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPCEndpointService.AcceptanceRequired`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11630
          },
          "name": "acceptanceRequired",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnVPCGatewayAttachment": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/cdk.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::VPCGatewayAttachment"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-gateway-attachment.html",
        "stability": "experimental",
        "summary": "A CloudFormation `AWS::EC2::VPCGatewayAttachment`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPCGatewayAttachment",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Create a new `AWS::EC2::VPCGatewayAttachment`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnVPCGatewayAttachmentProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 11884
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11931
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnVPCGatewayAttachment",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11888
          },
          "name": "cfnResourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11924
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-gateway-attachment.html#cfn-ec2-vpcgatewayattachment-vpcid",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPCGatewayAttachment.VpcId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11894
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-gateway-attachment.html#cfn-ec2-vpcgatewayattachment-internetgatewayid",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPCGatewayAttachment.InternetGatewayId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11900
          },
          "name": "internetGatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-gateway-attachment.html#cfn-ec2-vpcgatewayattachment-vpngatewayid",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPCGatewayAttachment.VpnGatewayId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11906
          },
          "name": "vpnGatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnVPCGatewayAttachmentProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-gateway-attachment.html",
        "stability": "experimental",
        "summary": "Properties for defining a `AWS::EC2::VPCGatewayAttachment`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPCGatewayAttachmentProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 11822
      },
      "name": "CfnVPCGatewayAttachmentProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-gateway-attachment.html#cfn-ec2-vpcgatewayattachment-vpcid",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPCGatewayAttachment.VpcId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11828
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-gateway-attachment.html#cfn-ec2-vpcgatewayattachment-internetgatewayid",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPCGatewayAttachment.InternetGatewayId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11834
          },
          "name": "internetGatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-gateway-attachment.html#cfn-ec2-vpcgatewayattachment-vpngatewayid",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPCGatewayAttachment.VpnGatewayId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11840
          },
          "name": "vpnGatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnVPCPeeringConnection": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/cdk.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::VPCPeeringConnection"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html",
        "stability": "experimental",
        "summary": "A CloudFormation `AWS::EC2::VPCPeeringConnection`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPCPeeringConnection",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Create a new `AWS::EC2::VPCPeeringConnection`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnVPCPeeringConnectionProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 12027
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12099
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnVPCPeeringConnection",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12031
          },
          "name": "cfnResourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12089
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-tags",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPCPeeringConnection.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12067
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/cdk.TagManager"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-peervpcid",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPCPeeringConnection.PeerVpcId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12037
          },
          "name": "peerVpcId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-vpcid",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPCPeeringConnection.VpcId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12043
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-peerownerid",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPCPeeringConnection.PeerOwnerId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12049
          },
          "name": "peerOwnerId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-peerregion",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPCPeeringConnection.PeerRegion`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12055
          },
          "name": "peerRegion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-peerrolearn",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPCPeeringConnection.PeerRoleArn`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12061
          },
          "name": "peerRoleArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnVPCPeeringConnectionProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html",
        "stability": "experimental",
        "summary": "Properties for defining a `AWS::EC2::VPCPeeringConnection`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPCPeeringConnectionProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 11940
      },
      "name": "CfnVPCPeeringConnectionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-peervpcid",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPCPeeringConnection.PeerVpcId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11946
          },
          "name": "peerVpcId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-vpcid",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPCPeeringConnection.VpcId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11952
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-peerownerid",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPCPeeringConnection.PeerOwnerId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11958
          },
          "name": "peerOwnerId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-peerregion",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPCPeeringConnection.PeerRegion`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11964
          },
          "name": "peerRegion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-peerrolearn",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPCPeeringConnection.PeerRoleArn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11970
          },
          "name": "peerRoleArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-tags",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPCPeeringConnection.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11976
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cdk.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnVPCProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html",
        "stability": "experimental",
        "summary": "Properties for defining a `AWS::EC2::VPC`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPCProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 10862
      },
      "name": "CfnVPCProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html#cfn-aws-ec2-vpc-cidrblock",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPC.CidrBlock`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10868
          },
          "name": "cidrBlock",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html#cfn-aws-ec2-vpc-EnableDnsHostnames",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPC.EnableDnsHostnames`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10874
          },
          "name": "enableDnsHostnames",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html#cfn-aws-ec2-vpc-EnableDnsSupport",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPC.EnableDnsSupport`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10880
          },
          "name": "enableDnsSupport",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html#cfn-aws-ec2-vpc-instancetenancy",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPC.InstanceTenancy`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10886
          },
          "name": "instanceTenancy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html#cfn-aws-ec2-vpc-tags",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPC.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10892
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cdk.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnVPNConnection": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/cdk.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::VPNConnection"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html",
        "stability": "experimental",
        "summary": "A CloudFormation `AWS::EC2::VPNConnection`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPNConnection",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Create a new `AWS::EC2::VPNConnection`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnVPNConnectionProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 12203
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12283
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnVPNConnection",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12207
          },
          "name": "cfnResourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12272
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-tags",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPNConnection.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12231
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/cdk.TagManager"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-customergatewayid",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPNConnection.CustomerGatewayId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12213
          },
          "name": "customerGatewayId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-type",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPNConnection.Type`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12219
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-StaticRoutesOnly",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPNConnection.StaticRoutesOnly`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12225
          },
          "name": "staticRoutesOnly",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-transitgatewayid",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPNConnection.TransitGatewayId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12237
          },
          "name": "transitGatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-vpngatewayid",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPNConnection.VpnGatewayId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12243
          },
          "name": "vpnGatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-vpntunneloptionsspecifications",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPNConnection.VpnTunnelOptionsSpecifications`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12249
          },
          "name": "vpnTunnelOptionsSpecifications",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnVPNConnection.VpnTunnelOptionsSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnVPNConnection.VpnTunnelOptionsSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-vpnconnection-vpntunneloptionsspecification.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPNConnection.VpnTunnelOptionsSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 12292
      },
      "name": "VpnTunnelOptionsSpecificationProperty",
      "namespace": "CfnVPNConnection",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-vpnconnection-vpntunneloptionsspecification.html#cfn-ec2-vpnconnection-vpntunneloptionsspecification-presharedkey",
            "stability": "experimental",
            "summary": "`CfnVPNConnection.VpnTunnelOptionsSpecificationProperty.PreSharedKey`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12297
          },
          "name": "preSharedKey",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-vpnconnection-vpntunneloptionsspecification.html#cfn-ec2-vpnconnection-vpntunneloptionsspecification-tunnelinsidecidr",
            "stability": "experimental",
            "summary": "`CfnVPNConnection.VpnTunnelOptionsSpecificationProperty.TunnelInsideCidr`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12302
          },
          "name": "tunnelInsideCidr",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnVPNConnectionProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html",
        "stability": "experimental",
        "summary": "Properties for defining a `AWS::EC2::VPNConnection`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPNConnectionProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 12108
      },
      "name": "CfnVPNConnectionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-customergatewayid",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPNConnection.CustomerGatewayId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12114
          },
          "name": "customerGatewayId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-type",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPNConnection.Type`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12120
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-StaticRoutesOnly",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPNConnection.StaticRoutesOnly`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12126
          },
          "name": "staticRoutesOnly",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-tags",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPNConnection.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12132
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cdk.CfnTag"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-transitgatewayid",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPNConnection.TransitGatewayId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12138
          },
          "name": "transitGatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-vpngatewayid",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPNConnection.VpnGatewayId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12144
          },
          "name": "vpnGatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-vpntunneloptionsspecifications",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPNConnection.VpnTunnelOptionsSpecifications`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12150
          },
          "name": "vpnTunnelOptionsSpecifications",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnVPNConnection.VpnTunnelOptionsSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnVPNConnectionRoute": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/cdk.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::VPNConnectionRoute"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection-route.html",
        "stability": "experimental",
        "summary": "A CloudFormation `AWS::EC2::VPNConnectionRoute`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPNConnectionRoute",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Create a new `AWS::EC2::VPNConnectionRoute`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnVPNConnectionRouteProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 12397
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12437
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnVPNConnectionRoute",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12401
          },
          "name": "cfnResourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12431
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection-route.html#cfn-ec2-vpnconnectionroute-cidrblock",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPNConnectionRoute.DestinationCidrBlock`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12407
          },
          "name": "destinationCidrBlock",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection-route.html#cfn-ec2-vpnconnectionroute-connectionid",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPNConnectionRoute.VpnConnectionId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12413
          },
          "name": "vpnConnectionId",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnVPNConnectionRouteProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection-route.html",
        "stability": "experimental",
        "summary": "Properties for defining a `AWS::EC2::VPNConnectionRoute`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPNConnectionRouteProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 12342
      },
      "name": "CfnVPNConnectionRouteProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection-route.html#cfn-ec2-vpnconnectionroute-cidrblock",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPNConnectionRoute.DestinationCidrBlock`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12348
          },
          "name": "destinationCidrBlock",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection-route.html#cfn-ec2-vpnconnectionroute-connectionid",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPNConnectionRoute.VpnConnectionId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12354
          },
          "name": "vpnConnectionId",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnVPNGateway": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/cdk.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::VPNGateway"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gateway.html",
        "stability": "experimental",
        "summary": "A CloudFormation `AWS::EC2::VPNGateway`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPNGateway",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Create a new `AWS::EC2::VPNGateway`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnVPNGatewayProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 12508
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12555
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnVPNGateway",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12512
          },
          "name": "cfnResourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12548
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gateway.html#cfn-ec2-vpngateway-tags",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPNGateway.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12530
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/cdk.TagManager"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gateway.html#cfn-ec2-vpngateway-type",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPNGateway.Type`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12518
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gateway.html#cfn-ec2-vpngateway-amazonsideasn",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPNGateway.AmazonSideAsn`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12524
          },
          "name": "amazonSideAsn",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnVPNGatewayProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gateway.html",
        "stability": "experimental",
        "summary": "Properties for defining a `AWS::EC2::VPNGateway`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPNGatewayProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 12446
      },
      "name": "CfnVPNGatewayProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gateway.html#cfn-ec2-vpngateway-type",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPNGateway.Type`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12452
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gateway.html#cfn-ec2-vpngateway-amazonsideasn",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPNGateway.AmazonSideAsn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12458
          },
          "name": "amazonSideAsn",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gateway.html#cfn-ec2-vpngateway-tags",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPNGateway.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12464
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cdk.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnVPNGatewayRoutePropagation": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/cdk.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::VPNGatewayRoutePropagation"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gatewayrouteprop.html",
        "stability": "experimental",
        "summary": "A CloudFormation `AWS::EC2::VPNGatewayRoutePropagation`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPNGatewayRoutePropagation",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Create a new `AWS::EC2::VPNGatewayRoutePropagation`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnVPNGatewayRoutePropagationProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 12619
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12659
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnVPNGatewayRoutePropagation",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12623
          },
          "name": "cfnResourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12653
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gatewayrouteprop.html#cfn-ec2-vpngatewayrouteprop-routetableids",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPNGatewayRoutePropagation.RouteTableIds`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12629
          },
          "name": "routeTableIds",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gatewayrouteprop.html#cfn-ec2-vpngatewayrouteprop-vpngatewayid",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPNGatewayRoutePropagation.VpnGatewayId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12635
          },
          "name": "vpnGatewayId",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnVPNGatewayRoutePropagationProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gatewayrouteprop.html",
        "stability": "experimental",
        "summary": "Properties for defining a `AWS::EC2::VPNGatewayRoutePropagation`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPNGatewayRoutePropagationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 12564
      },
      "name": "CfnVPNGatewayRoutePropagationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gatewayrouteprop.html#cfn-ec2-vpngatewayrouteprop-routetableids",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPNGatewayRoutePropagation.RouteTableIds`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12570
          },
          "name": "routeTableIds",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gatewayrouteprop.html#cfn-ec2-vpngatewayrouteprop-vpngatewayid",
            "stability": "experimental",
            "summary": "`AWS::EC2::VPNGatewayRoutePropagation.VpnGatewayId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12576
          },
          "name": "vpnGatewayId",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnVolume": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/cdk.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::Volume"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html",
        "stability": "experimental",
        "summary": "A CloudFormation `AWS::EC2::Volume`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVolume",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Create a new `AWS::EC2::Volume`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnVolumeProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 12778
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12873
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnVolume",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12782
          },
          "name": "cfnResourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12860
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-tags",
            "stability": "experimental",
            "summary": "`AWS::EC2::Volume.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12830
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/cdk.TagManager"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-availabilityzone",
            "stability": "experimental",
            "summary": "`AWS::EC2::Volume.AvailabilityZone`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12788
          },
          "name": "availabilityZone",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-autoenableio",
            "stability": "experimental",
            "summary": "`AWS::EC2::Volume.AutoEnableIO`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12794
          },
          "name": "autoEnableIo",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-encrypted",
            "stability": "experimental",
            "summary": "`AWS::EC2::Volume.Encrypted`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12800
          },
          "name": "encrypted",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-iops",
            "stability": "experimental",
            "summary": "`AWS::EC2::Volume.Iops`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12806
          },
          "name": "iops",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-kmskeyid",
            "stability": "experimental",
            "summary": "`AWS::EC2::Volume.KmsKeyId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12812
          },
          "name": "kmsKeyId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-size",
            "stability": "experimental",
            "summary": "`AWS::EC2::Volume.Size`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12818
          },
          "name": "size",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-snapshotid",
            "stability": "experimental",
            "summary": "`AWS::EC2::Volume.SnapshotId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12824
          },
          "name": "snapshotId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-volumetype",
            "stability": "experimental",
            "summary": "`AWS::EC2::Volume.VolumeType`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12836
          },
          "name": "volumeType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnVolumeAttachment": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/cdk.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::VolumeAttachment"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volumeattachment.html",
        "stability": "experimental",
        "summary": "A CloudFormation `AWS::EC2::VolumeAttachment`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVolumeAttachment",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Create a new `AWS::EC2::VolumeAttachment`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnVolumeAttachmentProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 12946
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12995
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnVolumeAttachment",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12950
          },
          "name": "cfnResourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12988
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volumeattachment.html#cfn-ec2-ebs-volumeattachment-device",
            "stability": "experimental",
            "summary": "`AWS::EC2::VolumeAttachment.Device`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12956
          },
          "name": "device",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volumeattachment.html#cfn-ec2-ebs-volumeattachment-instanceid",
            "stability": "experimental",
            "summary": "`AWS::EC2::VolumeAttachment.InstanceId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12962
          },
          "name": "instanceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volumeattachment.html#cfn-ec2-ebs-volumeattachment-volumeid",
            "stability": "experimental",
            "summary": "`AWS::EC2::VolumeAttachment.VolumeId`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12968
          },
          "name": "volumeId",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnVolumeAttachmentProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volumeattachment.html",
        "stability": "experimental",
        "summary": "Properties for defining a `AWS::EC2::VolumeAttachment`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVolumeAttachmentProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 12882
      },
      "name": "CfnVolumeAttachmentProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volumeattachment.html#cfn-ec2-ebs-volumeattachment-device",
            "stability": "experimental",
            "summary": "`AWS::EC2::VolumeAttachment.Device`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12888
          },
          "name": "device",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volumeattachment.html#cfn-ec2-ebs-volumeattachment-instanceid",
            "stability": "experimental",
            "summary": "`AWS::EC2::VolumeAttachment.InstanceId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12894
          },
          "name": "instanceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volumeattachment.html#cfn-ec2-ebs-volumeattachment-volumeid",
            "stability": "experimental",
            "summary": "`AWS::EC2::VolumeAttachment.VolumeId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12900
          },
          "name": "volumeId",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CfnVolumeProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html",
        "stability": "experimental",
        "summary": "Properties for defining a `AWS::EC2::Volume`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVolumeProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 12668
      },
      "name": "CfnVolumeProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-availabilityzone",
            "stability": "experimental",
            "summary": "`AWS::EC2::Volume.AvailabilityZone`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12674
          },
          "name": "availabilityZone",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-autoenableio",
            "stability": "experimental",
            "summary": "`AWS::EC2::Volume.AutoEnableIO`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12680
          },
          "name": "autoEnableIo",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-encrypted",
            "stability": "experimental",
            "summary": "`AWS::EC2::Volume.Encrypted`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12686
          },
          "name": "encrypted",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-iops",
            "stability": "experimental",
            "summary": "`AWS::EC2::Volume.Iops`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12692
          },
          "name": "iops",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-kmskeyid",
            "stability": "experimental",
            "summary": "`AWS::EC2::Volume.KmsKeyId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12698
          },
          "name": "kmsKeyId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-size",
            "stability": "experimental",
            "summary": "`AWS::EC2::Volume.Size`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12704
          },
          "name": "size",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-snapshotid",
            "stability": "experimental",
            "summary": "`AWS::EC2::Volume.SnapshotId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12710
          },
          "name": "snapshotId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-tags",
            "stability": "experimental",
            "summary": "`AWS::EC2::Volume.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12716
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cdk.CfnTag"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-volumetype",
            "stability": "experimental",
            "summary": "`AWS::EC2::Volume.VolumeType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12722
          },
          "name": "volumeType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CidrIPv4": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "experimental",
        "summary": "A connection to and from a given IP range."
      },
      "fqn": "@aws-cdk/aws-ec2.CidrIPv4",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "parameters": [
          {
            "name": "cidrIp",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.ISecurityGroupRule",
        "@aws-cdk/aws-ec2.IConnectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/security-group-rule.ts",
        "line": 32
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Produce the egress rule JSON for the given connection."
          },
          "locationInModule": {
            "filename": "lib/security-group-rule.ts",
            "line": 50
          },
          "name": "toEgressRuleJSON",
          "overrides": "@aws-cdk/aws-ec2.ISecurityGroupRule",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Produce the ingress rule JSON for the given connection."
          },
          "locationInModule": {
            "filename": "lib/security-group-rule.ts",
            "line": 44
          },
          "name": "toIngressRuleJSON",
          "overrides": "@aws-cdk/aws-ec2.ISecurityGroupRule",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "CidrIPv4",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Whether the rule can be inlined into a SecurityGroup or not."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group-rule.ts",
            "line": 33
          },
          "name": "canInlineRule",
          "overrides": "@aws-cdk/aws-ec2.ISecurityGroupRule",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group-rule.ts",
            "line": 34
          },
          "name": "connections",
          "overrides": "@aws-cdk/aws-ec2.IConnectable",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.Connections"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "A unique identifier for this connection peer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group-rule.ts",
            "line": 35
          },
          "name": "uniqueId",
          "overrides": "@aws-cdk/aws-ec2.ISecurityGroupRule",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CidrIPv6": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "experimental",
        "summary": "A connection to a from a given IPv6 range."
      },
      "fqn": "@aws-cdk/aws-ec2.CidrIPv6",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "parameters": [
          {
            "name": "cidrIpv6",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.ISecurityGroupRule",
        "@aws-cdk/aws-ec2.IConnectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/security-group-rule.ts",
        "line": 67
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Produce the egress rule JSON for the given connection."
          },
          "locationInModule": {
            "filename": "lib/security-group-rule.ts",
            "line": 85
          },
          "name": "toEgressRuleJSON",
          "overrides": "@aws-cdk/aws-ec2.ISecurityGroupRule",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Produce the ingress rule JSON for the given connection."
          },
          "locationInModule": {
            "filename": "lib/security-group-rule.ts",
            "line": 79
          },
          "name": "toIngressRuleJSON",
          "overrides": "@aws-cdk/aws-ec2.ISecurityGroupRule",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "CidrIPv6",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Whether the rule can be inlined into a SecurityGroup or not."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group-rule.ts",
            "line": 68
          },
          "name": "canInlineRule",
          "overrides": "@aws-cdk/aws-ec2.ISecurityGroupRule",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group-rule.ts",
            "line": 69
          },
          "name": "connections",
          "overrides": "@aws-cdk/aws-ec2.IConnectable",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.Connections"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "A unique identifier for this connection peer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group-rule.ts",
            "line": 70
          },
          "name": "uniqueId",
          "overrides": "@aws-cdk/aws-ec2.ISecurityGroupRule",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.ConnectionRule": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.ConnectionRule",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/security-group.ts",
        "line": 438
      },
      "name": "ConnectionRule",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "If you specify icmp for the IpProtocol property, you can specify\n-1 as a wildcard (i.e., any ICMP type number).",
            "stability": "experimental",
            "summary": "Start of port range for the TCP and UDP protocols, or an ICMP type number."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 458
          },
          "name": "fromPort",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No description",
            "remarks": "It is applied to both the ingress rule\nand the egress rule.",
            "stability": "experimental",
            "summary": "Description of this connection."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 476
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "tcp",
            "stability": "experimental",
            "summary": "The IP protocol name (tcp, udp, icmp) or number (see Protocol Numbers). Use -1 to specify all protocols. If you specify -1, or a protocol number other than tcp, udp, icmp, or 58 (ICMPv6), traffic on all ports is allowed, regardless of any ports you specify. For tcp, udp, and icmp, you must specify a port range. For protocol 58 (ICMPv6), you can optionally specify a port range; if you don't, traffic for all types and codes is allowed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 450
          },
          "name": "protocol",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "If toPort is not specified, it will be the same as fromPort.",
            "remarks": "If you specify icmp for the IpProtocol property, you can specify -1 as a\nwildcard (i.e., any ICMP code).",
            "stability": "experimental",
            "summary": "End of port range for the TCP and UDP protocols, or an ICMP code."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 468
          },
          "name": "toPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.Connections": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "remarks": "Security Groups can be thought of as a firewall for network-connected\ndevices. This class makes it easy to allow network connections to and\nfrom security groups, and between security groups individually. When\nestablishing connectivity between security groups, it will automatically\nadd rules in both security groups\n\nThis object can manage one or more security groups.",
        "stability": "experimental",
        "summary": "Manage the allowed network connections for constructs with Security Groups."
      },
      "fqn": "@aws-cdk/aws-ec2.Connections",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "parameters": [
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ec2.ConnectionsProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.IConnectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/connections.ts",
        "line": 64
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Add a security group to the list of security groups managed by this object."
          },
          "locationInModule": {
            "filename": "lib/connections.ts",
            "line": 114
          },
          "name": "addSecurityGroup",
          "parameters": [
            {
              "name": "securityGroups",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "remarks": "Even if the peer has a default port, we will always use our default port.",
            "stability": "experimental",
            "summary": "Allow connections from the peer on our default port."
          },
          "locationInModule": {
            "filename": "lib/connections.ts",
            "line": 199
          },
          "name": "allowDefaultPortFrom",
          "parameters": [
            {
              "name": "other",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IConnectable"
              }
            },
            {
              "name": "description",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Allow default connections from all IPv4 ranges."
          },
          "locationInModule": {
            "filename": "lib/connections.ts",
            "line": 219
          },
          "name": "allowDefaultPortFromAnyIpv4",
          "parameters": [
            {
              "name": "description",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Allow hosts inside the security group to connect to each other."
          },
          "locationInModule": {
            "filename": "lib/connections.ts",
            "line": 209
          },
          "name": "allowDefaultPortInternally",
          "parameters": [
            {
              "name": "description",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "Even if the peer has a default port, we will always use our default port.",
            "stability": "experimental",
            "summary": "Allow connections from the peer on our default port."
          },
          "locationInModule": {
            "filename": "lib/connections.ts",
            "line": 242
          },
          "name": "allowDefaultPortTo",
          "parameters": [
            {
              "name": "other",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IConnectable"
              }
            },
            {
              "name": "description",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Allow connections from the peer on the given port."
          },
          "locationInModule": {
            "filename": "lib/connections.ts",
            "line": 147
          },
          "name": "allowFrom",
          "parameters": [
            {
              "name": "other",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IConnectable"
              }
            },
            {
              "name": "portRange",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IPortRange"
              }
            },
            {
              "name": "description",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Allow from any IPv4 ranges."
          },
          "locationInModule": {
            "filename": "lib/connections.ts",
            "line": 190
          },
          "name": "allowFromAnyIPv4",
          "parameters": [
            {
              "name": "portRange",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IPortRange"
              }
            },
            {
              "name": "description",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Allow hosts inside the security group to connect to each other on the given port."
          },
          "locationInModule": {
            "filename": "lib/connections.ts",
            "line": 170
          },
          "name": "allowInternally",
          "parameters": [
            {
              "name": "portRange",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IPortRange"
              }
            },
            {
              "name": "description",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Allow connections to the peer on the given port."
          },
          "locationInModule": {
            "filename": "lib/connections.ts",
            "line": 124
          },
          "name": "allowTo",
          "parameters": [
            {
              "name": "other",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IConnectable"
              }
            },
            {
              "name": "portRange",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IPortRange"
              }
            },
            {
              "name": "description",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Allow to all IPv4 ranges."
          },
          "locationInModule": {
            "filename": "lib/connections.ts",
            "line": 183
          },
          "name": "allowToAnyIPv4",
          "parameters": [
            {
              "name": "portRange",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IPortRange"
              }
            },
            {
              "name": "description",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Allow connections to the security group on their default port."
          },
          "locationInModule": {
            "filename": "lib/connections.ts",
            "line": 229
          },
          "name": "allowToDefaultPort",
          "parameters": [
            {
              "name": "other",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IConnectable"
              }
            },
            {
              "name": "description",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ]
        }
      ],
      "name": "Connections",
      "properties": [
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/connections.ts",
            "line": 65
          },
          "name": "connections",
          "overrides": "@aws-cdk/aws-ec2.IConnectable",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.Connections"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/connections.ts",
            "line": 107
          },
          "name": "securityGroups",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The default port configured for this connection peer, if available."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/connections.ts",
            "line": 70
          },
          "name": "defaultPortRange",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IPortRange"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.ConnectionsProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties to intialize a new Connections object."
      },
      "fqn": "@aws-cdk/aws-ec2.ConnectionsProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/connections.ts",
        "line": 28
      },
      "name": "ConnectionsProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "No default port range",
            "stability": "experimental",
            "summary": "Default port range for initiating connections to and from this object."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/connections.ts",
            "line": 50
          },
          "name": "defaultPortRange",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IPortRange"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Derived from securityGroup if set.",
            "remarks": "This object is required, but will be derived from securityGroup if that is passed.",
            "stability": "experimental",
            "summary": "Class that represents the rule by which others can connect to this connectable."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/connections.ts",
            "line": 36
          },
          "name": "securityGroupRule",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.ISecurityGroupRule"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No security groups",
            "stability": "experimental",
            "summary": "What securityGroup(s) this object is managing connections for."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/connections.ts",
            "line": 43
          },
          "name": "securityGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.DefaultInstanceTenancy": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "experimental",
        "summary": "The default tenancy of instances launched into the VPC."
      },
      "fqn": "@aws-cdk/aws-ec2.DefaultInstanceTenancy",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/vpc.ts",
        "line": 568
      },
      "members": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Instances can be launched with any tenancy."
          },
          "name": "Default"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Any instance launched into the VPC automatically has dedicated tenancy, unless you launch it with the default tenancy."
          },
          "name": "Dedicated"
        }
      ],
      "name": "DefaultInstanceTenancy"
    },
    "@aws-cdk/aws-ec2.GatewayVpcEndpoint": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/aws-ec2.VpcEndpoint",
      "docs": {
        "custom": {
          "resource": "AWS::EC2::VPCEndpoint"
        },
        "stability": "experimental",
        "summary": "A gateway VPC endpoint."
      },
      "fqn": "@aws-cdk/aws-ec2.GatewayVpcEndpoint",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.GatewayVpcEndpointProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.IGatewayVpcEndpoint"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/vpc-endpoint.ts",
        "line": 133
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 135
          },
          "name": "fromGatewayVpcEndpointId",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/cdk.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "gatewayVpcEndpointId",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.IGatewayVpcEndpoint"
            }
          },
          "static": true
        }
      ],
      "name": "GatewayVpcEndpoint",
      "properties": [
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The date and time the gateway VPC endpoint was created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 152
          },
          "name": "vpcEndpointCreationTimestamp",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 162
          },
          "name": "vpcEndpointDnsEntries",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The gateway VPC endpoint identifier."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 146
          },
          "name": "vpcEndpointId",
          "overrides": "@aws-cdk/aws-ec2.IVpcEndpoint",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 157
          },
          "name": "vpcEndpointNetworkInterfaceIds",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.GatewayVpcEndpointAwsService": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "experimental",
        "summary": "An AWS service for a gateway VPC endpoint."
      },
      "fqn": "@aws-cdk/aws-ec2.GatewayVpcEndpointAwsService",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "parameters": [
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "prefix",
            "optional": true,
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.IGatewayVpcEndpointService"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/vpc-endpoint.ts",
        "line": 88
      },
      "name": "GatewayVpcEndpointAwsService",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 89
          },
          "name": "DynamoDb",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.GatewayVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 90
          },
          "name": "S3",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.GatewayVpcEndpointAwsService"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The name of the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 95
          },
          "name": "name",
          "overrides": "@aws-cdk/aws-ec2.IGatewayVpcEndpointService",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.GatewayVpcEndpointOptions": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Options to add a gateway endpoint to a VPC."
      },
      "fqn": "@aws-cdk/aws-ec2.GatewayVpcEndpointOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc-endpoint.ts",
        "line": 105
      },
      "name": "GatewayVpcEndpointOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The service to use for this gateway VPC endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 109
          },
          "name": "service",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IGatewayVpcEndpointService"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "private subnets",
            "stability": "experimental",
            "summary": "Where to add endpoint routing."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 116
          },
          "name": "subnets",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.SubnetSelection"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.GatewayVpcEndpointProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Construction properties for a GatewayVpcEndpoint."
      },
      "fqn": "@aws-cdk/aws-ec2.GatewayVpcEndpointProps",
      "interfaces": [
        "@aws-cdk/aws-ec2.GatewayVpcEndpointOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc-endpoint.ts",
        "line": 122
      },
      "name": "GatewayVpcEndpointProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The VPC network in which the gateway endpoint will be used."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 126
          },
          "name": "vpc",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IVpc"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.GenericLinuxImage": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "remarks": "Linux images IDs are not published to SSM parameter store yet, so you'll have to\nmanually specify an AMI map.",
        "stability": "experimental",
        "summary": "Construct a Linux machine image from an AMI map."
      },
      "fqn": "@aws-cdk/aws-ec2.GenericLinuxImage",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "parameters": [
          {
            "name": "amiMap",
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "map"
              }
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.IMachineImageSource"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/machine-image.ts",
        "line": 178
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Return the image to use in the given context."
          },
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 182
          },
          "name": "getImage",
          "overrides": "@aws-cdk/aws-ec2.IMachineImageSource",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/cdk.Construct"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.MachineImage"
            }
          }
        }
      ],
      "name": "GenericLinuxImage"
    },
    "@aws-cdk/aws-ec2.IConnectable": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "remarks": "```ts\n  database.connections.allowFrom(fleet);\n  fleet.connections.allowTo(database);\n  rdgw.connections.allowFromCidrIp('0.3.1.5/86');\n  rgdw.connections.allowTrafficTo(fleet, new AllPorts());\n  ```\n\nThe insight here is that some connecting peers have information on what ports should\nbe involved in the connection, and some don't.\nAn object that has a Connections object",
        "stability": "experimental",
        "summary": "The goal of this module is to make possible to write statements like this:."
      },
      "fqn": "@aws-cdk/aws-ec2.IConnectable",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/connections.ts",
        "line": 21
      },
      "name": "IConnectable",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/connections.ts",
            "line": 22
          },
          "name": "connections",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.Connections"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.IGatewayVpcEndpoint": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "experimental",
        "summary": "A gateway VPC endpoint."
      },
      "fqn": "@aws-cdk/aws-ec2.IGatewayVpcEndpoint",
      "interfaces": [
        "@aws-cdk/aws-ec2.IVpcEndpoint"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc-endpoint.ts",
        "line": 50
      },
      "name": "IGatewayVpcEndpoint"
    },
    "@aws-cdk/aws-ec2.IGatewayVpcEndpointService": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "experimental",
        "summary": "A service for a gateway VPC endpoint."
      },
      "fqn": "@aws-cdk/aws-ec2.IGatewayVpcEndpointService",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc-endpoint.ts",
        "line": 78
      },
      "name": "IGatewayVpcEndpointService",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The name of the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 82
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.IInterfaceVpcEndpoint": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "experimental",
        "summary": "An interface VPC endpoint."
      },
      "fqn": "@aws-cdk/aws-ec2.IInterfaceVpcEndpoint",
      "interfaces": [
        "@aws-cdk/aws-ec2.IVpcEndpoint",
        "@aws-cdk/aws-ec2.IConnectable"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc-endpoint.ts",
        "line": 301
      },
      "name": "IInterfaceVpcEndpoint"
    },
    "@aws-cdk/aws-ec2.IInterfaceVpcEndpointService": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "experimental",
        "summary": "A service for an interface VPC endpoint."
      },
      "fqn": "@aws-cdk/aws-ec2.IInterfaceVpcEndpointService",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc-endpoint.ts",
        "line": 192
      },
      "name": "IInterfaceVpcEndpointService",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The name of the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 196
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The port of the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 201
          },
          "name": "port",
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.IMachineImageSource": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "experimental",
        "summary": "Interface for classes that can select an appropriate machine image to use."
      },
      "fqn": "@aws-cdk/aws-ec2.IMachineImageSource",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/machine-image.ts",
        "line": 6
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Return the image to use in the given context."
          },
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 10
          },
          "name": "getImage",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/cdk.Construct"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.MachineImage"
            }
          }
        }
      ],
      "name": "IMachineImageSource"
    },
    "@aws-cdk/aws-ec2.IPortRange": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "experimental",
        "summary": "Interface for classes that provide the connection-specification parts of a security group rule."
      },
      "fqn": "@aws-cdk/aws-ec2.IPortRange",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/security-group-rule.ts",
        "line": 129
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Produce the ingress/egress rule JSON for the given connection."
          },
          "locationInModule": {
            "filename": "lib/security-group-rule.ts",
            "line": 138
          },
          "name": "toRuleJSON",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "IPortRange",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Whether the rule containing this port range can be inlined into a securitygroup or not."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group-rule.ts",
            "line": 133
          },
          "name": "canInlineRule",
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.IPrivateSubnet": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.IPrivateSubnet",
      "interfaces": [
        "@aws-cdk/aws-ec2.ISubnet"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc.ts",
        "line": 1217
      },
      "name": "IPrivateSubnet"
    },
    "@aws-cdk/aws-ec2.IPublicSubnet": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.IPublicSubnet",
      "interfaces": [
        "@aws-cdk/aws-ec2.ISubnet"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc.ts",
        "line": 1179
      },
      "name": "IPublicSubnet"
    },
    "@aws-cdk/aws-ec2.ISecurityGroup": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.ISecurityGroup",
      "interfaces": [
        "@aws-cdk/cdk.IResource",
        "@aws-cdk/aws-ec2.ISecurityGroupRule",
        "@aws-cdk/aws-ec2.IConnectable"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/security-group.ts",
        "line": 9
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "remarks": "`remoteRule` controls where the Rule object is created if the peer is also a\nsecurityGroup and they are in different stack. If false (default) the\nrule object is created under the current SecurityGroup object. If true and the\npeer is also a SecurityGroup, the rule object is created under the remote\nSecurityGroup object.",
            "stability": "experimental",
            "summary": "Add an egress rule for the current security group."
          },
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 36
          },
          "name": "addEgressRule",
          "parameters": [
            {
              "name": "peer",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.ISecurityGroupRule"
              }
            },
            {
              "name": "connection",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IPortRange"
              }
            },
            {
              "name": "description",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "remoteRule",
              "optional": true,
              "type": {
                "primitive": "boolean"
              }
            }
          ]
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "`remoteRule` controls where the Rule object is created if the peer is also a\nsecurityGroup and they are in different stack. If false (default) the\nrule object is created under the current SecurityGroup object. If true and the\npeer is also a SecurityGroup, the rule object is created under the remote\nSecurityGroup object.",
            "stability": "experimental",
            "summary": "Add an ingress rule for the current security group."
          },
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 25
          },
          "name": "addIngressRule",
          "parameters": [
            {
              "name": "peer",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.ISecurityGroupRule"
              }
            },
            {
              "name": "connection",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IPortRange"
              }
            },
            {
              "name": "description",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "remoteRule",
              "optional": true,
              "type": {
                "primitive": "boolean"
              }
            }
          ]
        }
      ],
      "name": "ISecurityGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "ID for the current security group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 14
          },
          "name": "securityGroupId",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.ISecurityGroupRule": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "experimental",
        "summary": "Interface for classes that provide the peer-specification parts of a security group rule."
      },
      "fqn": "@aws-cdk/aws-ec2.ISecurityGroupRule",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/security-group-rule.ts",
        "line": 7
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Produce the egress rule JSON for the given connection."
          },
          "locationInModule": {
            "filename": "lib/security-group-rule.ts",
            "line": 26
          },
          "name": "toEgressRuleJSON",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Produce the ingress rule JSON for the given connection."
          },
          "locationInModule": {
            "filename": "lib/security-group-rule.ts",
            "line": 21
          },
          "name": "toIngressRuleJSON",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "ISecurityGroupRule",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Whether the rule can be inlined into a SecurityGroup or not."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group-rule.ts",
            "line": 11
          },
          "name": "canInlineRule",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "A unique identifier for this connection peer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group-rule.ts",
            "line": 16
          },
          "name": "uniqueId",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.ISubnet": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.ISubnet",
      "interfaces": [
        "@aws-cdk/cdk.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc.ts",
        "line": 14
      },
      "name": "ISubnet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The Availability Zone the subnet is located in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 18
          },
          "name": "availabilityZone",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Dependable that can be depended upon to force internet connectivity established on the VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 29
          },
          "name": "internetConnectivityEstablished",
          "type": {
            "fqn": "@aws-cdk/cdk.IDependable"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The subnetId for this particular subnet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 24
          },
          "name": "subnetId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Route table ID."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 34
          },
          "name": "routeTableId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.IVpc": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.IVpc",
      "interfaces": [
        "@aws-cdk/cdk.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc.ts",
        "line": 37
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Adds a new interface endpoint to this VPC."
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 105
          },
          "name": "addInterfaceEndpoint",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpoint"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Adds a new VPN connection to this VPC."
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 100
          },
          "name": "addVpnConnection",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.VpnConnectionOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.VpnConnection"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Return whether all of the given subnets are from the VPC's public subnets."
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 95
          },
          "name": "isPublicSubnets",
          "parameters": [
            {
              "name": "subnetIds",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "deprecated": "Use selectSubnets() instead.",
            "remarks": "Requires that at least one subnet is matched, throws a descriptive\nerror message otherwise.",
            "stability": "deprecated",
            "summary": "Return IDs of the subnets appropriate for the given selection strategy."
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 82
          },
          "name": "selectSubnetIds",
          "parameters": [
            {
              "name": "selection",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.SubnetSelection"
              }
            }
          ],
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "array"
              }
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Requires that at least one subnet is matched, throws a descriptive\nerror message otherwise.",
            "stability": "experimental",
            "summary": "Return information on the subnets appropriate for the given selection strategy."
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 90
          },
          "name": "selectSubnets",
          "parameters": [
            {
              "name": "selection",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.SubnetSelection"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.SelectedSubnets"
            }
          }
        }
      ],
      "name": "IVpc",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "AZs for this VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 62
          },
          "name": "availabilityZones",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "List of isolated subnets in this VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 57
          },
          "name": "isolatedSubnets",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.ISubnet"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "List of private subnets in this VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 52
          },
          "name": "privateSubnets",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.ISubnet"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "List of public subnets in this VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 47
          },
          "name": "publicSubnets",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.ISubnet"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Region where this VPC is located."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 67
          },
          "name": "region",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "Identifier for this VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 42
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Identifier for the VPN gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 72
          },
          "name": "vpnGatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.IVpcEndpoint": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "experimental",
        "summary": "A VPC endpoint."
      },
      "fqn": "@aws-cdk/aws-ec2.IVpcEndpoint",
      "interfaces": [
        "@aws-cdk/cdk.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc-endpoint.ts",
        "line": 12
      },
      "name": "IVpcEndpoint",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The VPC endpoint identifier."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 17
          },
          "name": "vpcEndpointId",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.IVpnConnection": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.IVpnConnection",
      "interfaces": [
        "@aws-cdk/cdk.IConstruct"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpn.ts",
        "line": 7
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Return the given named metric for this VPNConnection."
          },
          "locationInModule": {
            "filename": "lib/ec2-augmentations.generated.ts",
            "line": 11
          },
          "name": "metric",
          "parameters": [
            {
              "name": "metricName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Sum over 5 minutes",
            "stability": "experimental",
            "summary": "The bytes received through the VPN tunnel."
          },
          "locationInModule": {
            "filename": "lib/ec2-augmentations.generated.ts",
            "line": 23
          },
          "name": "metricTunnelDataIn",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Sum over 5 minutes",
            "stability": "experimental",
            "summary": "The bytes sent through the VPN tunnel."
          },
          "locationInModule": {
            "filename": "lib/ec2-augmentations.generated.ts",
            "line": 29
          },
          "name": "metricTunnelDataOut",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Average over 5 minutes",
            "stability": "experimental",
            "summary": "The state of the tunnel. 0 indicates DOWN and 1 indicates UP."
          },
          "locationInModule": {
            "filename": "lib/ec2-augmentations.generated.ts",
            "line": 17
          },
          "name": "metricTunnelState",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        }
      ],
      "name": "IVpnConnection",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The ASN of the customer gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpn.ts",
            "line": 26
          },
          "name": "customerGatewayAsn",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The id of the customer gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpn.ts",
            "line": 16
          },
          "name": "customerGatewayId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The ip address of the customer gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpn.ts",
            "line": 21
          },
          "name": "customerGatewayIp",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The id of the VPN connection."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpn.ts",
            "line": 11
          },
          "name": "vpnId",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.IcmpAllTypeCodes": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "experimental",
        "summary": "All ICMP Codes for a given ICMP Type."
      },
      "fqn": "@aws-cdk/aws-ec2.IcmpAllTypeCodes",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "parameters": [
          {
            "name": "type",
            "type": {
              "primitive": "number"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.IPortRange"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/security-group-rule.ts",
        "line": 323
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Produce the ingress/egress rule JSON for the given connection."
          },
          "locationInModule": {
            "filename": "lib/security-group-rule.ts",
            "line": 329
          },
          "name": "toRuleJSON",
          "overrides": "@aws-cdk/aws-ec2.IPortRange",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Returns a string representation of an object."
          },
          "locationInModule": {
            "filename": "lib/security-group-rule.ts",
            "line": 337
          },
          "name": "toString",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "IcmpAllTypeCodes",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Whether the rule containing this port range can be inlined into a securitygroup or not."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group-rule.ts",
            "line": 324
          },
          "name": "canInlineRule",
          "overrides": "@aws-cdk/aws-ec2.IPortRange",
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.IcmpAllTypesAndCodes": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "experimental",
        "summary": "All ICMP Types & Codes."
      },
      "fqn": "@aws-cdk/aws-ec2.IcmpAllTypesAndCodes",
      "initializer": {},
      "interfaces": [
        "@aws-cdk/aws-ec2.IPortRange"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/security-group-rule.ts",
        "line": 345
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Produce the ingress/egress rule JSON for the given connection."
          },
          "locationInModule": {
            "filename": "lib/security-group-rule.ts",
            "line": 348
          },
          "name": "toRuleJSON",
          "overrides": "@aws-cdk/aws-ec2.IPortRange",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Returns a string representation of an object."
          },
          "locationInModule": {
            "filename": "lib/security-group-rule.ts",
            "line": 356
          },
          "name": "toString",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "IcmpAllTypesAndCodes",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Whether the rule containing this port range can be inlined into a securitygroup or not."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group-rule.ts",
            "line": 346
          },
          "name": "canInlineRule",
          "overrides": "@aws-cdk/aws-ec2.IPortRange",
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.IcmpPing": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "experimental",
        "summary": "ICMP Ping traffic."
      },
      "fqn": "@aws-cdk/aws-ec2.IcmpPing",
      "initializer": {},
      "interfaces": [
        "@aws-cdk/aws-ec2.IPortRange"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/security-group-rule.ts",
        "line": 304
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Produce the ingress/egress rule JSON for the given connection."
          },
          "locationInModule": {
            "filename": "lib/security-group-rule.ts",
            "line": 307
          },
          "name": "toRuleJSON",
          "overrides": "@aws-cdk/aws-ec2.IPortRange",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Returns a string representation of an object."
          },
          "locationInModule": {
            "filename": "lib/security-group-rule.ts",
            "line": 315
          },
          "name": "toString",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "IcmpPing",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Whether the rule containing this port range can be inlined into a securitygroup or not."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group-rule.ts",
            "line": 305
          },
          "name": "canInlineRule",
          "overrides": "@aws-cdk/aws-ec2.IPortRange",
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.IcmpTypeAndCode": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "experimental",
        "summary": "A set of matching ICMP Type & Code."
      },
      "fqn": "@aws-cdk/aws-ec2.IcmpTypeAndCode",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "parameters": [
          {
            "name": "type",
            "type": {
              "primitive": "number"
            }
          },
          {
            "name": "code",
            "type": {
              "primitive": "number"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.IPortRange"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/security-group-rule.ts",
        "line": 282
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Produce the ingress/egress rule JSON for the given connection."
          },
          "locationInModule": {
            "filename": "lib/security-group-rule.ts",
            "line": 288
          },
          "name": "toRuleJSON",
          "overrides": "@aws-cdk/aws-ec2.IPortRange",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Returns a string representation of an object."
          },
          "locationInModule": {
            "filename": "lib/security-group-rule.ts",
            "line": 296
          },
          "name": "toString",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "IcmpTypeAndCode",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Whether the rule containing this port range can be inlined into a securitygroup or not."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group-rule.ts",
            "line": 283
          },
          "name": "canInlineRule",
          "overrides": "@aws-cdk/aws-ec2.IPortRange",
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.InstanceClass": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "remarks": "We have both symbolic and concrete enums for every type.\n\nThe first are for people that want to specify by purpose,\nthe second one are for people who already know exactly what\n'R4' means.",
        "stability": "experimental",
        "summary": "What class and generation of instance to use."
      },
      "fqn": "@aws-cdk/aws-ec2.InstanceClass",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/instance-types.ts",
        "line": 10
      },
      "members": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Standard instances, 3rd generation."
          },
          "name": "Standard3"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Standard instances, 4th generation."
          },
          "name": "Standard4"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Standard instances, 5th generation."
          },
          "name": "Standard5"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Memory optimized instances, 3rd generation."
          },
          "name": "Memory3"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Memory optimized instances, 3rd generation."
          },
          "name": "Memory4"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Compute optimized instances, 3rd generation."
          },
          "name": "Compute3"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Compute optimized instances, 4th generation."
          },
          "name": "Compute4"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Compute optimized instances, 5th generation."
          },
          "name": "Compute5"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Storage-optimized instances, 2nd generation."
          },
          "name": "Storage2"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Storage/compute balanced instances, 1st generation."
          },
          "name": "StorageCompute1"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "I/O-optimized instances, 3rd generation."
          },
          "name": "Io3"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Burstable instances, 2nd generation."
          },
          "name": "Burstable2"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Burstable instances, 3rd generation."
          },
          "name": "Burstable3"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Memory-intensive instances, 1st generation."
          },
          "name": "MemoryIntensive1"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Memory-intensive instances, extended, 1st generation."
          },
          "name": "MemoryIntensive1Extended"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Instances with customizable hardware acceleration, 1st generation."
          },
          "name": "Fpga1"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Graphics-optimized instances, 3rd generation."
          },
          "name": "Graphics3"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Parallel-processing optimized instances, 2nd generation."
          },
          "name": "Parallel2"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Parallel-processing optimized instances, 3nd generation."
          },
          "name": "Parallel3"
        }
      ],
      "name": "InstanceClass"
    },
    "@aws-cdk/aws-ec2.InstanceSize": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "experimental",
        "summary": "What size of instance to use."
      },
      "fqn": "@aws-cdk/aws-ec2.InstanceSize",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/instance-types.ts",
        "line": 205
      },
      "members": [
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "Nano"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "Micro"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "Small"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "Medium"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "Large"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "XLarge"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "XLarge2"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "XLarge4"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "XLarge8"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "XLarge9"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "XLarge10"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "XLarge12"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "XLarge16"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "XLarge18"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "XLarge24"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "XLarge32"
        }
      ],
      "name": "InstanceSize"
    },
    "@aws-cdk/aws-ec2.InstanceType": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "remarks": "This class takes a literal string, good if you already\nknow the identifier of the type you want.",
        "stability": "experimental",
        "summary": "Instance type for EC2 instances."
      },
      "fqn": "@aws-cdk/aws-ec2.InstanceType",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "parameters": [
          {
            "name": "instanceTypeIdentifier",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/instance-types.ts",
        "line": 230
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Return the instance type as a dotted string."
          },
          "locationInModule": {
            "filename": "lib/instance-types.ts",
            "line": 237
          },
          "name": "toString",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "InstanceType"
    },
    "@aws-cdk/aws-ec2.InstanceTypePair": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/aws-ec2.InstanceType",
      "docs": {
        "remarks": "This class takes a combination of a class and size.\n\nBe aware that not all combinations of class and size are available, and not all\nclasses are available in all regions.",
        "stability": "experimental",
        "summary": "Instance type for EC2 instances."
      },
      "fqn": "@aws-cdk/aws-ec2.InstanceTypePair",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "parameters": [
          {
            "name": "instanceClass",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InstanceClass"
            }
          },
          {
            "name": "instanceSize",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InstanceSize"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/instance-types.ts",
        "line": 250
      },
      "name": "InstanceTypePair",
      "properties": [
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance-types.ts",
            "line": 251
          },
          "name": "instanceClass",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InstanceClass"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance-types.ts",
            "line": 252
          },
          "name": "instanceSize",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InstanceSize"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.InterfaceVpcEndpoint": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/aws-ec2.VpcEndpoint",
      "docs": {
        "custom": {
          "resource": "AWS::EC2::VPCEndpoint"
        },
        "stability": "experimental",
        "summary": "A interface VPC endpoint."
      },
      "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpoint",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.IInterfaceVpcEndpoint"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/vpc-endpoint.ts",
        "line": 308
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Imports an existing interface VPC endpoint."
          },
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 312
          },
          "name": "fromInterfaceVpcEndpointAttributes",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/cdk.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.IInterfaceVpcEndpoint"
            }
          },
          "static": true
        }
      ],
      "name": "InterfaceVpcEndpoint",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Access to network connections."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 357
          },
          "name": "connections",
          "overrides": "@aws-cdk/aws-ec2.IConnectable",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.Connections"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The identifier of the security group associated with this interface VPC endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 352
          },
          "name": "securityGroupId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The date and time the interface VPC endpoint was created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 334
          },
          "name": "vpcEndpointCreationTimestamp",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The DNS entries for the interface VPC endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 340
          },
          "name": "vpcEndpointDnsEntries",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The interface VPC endpoint identifier."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 328
          },
          "name": "vpcEndpointId",
          "overrides": "@aws-cdk/aws-ec2.IVpcEndpoint",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "One or more network interfaces for the interface VPC endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 346
          },
          "name": "vpcEndpointNetworkInterfaceIds",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.InterfaceVpcEndpointAttributes": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Construction properties for an ImportedInterfaceVpcEndpoint."
      },
      "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAttributes",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc-endpoint.ts",
        "line": 394
      },
      "name": "InterfaceVpcEndpointAttributes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The port of the service of the interface VPC endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 408
          },
          "name": "port",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The identifier of the security group associated with the interface VPC endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 403
          },
          "name": "securityGroupId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The interface VPC endpoint identifier."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 398
          },
          "name": "vpcEndpointId",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "experimental",
        "summary": "An AWS service for an interface VPC endpoint."
      },
      "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "parameters": [
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "prefix",
            "optional": true,
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "port",
            "optional": true,
            "type": {
              "primitive": "number"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.IInterfaceVpcEndpointService"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/vpc-endpoint.ts",
        "line": 207
      },
      "name": "InterfaceVpcEndpointAwsService",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 227
          },
          "name": "ApiGateway",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 209
          },
          "name": "CloudFormation",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 210
          },
          "name": "CloudTrail",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 233
          },
          "name": "CloudWatch",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 226
          },
          "name": "CloudWatchEvents",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 232
          },
          "name": "CloudWatchLogs",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 211
          },
          "name": "CodeBuild",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 212
          },
          "name": "CodeBuildFips",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 213
          },
          "name": "CodeCommit",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 214
          },
          "name": "CodeCommitFips",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 228
          },
          "name": "CodeCommitGit",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 229
          },
          "name": "CodeCommitGitFips",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 215
          },
          "name": "CodePipeline",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 216
          },
          "name": "Config",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 217
          },
          "name": "Ec2",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 218
          },
          "name": "Ec2Messages",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 219
          },
          "name": "Ecr",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 220
          },
          "name": "EcrDocker",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 221
          },
          "name": "Ecs",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 222
          },
          "name": "EcsAgent",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 223
          },
          "name": "EcsTelemetry",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 224
          },
          "name": "ElasticInferenceRuntime",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 225
          },
          "name": "ElasticLoadBalancing",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 230
          },
          "name": "KinesisStreams",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 231
          },
          "name": "Kms",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 234
          },
          "name": "SageMakerApi",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 208
          },
          "name": "SageMakerNotebook",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 235
          },
          "name": "SageMakerRuntime",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 236
          },
          "name": "SageMakerRuntimeFips",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 237
          },
          "name": "SecretsManager",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 238
          },
          "name": "ServiceCatalog",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 239
          },
          "name": "Sns",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 240
          },
          "name": "Sqs",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 241
          },
          "name": "Ssm",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 242
          },
          "name": "SsmMessages",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 243
          },
          "name": "Sts",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 244
          },
          "name": "Transfer",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The name of the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 249
          },
          "name": "name",
          "overrides": "@aws-cdk/aws-ec2.IInterfaceVpcEndpointService",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The port of the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 254
          },
          "name": "port",
          "overrides": "@aws-cdk/aws-ec2.IInterfaceVpcEndpointService",
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.InterfaceVpcEndpointOptions": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Options to add an interface endpoint to a VPC."
      },
      "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc-endpoint.ts",
        "line": 265
      },
      "name": "InterfaceVpcEndpointOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The service to use for this interface VPC endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 269
          },
          "name": "service",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IInterfaceVpcEndpointService"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "This\nallows you to make requests to the service using its default DNS hostname.",
            "stability": "experimental",
            "summary": "Whether to associate a private hosted zone with the specified VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 277
          },
          "name": "privateDnsEnabled",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "private subnets",
            "remarks": "At most one\nper availability zone.",
            "stability": "experimental",
            "summary": "The subnets in which to create an endpoint network interface."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 285
          },
          "name": "subnets",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.SubnetSelection"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.InterfaceVpcEndpointProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Construction properties for an InterfaceVpcEndpoint."
      },
      "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointProps",
      "interfaces": [
        "@aws-cdk/aws-ec2.InterfaceVpcEndpointOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc-endpoint.ts",
        "line": 291
      },
      "name": "InterfaceVpcEndpointProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The VPC network in which the interface endpoint will be used."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 295
          },
          "name": "vpc",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IVpc"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.LinuxOS": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/aws-ec2.OperatingSystem",
      "docs": {
        "stability": "experimental",
        "summary": "OS features specialized for Linux."
      },
      "fqn": "@aws-cdk/aws-ec2.LinuxOS",
      "initializer": {},
      "kind": "class",
      "locationInModule": {
        "filename": "lib/machine-image.ts",
        "line": 471
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 472
          },
          "name": "createUserData",
          "overrides": "@aws-cdk/aws-ec2.OperatingSystem",
          "parameters": [
            {
              "name": "scripts",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "LinuxOS",
      "properties": [
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 476
          },
          "name": "type",
          "overrides": "@aws-cdk/aws-ec2.OperatingSystem",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.OperatingSystemType"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.MachineImage": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "remarks": "Combines an AMI ID with an OS.",
        "stability": "experimental",
        "summary": "Representation of a machine to be launched."
      },
      "fqn": "@aws-cdk/aws-ec2.MachineImage",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "parameters": [
          {
            "name": "imageId",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "os",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.OperatingSystem"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/machine-image.ts",
        "line": 434
      },
      "name": "MachineImage",
      "properties": [
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 435
          },
          "name": "imageId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 435
          },
          "name": "os",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.OperatingSystem"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.OperatingSystem": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "experimental",
        "summary": "Abstraction of OS features we need to be aware of."
      },
      "fqn": "@aws-cdk/aws-ec2.OperatingSystem",
      "initializer": {},
      "kind": "class",
      "locationInModule": {
        "filename": "lib/machine-image.ts",
        "line": 450
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 451
          },
          "name": "createUserData",
          "parameters": [
            {
              "name": "scripts",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "OperatingSystem",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 452
          },
          "name": "type",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.OperatingSystemType"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.OperatingSystemType": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "experimental",
        "summary": "The OS type of a particular image."
      },
      "fqn": "@aws-cdk/aws-ec2.OperatingSystemType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/machine-image.ts",
        "line": 442
      },
      "members": [
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "Linux"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "Windows"
        }
      ],
      "name": "OperatingSystemType"
    },
    "@aws-cdk/aws-ec2.PrefixList": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "remarks": "Prefix lists are used to allow traffic to VPC-local service endpoints.\n\nFor more information, see this page:\n\nhttps://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/vpc-endpoints.html",
        "stability": "experimental",
        "summary": "A prefix list."
      },
      "fqn": "@aws-cdk/aws-ec2.PrefixList",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "parameters": [
          {
            "name": "prefixListId",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.ISecurityGroupRule",
        "@aws-cdk/aws-ec2.IConnectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/security-group-rule.ts",
        "line": 108
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Produce the egress rule JSON for the given connection."
          },
          "locationInModule": {
            "filename": "lib/security-group-rule.ts",
            "line": 121
          },
          "name": "toEgressRuleJSON",
          "overrides": "@aws-cdk/aws-ec2.ISecurityGroupRule",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Produce the ingress rule JSON for the given connection."
          },
          "locationInModule": {
            "filename": "lib/security-group-rule.ts",
            "line": 117
          },
          "name": "toIngressRuleJSON",
          "overrides": "@aws-cdk/aws-ec2.ISecurityGroupRule",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "PrefixList",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Whether the rule can be inlined into a SecurityGroup or not."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group-rule.ts",
            "line": 109
          },
          "name": "canInlineRule",
          "overrides": "@aws-cdk/aws-ec2.ISecurityGroupRule",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group-rule.ts",
            "line": 110
          },
          "name": "connections",
          "overrides": "@aws-cdk/aws-ec2.IConnectable",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.Connections"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "A unique identifier for this connection peer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group-rule.ts",
            "line": 111
          },
          "name": "uniqueId",
          "overrides": "@aws-cdk/aws-ec2.ISecurityGroupRule",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.PrivateSubnet": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/aws-ec2.Subnet",
      "docs": {
        "stability": "experimental",
        "summary": "Represents a private VPC subnet resource."
      },
      "fqn": "@aws-cdk/aws-ec2.PrivateSubnet",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.PrivateSubnetProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.IPrivateSubnet"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/vpc.ts",
        "line": 1224
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1226
          },
          "name": "fromPrivateSubnetAttributes",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/cdk.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.PrivateSubnetAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.IPrivateSubnet"
            }
          },
          "static": true
        }
      ],
      "name": "PrivateSubnet"
    },
    "@aws-cdk/aws-ec2.PrivateSubnetAttributes": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.PrivateSubnetAttributes",
      "interfaces": [
        "@aws-cdk/aws-ec2.SubnetAttributes"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc.ts",
        "line": 1219
      },
      "name": "PrivateSubnetAttributes"
    },
    "@aws-cdk/aws-ec2.PrivateSubnetProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.PrivateSubnetProps",
      "interfaces": [
        "@aws-cdk/aws-ec2.SubnetProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc.ts",
        "line": 1213
      },
      "name": "PrivateSubnetProps"
    },
    "@aws-cdk/aws-ec2.Protocol": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "experimental",
        "summary": "Protocol for use in Connection Rules."
      },
      "fqn": "@aws-cdk/aws-ec2.Protocol",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/security-group-rule.ts",
        "line": 144
      },
      "members": [
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "All"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "Tcp"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "Udp"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "Icmp"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "Icmpv6"
        }
      ],
      "name": "Protocol"
    },
    "@aws-cdk/aws-ec2.PublicSubnet": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/aws-ec2.Subnet",
      "docs": {
        "stability": "experimental",
        "summary": "Represents a public VPC subnet resource."
      },
      "fqn": "@aws-cdk/aws-ec2.PublicSubnet",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.PublicSubnetProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.IPublicSubnet"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/vpc.ts",
        "line": 1185
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1187
          },
          "name": "fromPublicSubnetAttributes",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/cdk.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.PublicSubnetAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.IPublicSubnet"
            }
          },
          "static": true
        },
        {
          "docs": {
            "returns": "A ref to the the NAT Gateway ID",
            "stability": "experimental",
            "summary": "Creates a new managed NAT gateway attached to this public subnet. Also adds the EIP for the managed NAT."
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1200
          },
          "name": "addNatGateway",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnNatGateway"
            }
          }
        }
      ],
      "name": "PublicSubnet"
    },
    "@aws-cdk/aws-ec2.PublicSubnetAttributes": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.PublicSubnetAttributes",
      "interfaces": [
        "@aws-cdk/aws-ec2.SubnetAttributes"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc.ts",
        "line": 1180
      },
      "name": "PublicSubnetAttributes"
    },
    "@aws-cdk/aws-ec2.PublicSubnetProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.PublicSubnetProps",
      "interfaces": [
        "@aws-cdk/aws-ec2.SubnetProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc.ts",
        "line": 1175
      },
      "name": "PublicSubnetProps"
    },
    "@aws-cdk/aws-ec2.SecurityGroup": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/cdk.Resource",
      "docs": {
        "remarks": "This class has an additional optimization over imported security groups that it can also create\ninline ingress and egress rule (which saves on the total number of resources inside\nthe template).",
        "stability": "experimental",
        "summary": "Creates an Amazon EC2 security group within a VPC."
      },
      "fqn": "@aws-cdk/aws-ec2.SecurityGroup",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.SecurityGroupProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.ISecurityGroup"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/security-group.ts",
        "line": 228
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Import an existing security group into this app."
          },
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 233
          },
          "name": "fromSecurityGroupId",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/cdk.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "securityGroupId",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Return whether the indicated object is a security group."
          },
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 46
          },
          "name": "isSecurityGroup",
          "parameters": [
            {
              "name": "x",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "`remoteRule` controls where the Rule object is created if the peer is also a\nsecurityGroup and they are in different stack. If false (default) the\nrule object is created under the current SecurityGroup object. If true and the\npeer is also a SecurityGroup, the rule object is created under the remote\nSecurityGroup object.",
            "stability": "experimental",
            "summary": "Add an egress rule for the current security group."
          },
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 307
          },
          "name": "addEgressRule",
          "overrides": "@aws-cdk/aws-ec2.ISecurityGroup",
          "parameters": [
            {
              "name": "peer",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.ISecurityGroupRule"
              }
            },
            {
              "name": "connection",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IPortRange"
              }
            },
            {
              "name": "description",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "remoteRule",
              "optional": true,
              "type": {
                "primitive": "boolean"
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "`remoteRule` controls where the Rule object is created if the peer is also a\nsecurityGroup and they are in different stack. If false (default) the\nrule object is created under the current SecurityGroup object. If true and the\npeer is also a SecurityGroup, the rule object is created under the remote\nSecurityGroup object.",
            "stability": "experimental",
            "summary": "Add an ingress rule for the current security group."
          },
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 290
          },
          "name": "addIngressRule",
          "overrides": "@aws-cdk/aws-ec2.ISecurityGroup",
          "parameters": [
            {
              "name": "peer",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.ISecurityGroupRule"
              }
            },
            {
              "name": "connection",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IPortRange"
              }
            },
            {
              "name": "description",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "remoteRule",
              "optional": true,
              "type": {
                "primitive": "boolean"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Produce the egress rule JSON for the given connection."
          },
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 110
          },
          "name": "toEgressRuleJSON",
          "overrides": "@aws-cdk/aws-ec2.ISecurityGroupRule",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Produce the ingress rule JSON for the given connection."
          },
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 106
          },
          "name": "toIngressRuleJSON",
          "overrides": "@aws-cdk/aws-ec2.ISecurityGroupRule",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "SecurityGroup",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Whether the rule can be inlined into a SecurityGroup or not."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 52
          },
          "name": "canInlineRule",
          "overrides": "@aws-cdk/aws-ec2.ISecurityGroupRule",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 53
          },
          "name": "connections",
          "overrides": "@aws-cdk/aws-ec2.IConnectable",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.Connections"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The ID of the security group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 253
          },
          "name": "securityGroupId",
          "overrides": "@aws-cdk/aws-ec2.ISecurityGroup",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "An attribute that represents the security group name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 246
          },
          "name": "securityGroupName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The VPC ID this security group is part of."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 260
          },
          "name": "securityGroupVpcId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "A unique identifier for this connection peer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 66
          },
          "name": "uniqueId",
          "overrides": "@aws-cdk/aws-ec2.ISecurityGroupRule",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "FIXME: Where to place this??"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 58
          },
          "name": "defaultPortRange",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IPortRange"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.SecurityGroupProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.SecurityGroupProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/security-group.ts",
        "line": 184
      },
      "name": "SecurityGroupProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The VPC in which to create the security group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 207
          },
          "name": "vpc",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IVpc"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "If this is set to true, there will only be a single egress rule which allows all\noutbound traffic. If this is set to false, no outbound traffic will be allowed by\ndefault and all egress traffic must be explicitly authorized.",
            "stability": "experimental",
            "summary": "Whether to allow all outbound traffic by default."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 218
          },
          "name": "allowAllOutbound",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "The default name will be the construct's CDK path.",
            "stability": "experimental",
            "summary": "A description of the security group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 202
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "If you don't specify a GroupName, AWS CloudFormation generates a\nunique physical ID and uses that ID for the group name.",
            "remarks": "For valid values, see the GroupName\nparameter of the CreateSecurityGroup action in the Amazon EC2 API\nReference.\n\nIt is not recommended to use an explicit group name.",
            "stability": "experimental",
            "summary": "The name of the security group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 195
          },
          "name": "groupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.SelectedSubnets": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Result of selecting a subset of subnets from a VPC."
      },
      "fqn": "@aws-cdk/aws-ec2.SelectedSubnets",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc.ts",
        "line": 187
      },
      "name": "SelectedSubnets",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The respective AZs of each subnet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 196
          },
          "name": "availabilityZones",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Dependency representing internet connectivity for these subnets."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 206
          },
          "name": "internetConnectedDependency",
          "type": {
            "fqn": "@aws-cdk/cdk.IDependable"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Route table IDs of each respective subnet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 201
          },
          "name": "routeTableIds",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The subnet IDs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 191
          },
          "name": "subnetIds",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.Subnet": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/cdk.Resource",
      "docs": {
        "custom": {
          "resource": "AWS::EC2::Subnet"
        },
        "stability": "experimental",
        "summary": "Represents a new VPC subnet resource."
      },
      "fqn": "@aws-cdk/aws-ec2.Subnet",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.SubnetProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.ISubnet"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/vpc.ts",
        "line": 1052
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1058
          },
          "name": "fromSubnetAttributes",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/cdk.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.SubnetAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.ISubnet"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1054
          },
          "name": "isVpcSubnet",
          "parameters": [
            {
              "name": "x",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Create a default route that points to a passed IGW, with a dependency on the IGW's attachment to the VPC."
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1147
          },
          "name": "addDefaultInternetRoute",
          "parameters": [
            {
              "docs": {
                "summary": "the logical ID (ref) of the gateway attached to your VPC."
              },
              "name": "gatewayId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "the gateway attachment construct to be added as a dependency."
              },
              "name": "gatewayAttachment",
              "type": {
                "fqn": "@aws-cdk/cdk.IDependable"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Adds an entry to this subnets route table that points to the passed NATGatwayId."
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1164
          },
          "name": "addDefaultNatRoute",
          "parameters": [
            {
              "docs": {
                "summary": "The ID of the NAT gateway."
              },
              "name": "natGatewayId",
              "type": {
                "primitive": "string"
              }
            }
          ]
        }
      ],
      "name": "Subnet",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "The Availability Zone the subnet is located in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1065
          },
          "name": "availabilityZone",
          "overrides": "@aws-cdk/aws-ec2.ISubnet",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Parts of this VPC subnet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1095
          },
          "name": "dependencyElements",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cdk.IDependable"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Dependable that can be depended upon to force internet connectivity established on the VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1136
          },
          "name": "internetConnectivityEstablished",
          "overrides": "@aws-cdk/aws-ec2.ISubnet",
          "type": {
            "fqn": "@aws-cdk/cdk.IDependable"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1080
          },
          "name": "subnetAvailabilityZone",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The subnetId for this particular subnet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1070
          },
          "name": "subnetId",
          "overrides": "@aws-cdk/aws-ec2.ISubnet",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1085
          },
          "name": "subnetIpv6CidrBlocks",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1090
          },
          "name": "subnetNetworkAclAssociationId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1075
          },
          "name": "subnetVpcId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The routeTableId attached to this subnet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1100
          },
          "name": "routeTableId",
          "optional": true,
          "overrides": "@aws-cdk/aws-ec2.ISubnet",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.SubnetAttributes": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.SubnetAttributes",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc.ts",
        "line": 400
      },
      "name": "SubnetAttributes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The Availability Zone the subnet is located in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 404
          },
          "name": "availabilityZone",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The subnetId for this particular subnet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 409
          },
          "name": "subnetId",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.SubnetConfiguration": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Specify configuration parameters for a VPC to be built."
      },
      "fqn": "@aws-cdk/aws-ec2.SubnetConfiguration",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc.ts",
        "line": 583
      },
      "name": "SubnetConfiguration",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "This name will be suffixed with an integer correlating to a specific\navailability zone.",
            "stability": "experimental",
            "summary": "The common Logical Name for the `VpcSubnet`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 605
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "The Subnet type will control the ability to route and connect to the\nInternet.",
            "stability": "experimental",
            "summary": "The type of Subnet to configure."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 597
          },
          "name": "subnetType",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.SubnetType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Valid values are 16 - 28",
            "stability": "experimental",
            "summary": "The CIDR Mask or the number of leading 1 bits in the routing mask."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 589
          },
          "name": "cidrMask",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "When true, the IP space for the subnet is reserved but no actual\nresources are provisioned. This space is only dependent on the\nnumber of availibility zones and on `cidrMask` - all other subnet\nproperties are ignored.",
            "stability": "experimental",
            "summary": "Controls if subnet IP space needs to be reserved."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 617
          },
          "name": "reserved",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.SubnetProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Specify configuration parameters for a VPC subnet."
      },
      "fqn": "@aws-cdk/aws-ec2.SubnetProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc.ts",
        "line": 1022
      },
      "name": "SubnetProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The availability zone for the subnet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1027
          },
          "name": "availabilityZone",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The CIDR notation for this subnet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1037
          },
          "name": "cidrBlock",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The VPC which this subnet is part of."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1032
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true in Subnet.Public, false in Subnet.Private or Subnet.Isolated.",
            "stability": "experimental",
            "summary": "Controls if a public IP is associated to an instance at launch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1044
          },
          "name": "mapPublicIpOnLaunch",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.SubnetSelection": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "remarks": "Constructs that allow customization of VPC placement use parameters of this\ntype to provide placement settings.\n\nBy default, the instances are placed in the private subnets.",
        "stability": "experimental",
        "summary": "Customize subnets that are selected for placement of ENIs."
      },
      "fqn": "@aws-cdk/aws-ec2.SubnetSelection",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc.ts",
        "line": 155
      },
      "name": "SubnetSelection",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "defautl": "false"
            },
            "stability": "experimental",
            "summary": "If true, return at most one subnet per AZ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 181
          },
          "name": "onePerAz",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "name",
            "remarks": "(This is the name supplied in subnetConfiguration).\n\nAt most one of `subnetType` and `subnetName` can be supplied.",
            "stability": "experimental",
            "summary": "Place the instances in the subnets with the given name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 174
          },
          "name": "subnetName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "SubnetType.Private",
            "remarks": "At most one of `subnetType` and `subnetName` can be supplied.",
            "stability": "experimental",
            "summary": "Place the instances in the subnets of the given type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 163
          },
          "name": "subnetType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.SubnetType"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.SubnetType": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "experimental",
        "summary": "The type of Subnet."
      },
      "fqn": "@aws-cdk/aws-ec2.SubnetType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/vpc.ts",
        "line": 111
      },
      "members": [
        {
          "docs": {
            "remarks": "This can be good for subnets with RDS or\nElasticache endpoints",
            "stability": "experimental",
            "summary": "Isolated Subnets do not route Outbound traffic."
          },
          "name": "Isolated"
        },
        {
          "docs": {
            "remarks": "Instances in a private subnet can connect to the Internet, but will not\nallow connections to be initiated from the Internet.\n\nOutbound traffic will be routed via a NAT Gateway. Preference being in\nthe same AZ, but if not available will use another AZ (control by\nspecifing `maxGateways` on VpcNetwork). This might be used for\nexperimental cost conscious accounts or accounts where HA outbound\ntraffic is not needed.",
            "stability": "experimental",
            "summary": "Subnet that routes to the internet, but not vice versa."
          },
          "name": "Private"
        },
        {
          "docs": {
            "remarks": "Instances in a Public subnet can connect to the Internet and can be\nconnected to from the Internet as long as they are launched with public\nIPs (controlled on the AutoScalingGroup or other constructs that launch\ninstances).\n\nPublic subnets route outbound traffic via an Internet Gateway.",
            "stability": "experimental",
            "summary": "Subnet connected to the Internet."
          },
          "name": "Public"
        }
      ],
      "name": "SubnetType"
    },
    "@aws-cdk/aws-ec2.TcpAllPorts": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "experimental",
        "summary": "All TCP Ports."
      },
      "fqn": "@aws-cdk/aws-ec2.TcpAllPorts",
      "initializer": {},
      "interfaces": [
        "@aws-cdk/aws-ec2.IPortRange"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/security-group-rule.ts",
        "line": 199
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Produce the ingress/egress rule JSON for the given connection."
          },
          "locationInModule": {
            "filename": "lib/security-group-rule.ts",
            "line": 202
          },
          "name": "toRuleJSON",
          "overrides": "@aws-cdk/aws-ec2.IPortRange",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Returns a string representation of an object."
          },
          "locationInModule": {
            "filename": "lib/security-group-rule.ts",
            "line": 210
          },
          "name": "toString",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "TcpAllPorts",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Whether the rule containing this port range can be inlined into a securitygroup or not."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group-rule.ts",
            "line": 200
          },
          "name": "canInlineRule",
          "overrides": "@aws-cdk/aws-ec2.IPortRange",
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.TcpPort": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "experimental",
        "summary": "A single TCP port."
      },
      "fqn": "@aws-cdk/aws-ec2.TcpPort",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "parameters": [
          {
            "name": "port",
            "type": {
              "primitive": "number"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.IPortRange"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/security-group-rule.ts",
        "line": 155
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Produce the ingress/egress rule JSON for the given connection."
          },
          "locationInModule": {
            "filename": "lib/security-group-rule.ts",
            "line": 161
          },
          "name": "toRuleJSON",
          "overrides": "@aws-cdk/aws-ec2.IPortRange",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Returns a string representation of an object."
          },
          "locationInModule": {
            "filename": "lib/security-group-rule.ts",
            "line": 169
          },
          "name": "toString",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "TcpPort",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Whether the rule containing this port range can be inlined into a securitygroup or not."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group-rule.ts",
            "line": 156
          },
          "name": "canInlineRule",
          "overrides": "@aws-cdk/aws-ec2.IPortRange",
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.TcpPortRange": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "experimental",
        "summary": "A TCP port range."
      },
      "fqn": "@aws-cdk/aws-ec2.TcpPortRange",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "parameters": [
          {
            "name": "startPort",
            "type": {
              "primitive": "number"
            }
          },
          {
            "name": "endPort",
            "type": {
              "primitive": "number"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.IPortRange"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/security-group-rule.ts",
        "line": 177
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Produce the ingress/egress rule JSON for the given connection."
          },
          "locationInModule": {
            "filename": "lib/security-group-rule.ts",
            "line": 183
          },
          "name": "toRuleJSON",
          "overrides": "@aws-cdk/aws-ec2.IPortRange",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Returns a string representation of an object."
          },
          "locationInModule": {
            "filename": "lib/security-group-rule.ts",
            "line": 191
          },
          "name": "toString",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "TcpPortRange",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Whether the rule containing this port range can be inlined into a securitygroup or not."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group-rule.ts",
            "line": 178
          },
          "name": "canInlineRule",
          "overrides": "@aws-cdk/aws-ec2.IPortRange",
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.UdpAllPorts": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "experimental",
        "summary": "All UDP Ports."
      },
      "fqn": "@aws-cdk/aws-ec2.UdpAllPorts",
      "initializer": {},
      "interfaces": [
        "@aws-cdk/aws-ec2.IPortRange"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/security-group-rule.ts",
        "line": 263
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Produce the ingress/egress rule JSON for the given connection."
          },
          "locationInModule": {
            "filename": "lib/security-group-rule.ts",
            "line": 266
          },
          "name": "toRuleJSON",
          "overrides": "@aws-cdk/aws-ec2.IPortRange",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Returns a string representation of an object."
          },
          "locationInModule": {
            "filename": "lib/security-group-rule.ts",
            "line": 274
          },
          "name": "toString",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "UdpAllPorts",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Whether the rule containing this port range can be inlined into a securitygroup or not."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group-rule.ts",
            "line": 264
          },
          "name": "canInlineRule",
          "overrides": "@aws-cdk/aws-ec2.IPortRange",
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.UdpPort": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "experimental",
        "summary": "A single UDP port."
      },
      "fqn": "@aws-cdk/aws-ec2.UdpPort",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "parameters": [
          {
            "name": "port",
            "type": {
              "primitive": "number"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.IPortRange"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/security-group-rule.ts",
        "line": 218
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Produce the ingress/egress rule JSON for the given connection."
          },
          "locationInModule": {
            "filename": "lib/security-group-rule.ts",
            "line": 224
          },
          "name": "toRuleJSON",
          "overrides": "@aws-cdk/aws-ec2.IPortRange",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Returns a string representation of an object."
          },
          "locationInModule": {
            "filename": "lib/security-group-rule.ts",
            "line": 232
          },
          "name": "toString",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "UdpPort",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Whether the rule containing this port range can be inlined into a securitygroup or not."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group-rule.ts",
            "line": 219
          },
          "name": "canInlineRule",
          "overrides": "@aws-cdk/aws-ec2.IPortRange",
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.UdpPortRange": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "experimental",
        "summary": "A UDP port range."
      },
      "fqn": "@aws-cdk/aws-ec2.UdpPortRange",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "parameters": [
          {
            "name": "startPort",
            "type": {
              "primitive": "number"
            }
          },
          {
            "name": "endPort",
            "type": {
              "primitive": "number"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.IPortRange"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/security-group-rule.ts",
        "line": 241
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Produce the ingress/egress rule JSON for the given connection."
          },
          "locationInModule": {
            "filename": "lib/security-group-rule.ts",
            "line": 247
          },
          "name": "toRuleJSON",
          "overrides": "@aws-cdk/aws-ec2.IPortRange",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Returns a string representation of an object."
          },
          "locationInModule": {
            "filename": "lib/security-group-rule.ts",
            "line": 255
          },
          "name": "toString",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "UdpPortRange",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Whether the rule containing this port range can be inlined into a securitygroup or not."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group-rule.ts",
            "line": 242
          },
          "name": "canInlineRule",
          "overrides": "@aws-cdk/aws-ec2.IPortRange",
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.Vpc": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/cdk.Resource",
      "docs": {
        "custom": {
          "resource": "AWS::EC2::VPC"
        },
        "remarks": "import { Vpc } from '@aws-cdk/aws-ec2'\n\nconst vpc = new Vpc(this, {\n   cidr: \"10.0.0.0/16\"\n})\n\n// Iterate the public subnets\nfor (let subnet of vpc.publicSubnets) {\n\n}\n\n// Iterate the private subnets\nfor (let subnet of vpc.privateSubnets) {\n\n}",
        "stability": "experimental",
        "summary": "VpcNetwork deploys an AWS VPC, with public and private subnets per Availability Zone. For example:."
      },
      "fqn": "@aws-cdk/aws-ec2.Vpc",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "VpcNetwork creates a VPC that spans a whole region. It will automatically divide the provided VPC CIDR range, and create public and private subnets per Availability Zone. Network routing for the public subnets will be configured to allow outbound access directly via an Internet Gateway. Network routing for the private subnets will be configured to allow outbound access via a set of resilient NAT Gateways (one per AZ)."
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ec2.VpcProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.IVpc"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/vpc.ts",
        "line": 642
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Import an existing VPC from by querying the AWS environment this stack is deployed to."
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 676
          },
          "name": "fromLookup",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/cdk.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.VpcLookupOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.IVpc"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Import an exported VPC."
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 669
          },
          "name": "fromVpcAttributes",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/cdk.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.VpcAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.IVpc"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Adds a new DynamoDB gateway endpoint to this VPC."
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 905
          },
          "name": "addDynamoDbEndpoint",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "subnets",
              "optional": true,
              "type": {
                "collection": {
                  "elementtype": {
                    "fqn": "@aws-cdk/aws-ec2.SubnetSelection"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.GatewayVpcEndpoint"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Adds a new gateway endpoint to this VPC."
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 884
          },
          "name": "addGatewayEndpoint",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.GatewayVpcEndpointOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.GatewayVpcEndpoint"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Adds a new interface endpoint to this VPC."
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 285
          },
          "name": "addInterfaceEndpoint",
          "overrides": "@aws-cdk/aws-ec2.IVpc",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpoint"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Adds a new S3 gateway endpoint to this VPC."
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 894
          },
          "name": "addS3Endpoint",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "subnets",
              "optional": true,
              "type": {
                "collection": {
                  "elementtype": {
                    "fqn": "@aws-cdk/aws-ec2.SubnetSelection"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.GatewayVpcEndpoint"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Adds a new VPN connection to this VPC."
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 275
          },
          "name": "addVpnConnection",
          "overrides": "@aws-cdk/aws-ec2.IVpc",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.VpnConnectionOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.VpnConnection"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Return whether all of the given subnets are from the VPC's public subnets."
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 295
          },
          "name": "isPublicSubnets",
          "overrides": "@aws-cdk/aws-ec2.IVpc",
          "parameters": [
            {
              "name": "subnetIds",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          }
        },
        {
          "docs": {
            "remarks": "Requires that at least one subnet is matched, throws a descriptive\nerror message otherwise.",
            "stability": "experimental",
            "summary": "Return IDs of the subnets appropriate for the given selection strategy."
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 254
          },
          "name": "selectSubnetIds",
          "overrides": "@aws-cdk/aws-ec2.IVpc",
          "parameters": [
            {
              "name": "selection",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.SubnetSelection"
              }
            }
          ],
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "array"
              }
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Return the subnets appropriate for the placement strategy."
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 310
          },
          "name": "selectSubnetObjects",
          "parameters": [
            {
              "name": "selection",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.SubnetSelection"
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "fqn": "@aws-cdk/aws-ec2.ISubnet"
                },
                "kind": "array"
              }
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Returns IDs of selected subnets."
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 261
          },
          "name": "selectSubnets",
          "overrides": "@aws-cdk/aws-ec2.IVpc",
          "parameters": [
            {
              "name": "selection",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.SubnetSelection"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.SelectedSubnets"
            }
          }
        }
      ],
      "name": "Vpc",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "The default CIDR range used when creating VPCs. This can be overridden using VpcNetworkProps when creating a VPCNetwork resource. e.g. new VpcResource(this, { cidr: '192.168.0.0./16' })."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 648
          },
          "name": "DEFAULT_CIDR_RANGE",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "1 Public and 1 Private subnet per AZ evenly split",
            "stability": "experimental",
            "summary": "The default subnet configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 655
          },
          "name": "DEFAULT_SUBNETS",
          "static": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.SubnetConfiguration"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "AZs for this VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 728
          },
          "name": "availabilityZones",
          "overrides": "@aws-cdk/aws-ec2.IVpc",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Dependencies for internet connectivity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 247
          },
          "name": "internetDependencies",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cdk.IConstruct"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "List of isolated subnets in this VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 723
          },
          "name": "isolatedSubnets",
          "overrides": "@aws-cdk/aws-ec2.IVpc",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.ISubnet"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Dependencies for NAT connectivity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 252
          },
          "name": "natDependencies",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cdk.IConstruct"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "List of private subnets in this VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 718
          },
          "name": "privateSubnets",
          "overrides": "@aws-cdk/aws-ec2.IVpc",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.ISubnet"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "List of public subnets in this VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 713
          },
          "name": "publicSubnets",
          "overrides": "@aws-cdk/aws-ec2.IVpc",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.ISubnet"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The region where this VPC is defined."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 303
          },
          "name": "region",
          "overrides": "@aws-cdk/aws-ec2.IVpc",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 688
          },
          "name": "vpcCidrBlock",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 698
          },
          "name": "vpcCidrBlockAssociations",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 693
          },
          "name": "vpcDefaultNetworkAcl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 703
          },
          "name": "vpcDefaultSecurityGroup",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Identifier for this VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 683
          },
          "name": "vpcId",
          "overrides": "@aws-cdk/aws-ec2.IVpc",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 708
          },
          "name": "vpcIpv6CidrBlocks",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Identifier for the VPN gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 733
          },
          "name": "vpnGatewayId",
          "optional": true,
          "overrides": "@aws-cdk/aws-ec2.IVpc",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.VpcAttributes": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties that reference an external VpcNetwork."
      },
      "fqn": "@aws-cdk/aws-ec2.VpcAttributes",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc.ts",
        "line": 341
      },
      "name": "VpcAttributes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "List of availability zones for the subnets in this VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 350
          },
          "name": "availabilityZones",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "VPC's identifier."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 345
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Must be undefined or match the availability zones in length and order.",
            "stability": "experimental",
            "summary": "List of isolated subnet IDs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 385
          },
          "name": "isolatedSubnetIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Must be undefined or have a name for every isolated subnet group.",
            "stability": "experimental",
            "summary": "List of names for the isolated subnets."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 392
          },
          "name": "isolatedSubnetNames",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Must be undefined or match the availability zones in length and order.",
            "stability": "experimental",
            "summary": "List of private subnet IDs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 371
          },
          "name": "privateSubnetIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Must be undefined or have a name for every private subnet group.",
            "stability": "experimental",
            "summary": "List of names for the private subnets."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 378
          },
          "name": "privateSubnetNames",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Must be undefined or match the availability zones in length and order.",
            "stability": "experimental",
            "summary": "List of public subnet IDs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 357
          },
          "name": "publicSubnetIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Must be undefined or have a name for every public subnet group.",
            "stability": "experimental",
            "summary": "List of names for the public subnets."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 364
          },
          "name": "publicSubnetNames",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "VPN gateway's identifier."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 397
          },
          "name": "vpnGatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.VpcEndpoint": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/cdk.Resource",
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.VpcEndpoint",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/cdk.ResourceProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.IVpcEndpoint"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/vpc-endpoint.ts",
        "line": 20
      },
      "methods": [
        {
          "docs": {
            "remarks": "Not all interface VPC endpoints support policy. For more information\nsee https://docs.aws.amazon.com/vpc/latest/userguide/vpce-interface.html",
            "stability": "experimental",
            "summary": "Adds a statement to the policy document of the VPC endpoint. The statement must have a Principal."
          },
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 34
          },
          "name": "addToPolicy",
          "parameters": [
            {
              "docs": {
                "summary": "the IAM statement to add."
              },
              "name": "statement",
              "type": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              }
            }
          ]
        }
      ],
      "name": "VpcEndpoint",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The VPC endpoint identifier."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 21
          },
          "name": "vpcEndpointId",
          "overrides": "@aws-cdk/aws-ec2.IVpcEndpoint",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 23
          },
          "name": "policyDocument",
          "optional": true,
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.PolicyDocument"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.VpcEndpointType": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "experimental",
        "summary": "The type of VPC endpoint."
      },
      "fqn": "@aws-cdk/aws-ec2.VpcEndpointType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/vpc-endpoint.ts",
        "line": 56
      },
      "members": [
        {
          "docs": {
            "remarks": "An interface endpoint is an elastic network interface with a private IP\naddress that serves as an entry point for traffic destined to a supported\nservice.",
            "stability": "experimental",
            "summary": "Interface."
          },
          "name": "Interface"
        },
        {
          "docs": {
            "remarks": "A gateway endpoint is a gateway that is a target for a specified route in\nyour route table, used for traffic destined to a supported AWS service.",
            "stability": "experimental",
            "summary": "Gateway."
          },
          "name": "Gateway"
        }
      ],
      "name": "VpcEndpointType"
    },
    "@aws-cdk/aws-ec2.VpcLookupOptions": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "remarks": "The combination of properties must specify filter down to exactly one\nnon-default VPC, otherwise an error is raised.",
        "stability": "experimental",
        "summary": "Properties for looking up an existing VPC."
      },
      "fqn": "@aws-cdk/aws-ec2.VpcLookupOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc-network-provider.ts",
        "line": 11
      },
      "name": "VpcLookupOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "Don't care whether we return the default VPC",
            "stability": "experimental",
            "summary": "Whether to match the default VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-network-provider.ts",
            "line": 44
          },
          "name": "isDefault",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Don't filter on tags",
            "remarks": "The VPC must have all of these tags",
            "stability": "experimental",
            "summary": "Tags on the VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-network-provider.ts",
            "line": 37
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Don't filter on vpcId",
            "remarks": "If given, will import exactly this VPC.",
            "stability": "experimental",
            "summary": "The ID of the VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-network-provider.ts",
            "line": 19
          },
          "name": "vpcId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Don't filter on vpcName",
            "remarks": "If given, will import the VPC with this name.",
            "stability": "experimental",
            "summary": "The name of the VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-network-provider.ts",
            "line": 28
          },
          "name": "vpcName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.VpcNetworkProvider": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "experimental",
        "summary": "Context provider to discover and import existing VPCs."
      },
      "fqn": "@aws-cdk/aws-ec2.VpcNetworkProvider",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "parameters": [
          {
            "name": "context",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "options",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.VpcLookupOptions"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/vpc-network-provider.ts",
        "line": 50
      },
      "name": "VpcNetworkProvider",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Return the VPC import props matching the filter."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-network-provider.ts",
            "line": 69
          },
          "name": "vpcProps",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.VpcAttributes"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.VpcProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Configuration for Vpc."
      },
      "fqn": "@aws-cdk/aws-ec2.VpcProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc.ts",
        "line": 420
      },
      "name": "VpcProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "Vpc.DEFAULT_CIDR_RANGE",
            "stability": "experimental",
            "summary": "The CIDR range to use for the VPC (e.g. '10.0.0.0/16'). Should be a minimum of /28 and maximum size of /16. The range will be split evenly into two subnets per Availability Zone (one public, one private)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 428
          },
          "name": "cidr",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "DefaultInstanceTenancy.Default (shared) tenancy",
            "stability": "experimental",
            "summary": "The default tenancy of instances launched into the VPC. By setting this to dedicated tenancy, instances will be launched on hardware dedicated to a single AWS customer, unless specifically specified at instance launch time. Please note, not all instance types are usable with Dedicated tenancy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 458
          },
          "name": "defaultInstanceTenancy",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.DefaultInstanceTenancy"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Indicates whether the instances launched in the VPC get public DNS hostnames. If this attribute is true, instances in the VPC get public DNS hostnames, but only if the enableDnsSupport attribute is also set to true."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 437
          },
          "name": "enableDnsHostnames",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "If this attribute\nis false, the Amazon-provided DNS server in the VPC that resolves public DNS hostnames\nto IP addresses is not enabled. If this attribute is true, queries to the Amazon\nprovided DNS server at the 169.254.169.253 IP address, or the reserved IP address\nat the base of the VPC IPv4 network range plus two will succeed.",
            "stability": "experimental",
            "summary": "Indicates whether the DNS resolution is supported for the VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 448
          },
          "name": "enableDnsSupport",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None.",
            "stability": "experimental",
            "summary": "Gateway endpoints to add to this VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 562
          },
          "name": "gatewayEndpoints",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.GatewayVpcEndpointOptions"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "3",
            "remarks": "If the region has more AZs than you want to use (for example, because of EIP limits),\npick a lower number here. The AZs will be sorted and picked from the start of the list.\n\nIf you pick a higher number than the number of AZs in the region, all AZs in\nthe region will be selected. To use \"all AZs\" available to your account, use a\nhigh number (such as 99).",
            "stability": "experimental",
            "summary": "Define the maximum number of AZs to use in this region."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 472
          },
          "name": "maxAZs",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "maxAZs",
            "remarks": "For example, if set this to 1 and your subnet configuration is for 3 Public subnets then only\none of the Public subnets will have a gateway and all Private subnets will route to this NAT Gateway.",
            "stability": "experimental",
            "summary": "The number of NAT Gateways to create."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 482
          },
          "name": "natGateways",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- All public subnets.",
            "remarks": "You can pick a specific group of subnets by specifying the group name;\nthe picked subnets must be public subnets.",
            "stability": "experimental",
            "summary": "Configures the subnets which will have NAT Gateways."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 492
          },
          "name": "natGatewaySubnets",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.SubnetSelection"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- The VPC CIDR will be evenly divided between 1 public and 1\nprivate subnet per AZ.",
            "remarks": "The subnets are constructed in the context of the VPC so you only need\nspecify the configuration. The VPC details (VPC ID, specific CIDR,\nspecific AZ will be calculated during creation)\n\nFor example if you want 1 public subnet, 1 private subnet, and 1 isolated\nsubnet in each AZ provide the following:\nsubnetConfiguration: [\n    {\n      cidrMask: 24,\n      name: 'ingress',\n      subnetType: SubnetType.Public,\n    },\n    {\n      cidrMask: 24,\n      name: 'application',\n      subnetType: SubnetType.Private,\n    },\n    {\n      cidrMask: 28,\n      name: 'rds',\n      subnetType: SubnetType.Isolated,\n    }\n]\n\n`cidrMask` is optional and if not provided the IP space in the VPC will be\nevenly divided between the requested subnets.",
            "stability": "experimental",
            "summary": "Configure the subnets to build for each AZ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 527
          },
          "name": "subnetConfiguration",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.SubnetConfiguration"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No connections.",
            "stability": "experimental",
            "summary": "VPN connections to this VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 548
          },
          "name": "vpnConnections",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.VpnConnectionOptions"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- true when vpnGatewayAsn or vpnConnections is specified.",
            "stability": "experimental",
            "summary": "Indicates whether a VPN gateway should be created and attached to this VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 534
          },
          "name": "vpnGateway",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Amazon default ASN.",
            "stability": "experimental",
            "summary": "The private Autonomous System Number (ASN) for the VPN gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 541
          },
          "name": "vpnGatewayAsn",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- On the route tables associated with private subnets.",
            "stability": "experimental",
            "summary": "Where to propagate VPN routes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 555
          },
          "name": "vpnRoutePropagation",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.SubnetSelection"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.VpnConnection": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/cdk.Construct",
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.VpnConnection",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.VpnConnectionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.IVpnConnection"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/vpn.ts",
        "line": 101
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Return the given named metric for all VPN connections in the account/region."
          },
          "locationInModule": {
            "filename": "lib/vpn.ts",
            "line": 105
          },
          "name": "metricAll",
          "parameters": [
            {
              "name": "metricName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          },
          "static": true
        },
        {
          "docs": {
            "default": "sum over 5 minutes",
            "stability": "experimental",
            "summary": "Metric for the tunnel data in of all VPN connections in the account/region."
          },
          "locationInModule": {
            "filename": "lib/vpn.ts",
            "line": 127
          },
          "name": "metricAllTunnelDataIn",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          },
          "static": true
        },
        {
          "docs": {
            "default": "sum over 5 minutes",
            "stability": "experimental",
            "summary": "Metric for the tunnel data out of all VPN connections."
          },
          "locationInModule": {
            "filename": "lib/vpn.ts",
            "line": 136
          },
          "name": "metricAllTunnelDataOut",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          },
          "static": true
        },
        {
          "docs": {
            "default": "average over 5 minutes",
            "stability": "experimental",
            "summary": "Metric for the tunnel state of all VPN connections in the account/region."
          },
          "locationInModule": {
            "filename": "lib/vpn.ts",
            "line": 118
          },
          "name": "metricAllTunnelState",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Return the given named metric for this VPNConnection."
          },
          "locationInModule": {
            "filename": "lib/ec2-augmentations.generated.ts",
            "line": 35
          },
          "name": "metric",
          "overrides": "@aws-cdk/aws-ec2.IVpnConnection",
          "parameters": [
            {
              "name": "metricName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "remarks": "Sum over 5 minutes",
            "stability": "experimental",
            "summary": "The bytes received through the VPN tunnel."
          },
          "locationInModule": {
            "filename": "lib/ec2-augmentations.generated.ts",
            "line": 47
          },
          "name": "metricTunnelDataIn",
          "overrides": "@aws-cdk/aws-ec2.IVpnConnection",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "remarks": "Sum over 5 minutes",
            "stability": "experimental",
            "summary": "The bytes sent through the VPN tunnel."
          },
          "locationInModule": {
            "filename": "lib/ec2-augmentations.generated.ts",
            "line": 53
          },
          "name": "metricTunnelDataOut",
          "overrides": "@aws-cdk/aws-ec2.IVpnConnection",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "remarks": "Average over 5 minutes",
            "stability": "experimental",
            "summary": "The state of the tunnel. 0 indicates DOWN and 1 indicates UP."
          },
          "locationInModule": {
            "filename": "lib/ec2-augmentations.generated.ts",
            "line": 41
          },
          "name": "metricTunnelState",
          "overrides": "@aws-cdk/aws-ec2.IVpnConnection",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        }
      ],
      "name": "VpnConnection",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "The ASN of the customer gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpn.ts",
            "line": 143
          },
          "name": "customerGatewayAsn",
          "overrides": "@aws-cdk/aws-ec2.IVpnConnection",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The id of the customer gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpn.ts",
            "line": 141
          },
          "name": "customerGatewayId",
          "overrides": "@aws-cdk/aws-ec2.IVpnConnection",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The ip address of the customer gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpn.ts",
            "line": 142
          },
          "name": "customerGatewayIp",
          "overrides": "@aws-cdk/aws-ec2.IVpnConnection",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The id of the VPN connection."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpn.ts",
            "line": 140
          },
          "name": "vpnId",
          "overrides": "@aws-cdk/aws-ec2.IVpnConnection",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.VpnConnectionOptions": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.VpnConnectionOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpn.ts",
        "line": 49
      },
      "name": "VpnConnectionOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The ip address of the customer gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpn.ts",
            "line": 53
          },
          "name": "ip",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "65000",
            "stability": "experimental",
            "summary": "The ASN of the customer gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpn.ts",
            "line": 60
          },
          "name": "asn",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Dynamic routing (BGP)",
            "stability": "experimental",
            "summary": "The static routes to be routed from the VPN gateway to the customer gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpn.ts",
            "line": 67
          },
          "name": "staticRoutes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Amazon generated tunnel options",
            "remarks": "At most two elements (one per tunnel).\nDuplicates not allowed.",
            "stability": "experimental",
            "summary": "The tunnel options for the VPN connection."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpn.ts",
            "line": 75
          },
          "name": "tunnelOptions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.VpnTunnelOption"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.VpnConnectionProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.VpnConnectionProps",
      "interfaces": [
        "@aws-cdk/aws-ec2.VpnConnectionOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpn.ts",
        "line": 78
      },
      "name": "VpnConnectionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The VPC to connect to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpn.ts",
            "line": 82
          },
          "name": "vpc",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IVpc"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.VpnConnectionType": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "experimental",
        "summary": "The VPN connection type."
      },
      "fqn": "@aws-cdk/aws-ec2.VpnConnectionType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/vpn.ts",
        "line": 88
      },
      "members": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "The IPsec 1 VPN connection type."
          },
          "name": "IPsec1"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Dummy member TODO: remove once https://github.com/awslabs/jsii/issues/231 is fixed."
          },
          "name": "Dummy"
        }
      ],
      "name": "VpnConnectionType"
    },
    "@aws-cdk/aws-ec2.VpnTunnelOption": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ec2.VpnTunnelOption",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpn.ts",
        "line": 29
      },
      "name": "VpnTunnelOption",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "an Amazon generated pre-shared key",
            "remarks": "Allowed characters are alphanumeric characters\nand ._. Must be between 8 and 64 characters in length and cannot start with zero (0).",
            "stability": "experimental",
            "summary": "The pre-shared key (PSK) to establish initial authentication between the virtual private gateway and customer gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpn.ts",
            "line": 37
          },
          "name": "preSharedKey",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "an Amazon generated inside IP CIDR",
            "remarks": "Any specified CIDR blocks must be\nunique across all VPN connections that use the same virtual private gateway.\nA size /30 CIDR block from the 169.254.0.0/16 range.",
            "stability": "experimental",
            "summary": "The range of inside IP addresses for the tunnel."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpn.ts",
            "line": 46
          },
          "name": "tunnelInsideCidr",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.WindowsImage": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "remarks": "The AMI ID is selected using the values published to the SSM parameter store.\n\nhttps://aws.amazon.com/blogs/mt/query-for-the-latest-windows-ami-using-systems-manager-parameter-store/",
        "stability": "experimental",
        "summary": "Select the latest version of the indicated Windows version."
      },
      "fqn": "@aws-cdk/aws-ec2.WindowsImage",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "parameters": [
          {
            "name": "version",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.WindowsVersion"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.IMachineImageSource"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/machine-image.ts",
        "line": 20
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Return the image to use in the given context."
          },
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 27
          },
          "name": "getImage",
          "overrides": "@aws-cdk/aws-ec2.IMachineImageSource",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/cdk.Construct"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.MachineImage"
            }
          }
        }
      ],
      "name": "WindowsImage"
    },
    "@aws-cdk/aws-ec2.WindowsOS": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/aws-ec2.OperatingSystem",
      "docs": {
        "stability": "experimental",
        "summary": "OS features specialized for Windows."
      },
      "fqn": "@aws-cdk/aws-ec2.WindowsOS",
      "initializer": {},
      "kind": "class",
      "locationInModule": {
        "filename": "lib/machine-image.ts",
        "line": 458
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 459
          },
          "name": "createUserData",
          "overrides": "@aws-cdk/aws-ec2.OperatingSystem",
          "parameters": [
            {
              "name": "scripts",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "WindowsOS",
      "properties": [
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 463
          },
          "name": "type",
          "overrides": "@aws-cdk/aws-ec2.OperatingSystem",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.OperatingSystemType"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.WindowsVersion": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "experimental",
        "summary": "The Windows version to use for the WindowsImage."
      },
      "fqn": "@aws-cdk/aws-ec2.WindowsVersion",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/machine-image.ts",
        "line": 200
      },
      "members": [
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2008SP2English64BitSQL2008SP4Express"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012R2RTMChineseSimplified64BitBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012R2RTMChineseTraditional64BitBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012R2RTMDutch64BitBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012R2RTMEnglish64BitSQL2014SP2Enterprise"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012R2RTMHungarian64BitBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012R2RTMJapanese64BitBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2016EnglishCoreContainers"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2016EnglishCoreSQL2016SP1Web"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2016GermanFullBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2003R2SP2LanguagePacks32BitBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2008R2SP1English64BitSQL2008R2SP3Web"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2008R2SP1English64BitSQL2012SP4Express"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2008R2SP1PortugueseBrazil64BitCore"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012R2RTMEnglish64BitSQL2016SP2Standard"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012RTMEnglish64BitSQL2014SP2Express"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012RTMItalian64BitBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2016EnglishCoreSQL2016SP1Express"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2016EnglishDeepLearning"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2019ItalianFullBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2008R2SP1Korean64BitBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012R2RTMEnglish64BitSQL2016SP1Express"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012R2RTMJapanese64BitSQL2016SP2Web"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2016JapaneseFullSQL2016SP2Web"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2016KoreanFullBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2016KoreanFullSQL2016SP2Standard"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2016PortuguesePortugalFullBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2019EnglishFullSQL2017Web"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2019FrenchFullBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2019KoreanFullBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2008R2SP1ChineseHongKongSAR64BitBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2008R2SP1ChinesePRC64BitBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012RTMFrench64BitBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2016EnglishFullContainers"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2016EnglishFullSQL2016SP1Standard"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2016RussianFullBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2019ChineseSimplifiedFullBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2019EnglishFullSQL2016SP2Standard"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2019HungarianFullBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2008R2SP1English64BitSQL2008R2SP3Express"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2008R2SP1LanguagePacks64BitBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2008SP2English32BitBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012R2RTMEnglish64BitSQL2012SP4Enterprise"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012RTMChineseTraditional64BitBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012RTMEnglish64BitSQL2008R2SP3Express"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012RTMEnglish64BitSQL2014SP2Standard"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012RTMJapanese64BitSQL2014SP2Express"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2016PolishFullBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2019EnglishFullSQL2016SP2Web"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012R2RTMEnglish64BitSQL2014SP3Standard"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012R2RTMEnglish64BitSQL2016SP2Express"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012R2RTMEnglishDeepLearning"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012R2RTMGerman64BitBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012R2RTMJapanese64BitSQL2016SP1Express"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012R2RTMRussian64BitBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012RTMChineseTraditionalHongKongSAR64BitBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012RTMHungarian64BitBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012RTMJapanese64BitSQL2014SP3Standard"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2019EnglishFullHyperV"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2003R2SP2English64BitSQL2005SP4Express"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2008R2SP1Japanese64BitSQL2012SP4Express"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012RTMGerman64BitBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012RTMJapanese64BitSQL2008R2SP3Standard"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2016EnglishFullSQL2016SP2Standard"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2019EnglishFullSQL2017Express"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2019JapaneseFullBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2019RussianFullBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012R2RTMEnglish64BitSQL2014SP2Standard"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012R2RTMItalian64BitBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012RTMEnglish64BitBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012RTMEnglish64BitSQL2008R2SP3Standard"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2016EnglishFullHyperV"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2016EnglishFullSQL2016SP2Enterprise"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2019ChineseTraditionalFullBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2019EnglishCoreBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2019EnglishCoreContainersLatest"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2008SP2English64BitBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012R2RTMFrench64BitBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012R2RTMPolish64BitBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012RTMEnglish64BitSQL2012SP4Express"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012RTMEnglish64BitSQL2014SP3Standard"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012RTMJapanese64BitSQL2012SP4Standard"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2016EnglishCoreContainersLatest"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2019EnglishFullSQL2016SP2Express"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2019TurkishFullBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012R2RTMEnglish64BitSQL2014SP2Express"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012R2RTMEnglish64BitSQL2014SP3Web"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012R2RTMJapanese64BitSQL2016SP1Web"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012R2RTMPortugueseBrazil64BitBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012R2RTMPortuguesePortugal64BitBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012R2RTMSwedish64BitBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2016EnglishFullSQL2016SP1Express"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2016ItalianFullBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2016SpanishFullBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2019EnglishFullSQL2017Standard"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2003R2SP2LanguagePacks64BitSQL2005SP4Standard"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2008R2SP1Japanese64BitSQL2008R2SP3Standard"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012R2RTMJapanese64BitSQL2016SP1Standard"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012RTMEnglish64BitSQL2008R2SP3Web"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012RTMJapanese64BitSQL2014SP2Web"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2016EnglishCoreSQL2016SP2Enterprise"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2016PortugueseBrazilFullBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2019EnglishFullBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2003R2SP2English32BitBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012R2RTMCzech64BitBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012R2RTMEnglish64BitSQL2016SP1Standard"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012R2RTMJapanese64BitSQL2014SP2Express"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012RTMEnglish64BitSQL2012SP4Standard"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2016EnglishCoreSQL2016SP1Enterprise"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2016JapaneseFullSQL2016SP1Web"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2016SwedishFullBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2016TurkishFullBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2008R2SP1English64BitCoreSQL2012SP4Standard"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2008R2SP1LanguagePacks64BitSQL2008R2SP3Standard"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012RTMCzech64BitBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012RTMTurkish64BitBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2016DutchFullBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2016EnglishFullSQL2016SP2Express"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2016EnglishFullSQL2017Enterprise"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2016HungarianFullBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2016KoreanFullSQL2016SP1Standard"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2019SpanishFullBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2003R2SP2English64BitBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2008R2SP1English64BitBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2008R2SP1LanguagePacks64BitSQL2008R2SP3Express"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2008SP2PortugueseBrazil64BitBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012R2RTMEnglish64BitSQL2016SP1Web"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012R2RTMJapanese64BitSQL2014SP3Express"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012R2RTMJapanese64BitSQL2016SP2Enterprise"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012RTMJapanese64BitBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2019EnglishFullContainersLatest"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2019EnglishFullSQL2017Enterprise"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer1709EnglishCoreContainersLatest"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer1803EnglishCoreBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2008R2SP1English64BitSQL2012SP4Web"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2008R2SP1Japanese64BitBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2008SP2English64BitSQL2008SP4Standard"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012R2RTMEnglish64BitBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012RTMPortugueseBrazil64BitBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2016EnglishFullSQL2016SP1Web"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2016EnglishP3"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2016JapaneseFullSQL2016SP1Enterprise"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2003R2SP2LanguagePacks64BitBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012R2RTMChineseTraditionalHongKong64BitBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012R2RTMEnglish64BitSQL2014SP3Express"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012R2RTMEnglish64BitSQL2016SP2Enterprise"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012RTMChineseSimplified64BitBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012RTMEnglish64BitSQL2012SP4Web"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012RTMJapanese64BitSQL2014SP3Web"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2016JapaneseFullBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2016JapaneseFullSQL2016SP1Express"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer1803EnglishCoreContainersLatest"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2008R2SP1Japanese64BitSQL2012SP4Standard"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012R2RTMEnglish64BitCore"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012R2RTMEnglish64BitSQL2014SP2Web"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012R2RTMEnglish64BitSQL2014SP3Enterprise"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012R2RTMJapanese64BitSQL2016SP2Standard"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012RTMEnglish64BitSQL2014SP3Web"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012RTMSwedish64BitBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2016ChineseSimplifiedFullBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2019PolishFullBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2008R2SP1Japanese64BitSQL2008R2SP3Web"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2008R2SP1PortugueseBrazil64BitBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012R2RTMJapanese64BitSQL2016SP1Enterprise"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012R2RTMJapanese64BitSQL2016SP2Express"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012RTMEnglish64BitSQL2014SP3Express"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012RTMJapanese64BitSQL2014SP2Standard"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2016EnglishCoreBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2016EnglishFullBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2016EnglishFullSQL2017Web"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2019GermanFullBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2003R2SP2English64BitSQL2005SP4Standard"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2008R2SP1English64BitSQL2012SP4Enterprise"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2008R2SP1Japanese64BitSQL2008R2SP3Express"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012R2RTMEnglish64BitSQL2016SP1Enterprise"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012RTMEnglish64BitSQL2014SP2Web"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012RTMJapanese64BitSQL2008R2SP3Express"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2016FrenchFullBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2016JapaneseFullSQL2016SP2Enterprise"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2019CzechFullBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer1809EnglishCoreBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer1809EnglishCoreContainersLatest"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2003R2SP2LanguagePacks64BitSQL2005SP4Express"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012R2RTMTurkish64BitBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012RTMJapanese64BitSQL2012SP4Web"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012RTMPolish64BitBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012RTMSpanish64BitBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2016EnglishFullSQL2016SP1Enterprise"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2016JapaneseFullSQL2016SP2Express"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2019EnglishFullSQL2016SP2Enterprise"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer1709EnglishCoreBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2008R2SP1English64BitSQL2012RTMSP2Enterprise"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2008R2SP1English64BitSQL2012SP4Standard"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2008SP2PortugueseBrazil32BitBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012R2RTMJapanese64BitSQL2014SP2Standard"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012RTMJapanese64BitSQL2012SP4Express"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012RTMPortuguesePortugal64BitBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2016CzechFullBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2016JapaneseFullSQL2016SP1Standard"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2019DutchFullBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2008R2SP1English64BitCore"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012R2RTMEnglish64BitSQL2016SP2Web"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012R2RTMKorean64BitBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012RTMDutch64BitBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2016English64BitSQL2012SP4Enterprise"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2016EnglishCoreSQL2016SP1Standard"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2016EnglishCoreSQL2016SP2Express"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2016EnglishCoreSQL2016SP2Web"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2016EnglishFullSQL2017Standard"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2019PortugueseBrazilFullBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2008R2SP1English64BitSQL2008R2SP3Standard"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2008R2SP1English64BitSharePoint2010SP2Foundation"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012R2RTMEnglishP3"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012R2RTMJapanese64BitSQL2014SP3Standard"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012R2RTMSpanish64BitBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012RTMJapanese64BitSQL2014SP3Express"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2016EnglishCoreSQL2016SP2Standard"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2016JapaneseFullSQL2016SP2Standard"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2019PortuguesePortugalFullBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2019SwedishFullBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012R2RTMEnglish64BitHyperV"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012RTMKorean64BitBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2012RTMRussian64BitBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2016ChineseTraditionalFullBase"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2016EnglishFullSQL2016SP2Web"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WindowsServer2016EnglishFullSQL2017Express"
        }
      ],
      "name": "WindowsVersion"
    }
  },
  "version": "0.35.0",
  "fingerprint": "Z0daeInmcwamCiNNQwva1bDvhRAB5uRg2RGSPgw6AtE="
}
