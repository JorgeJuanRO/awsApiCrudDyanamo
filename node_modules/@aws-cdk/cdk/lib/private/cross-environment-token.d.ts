import { ArnComponents } from '../arn';
import { IResolvable, IResolveContext } from '../resolvable';
import { IResource } from '../resource';
/**
 * A Token that represents a reference that spans accounts and/or regions,
 * and so requires the resources to have physical names.
 * You should never need to interact with these directly,
 * instead use the {@link ResourceIdentifiers} class.
 * This class is private to the @aws-cdk/cdk package.
 */
export declare abstract class CrossEnvironmentToken implements IResolvable {
    private readonly regularValue;
    private readonly crossEnvironmentValue;
    private readonly resource;
    readonly creationStack: string[];
    /**
     * @param regularValue the value used when this is referenced NOT from a cross account and/or region Stack
     * @param crossEnvironmentValue the value used when this is referenced from a cross account and/or region Stack
     * @param resource the scope this reference is mastered in. Used to determine the owning Stack
     * @param displayName a short name to be used in Token display
     */
    protected constructor(regularValue: string, crossEnvironmentValue: any, resource: IResource);
    resolve(context: IResolveContext): any;
}
export declare class CrossEnvironmentPhysicalArnToken extends CrossEnvironmentToken {
    constructor(regularValue: string, arnComponents: ArnComponents, resource: IResource);
}
export declare class CrossEnvironmentPhysicalNameToken extends CrossEnvironmentToken {
    constructor(regularValue: string, resource: IResource);
}
