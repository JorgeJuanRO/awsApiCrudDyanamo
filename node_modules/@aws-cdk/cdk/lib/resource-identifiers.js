"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const cross_environment_token_1 = require("./private/cross-environment-token");
const token_1 = require("./token");
/**
 * The identifiers (name and ARN) for a given L2.
 * These should be only used inside the Construct Library implementation.
 */
class ResourceIdentifiers {
    constructor(resource, props) {
        this.arn = token_1.Token.asString(new cross_environment_token_1.CrossEnvironmentPhysicalArnToken(props.arn, props.arnComponents, resource), { displayHint: 'Arn' });
        this.name = token_1.Token.asString(new cross_environment_token_1.CrossEnvironmentPhysicalNameToken(props.name, resource), { displayHint: 'Name' });
    }
}
exports.ResourceIdentifiers = ResourceIdentifiers;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVzb3VyY2UtaWRlbnRpZmllcnMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJyZXNvdXJjZS1pZGVudGlmaWVycy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUNBLCtFQUF3SDtBQUV4SCxtQ0FBZ0M7QUFzQmhDOzs7R0FHRztBQUNILE1BQWEsbUJBQW1CO0lBSTlCLFlBQVksUUFBbUIsRUFBRSxLQUErQjtRQUM5RCxJQUFJLENBQUMsR0FBRyxHQUFHLGFBQUssQ0FBQyxRQUFRLENBQUMsSUFBSSwwREFBZ0MsQ0FDNUQsS0FBSyxDQUFDLEdBQUcsRUFDVCxLQUFLLENBQUMsYUFBYSxFQUNuQixRQUFRLENBQ1QsRUFBRSxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsQ0FBQyxDQUFDO1FBRTNCLElBQUksQ0FBQyxJQUFJLEdBQUcsYUFBSyxDQUFDLFFBQVEsQ0FBQyxJQUFJLDJEQUFpQyxDQUM5RCxLQUFLLENBQUMsSUFBSSxFQUNWLFFBQVEsQ0FDVCxFQUFFLEVBQUUsV0FBVyxFQUFFLE1BQU0sRUFBRSxDQUFDLENBQUM7SUFDOUIsQ0FBQztDQUNGO0FBaEJELGtEQWdCQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFybkNvbXBvbmVudHMgfSBmcm9tICcuL2Fybic7XG5pbXBvcnQgeyBDcm9zc0Vudmlyb25tZW50UGh5c2ljYWxBcm5Ub2tlbiwgQ3Jvc3NFbnZpcm9ubWVudFBoeXNpY2FsTmFtZVRva2VuIH0gZnJvbSAnLi9wcml2YXRlL2Nyb3NzLWVudmlyb25tZW50LXRva2VuJztcbmltcG9ydCB7IElSZXNvdXJjZSB9IGZyb20gJy4vcmVzb3VyY2UnO1xuaW1wb3J0IHsgVG9rZW4gfSBmcm9tICcuL3Rva2VuJztcblxuLyoqXG4gKiBDb25zdHJ1Y3Rpb24gcHJvcGVydGllcyBmb3Ige0BsaW5rIFJlc291cmNlSWRlbnRpZmllcnN9LlxuICovXG5leHBvcnQgaW50ZXJmYWNlIFJlc291cmNlSWRlbnRpZmllcnNQcm9wcyB7XG4gIC8qKlxuICAgKiBUaGUgQVJOIG9mIHRoZSByZXNvdXJjZSB3aGVuIHJlZmVyZW5jZWQgZnJvbSB0aGUgc2FtZSBzdGFjay5cbiAgICovXG4gIHJlYWRvbmx5IGFybjogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBUaGUgbmFtZSBvZiB0aGUgcmVzb3VyY2Ugd2hlbiByZWZlcmVuY2VkIGZyb20gdGhlIHNhbWUgc3RhY2suXG4gICAqL1xuICByZWFkb25seSBuYW1lOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIFRoZSByZWNpcGUgZm9yIGNyZWF0aW5nIGFuIEFSTiBmcm9tIGEgbmFtZSBmb3IgdGhpcyByZXNvdXJjZS5cbiAgICovXG4gIHJlYWRvbmx5IGFybkNvbXBvbmVudHM6IEFybkNvbXBvbmVudHM7XG59XG5cbi8qKlxuICogVGhlIGlkZW50aWZpZXJzIChuYW1lIGFuZCBBUk4pIGZvciBhIGdpdmVuIEwyLlxuICogVGhlc2Ugc2hvdWxkIGJlIG9ubHkgdXNlZCBpbnNpZGUgdGhlIENvbnN0cnVjdCBMaWJyYXJ5IGltcGxlbWVudGF0aW9uLlxuICovXG5leHBvcnQgY2xhc3MgUmVzb3VyY2VJZGVudGlmaWVycyB7XG4gIHB1YmxpYyByZWFkb25seSBhcm46IHN0cmluZztcbiAgcHVibGljIHJlYWRvbmx5IG5hbWU6IHN0cmluZztcblxuICBjb25zdHJ1Y3RvcihyZXNvdXJjZTogSVJlc291cmNlLCBwcm9wczogUmVzb3VyY2VJZGVudGlmaWVyc1Byb3BzKSB7XG4gICAgdGhpcy5hcm4gPSBUb2tlbi5hc1N0cmluZyhuZXcgQ3Jvc3NFbnZpcm9ubWVudFBoeXNpY2FsQXJuVG9rZW4oXG4gICAgICBwcm9wcy5hcm4sXG4gICAgICBwcm9wcy5hcm5Db21wb25lbnRzLFxuICAgICAgcmVzb3VyY2UsXG4gICAgKSwgeyBkaXNwbGF5SGludDogJ0FybicgfSk7XG5cbiAgICB0aGlzLm5hbWUgPSBUb2tlbi5hc1N0cmluZyhuZXcgQ3Jvc3NFbnZpcm9ubWVudFBoeXNpY2FsTmFtZVRva2VuKFxuICAgICAgcHJvcHMubmFtZSxcbiAgICAgIHJlc291cmNlLFxuICAgICksIHsgZGlzcGxheUhpbnQ6ICdOYW1lJyB9KTtcbiAgfVxufVxuIl19