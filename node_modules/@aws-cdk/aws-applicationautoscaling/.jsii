{
  "author": {
    "name": "Amazon Web Services",
    "organization": true,
    "roles": [
      "author"
    ],
    "url": "https://aws.amazon.com"
  },
  "dependencies": {
    "@aws-cdk/aws-autoscaling-common": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.AutoScaling.Common",
          "packageId": "Amazon.CDK.AWS.AutoScaling.Common",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "autoscaling-common",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.autoscaling.common"
        },
        "js": {
          "npm": "@aws-cdk/aws-autoscaling-common"
        },
        "python": {
          "distName": "aws-cdk.aws-autoscaling-common",
          "module": "aws_cdk.aws_autoscaling_common"
        }
      },
      "version": "0.35.0"
    },
    "@aws-cdk/aws-cloudwatch": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.CloudWatch",
          "packageId": "Amazon.CDK.AWS.CloudWatch",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "cloudwatch",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudwatch"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudwatch"
        },
        "python": {
          "distName": "aws-cdk.aws-cloudwatch",
          "module": "aws_cdk.aws_cloudwatch"
        }
      },
      "version": "0.35.0"
    },
    "@aws-cdk/aws-iam": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.IAM",
          "packageId": "Amazon.CDK.AWS.IAM",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "iam",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.iam"
        },
        "js": {
          "npm": "@aws-cdk/aws-iam"
        },
        "python": {
          "distName": "aws-cdk.aws-iam",
          "module": "aws_cdk.aws_iam"
        }
      },
      "version": "0.35.0"
    },
    "@aws-cdk/cdk": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "cdk",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk"
        },
        "js": {
          "npm": "@aws-cdk/cdk"
        },
        "python": {
          "distName": "aws-cdk.cdk",
          "module": "aws_cdk.cdk"
        }
      },
      "version": "0.35.0"
    }
  },
  "dependencyClosure": {
    "@aws-cdk/aws-autoscaling-common": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.AutoScaling.Common",
          "packageId": "Amazon.CDK.AWS.AutoScaling.Common",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "autoscaling-common",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.autoscaling.common"
        },
        "js": {
          "npm": "@aws-cdk/aws-autoscaling-common"
        },
        "python": {
          "distName": "aws-cdk.aws-autoscaling-common",
          "module": "aws_cdk.aws_autoscaling_common"
        }
      },
      "version": "0.35.0"
    },
    "@aws-cdk/aws-cloudwatch": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.CloudWatch",
          "packageId": "Amazon.CDK.AWS.CloudWatch",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "cloudwatch",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudwatch"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudwatch"
        },
        "python": {
          "distName": "aws-cdk.aws-cloudwatch",
          "module": "aws_cdk.aws_cloudwatch"
        }
      },
      "version": "0.35.0"
    },
    "@aws-cdk/aws-iam": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.IAM",
          "packageId": "Amazon.CDK.AWS.IAM",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "iam",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.iam"
        },
        "js": {
          "npm": "@aws-cdk/aws-iam"
        },
        "python": {
          "distName": "aws-cdk.aws-iam",
          "module": "aws_cdk.aws_iam"
        }
      },
      "version": "0.35.0"
    },
    "@aws-cdk/cdk": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "cdk",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk"
        },
        "js": {
          "npm": "@aws-cdk/cdk"
        },
        "python": {
          "distName": "aws-cdk.cdk",
          "module": "aws_cdk.cdk"
        }
      },
      "version": "0.35.0"
    },
    "@aws-cdk/cx-api": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.CXAPI",
          "packageId": "Amazon.CDK.CXAPI",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cx-api",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cxapi"
        },
        "js": {
          "npm": "@aws-cdk/cx-api"
        },
        "python": {
          "distName": "aws-cdk.cx-api",
          "module": "aws_cdk.cx_api"
        }
      },
      "version": "0.35.0"
    },
    "@aws-cdk/region-info": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.RegionInfo",
          "packageId": "Amazon.CDK.RegionInfo",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "cdk-region-info",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.regioninfo"
        },
        "js": {
          "npm": "@aws-cdk/region-info"
        },
        "python": {
          "distName": "aws-cdk.region-info",
          "module": "aws_cdk.region_info"
        }
      },
      "version": "0.35.0"
    }
  },
  "description": "The CDK Construct Library for AWS::ApplicationAutoScaling",
  "docs": {
    "stability": "experimental"
  },
  "homepage": "https://github.com/awslabs/aws-cdk",
  "jsiiVersion": "0.11.3 (build 464b8c6)",
  "license": "Apache-2.0",
  "metadata": {
    "awsdocs:title": "AWS Auto Scaling"
  },
  "name": "@aws-cdk/aws-applicationautoscaling",
  "readme": {
    "markdown": "## AWS Auto Scaling Construct Library\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Stability: Experimental](https://img.shields.io/badge/stability-Experimental-important.svg?style=for-the-badge)\n\n> **This is a _developer preview_ (public beta) module. Releases might lack important features and might have\n> future breaking changes.**\n>\n> This API is still under active development and subject to non-backward\n> compatible changes or removal in any future version. Use of the API is not recommended in production\n> environments. Experimental APIs are not subject to the Semantic Versioning model.\n\n---\n<!--END STABILITY BANNER-->\n\n**Application AutoScaling** is used to configure autoscaling for all\nservices other than scaling EC2 instances. For example, you will use this to\nscale ECS tasks, DynamoDB capacity, Spot Fleet sizes and more.\n\nAs a CDK user, you will probably not have to interact with this library\ndirectly; instead, it will be used by other construct libraries to\noffer AutoScaling features for their own constructs.\n\nThis document will describe the general autoscaling features and concepts;\nyour particular service may offer only a subset of these.\n\n### AutoScaling basics\n\nResources can offer one or more **attributes** to autoscale, typically\nrepresenting some capacity dimension of the underlying service. For example,\na DynamoDB Table offers autoscaling of the read and write capacity of the\ntable proper and its Global Secondary Indexes, an ECS Service offers\nautoscaling of its task count, an RDS Aurora cluster offers scaling of its\nreplica count, and so on.\n\nWhen you enable autoscaling for an attribute, you specify a minimum and a\nmaximum value for the capacity. AutoScaling policies that respond to metrics\nwill never go higher or lower than the indicated capacity (but scheduled\nscaling actions might, see below).\n\nThere are three ways to scale your capacity:\n\n* **In response to a metric** (also known as step scaling); for example, you\n  might want to scale out if the CPU usage across your cluster starts to rise,\n  and scale in when it drops again.\n* **By trying to keep a certain metric around a given value** (also known as\n  target tracking scaling); you might want to automatically scale out an in to\n  keep your CPU usage around 50%.\n* **On a schedule**; you might want to organize your scaling around traffic\n  flows you expect, by scaling out in the morning and scaling in in the\n  evening.\n\nThe general pattern of autoscaling will look like this:\n\n```ts\nconst capacity = resource.autoScaleCapacity({\n  minCapacity: 5,\n  maxCapacity: 100\n});\n\n// Enable a type of metric scaling and/or schedule scaling\ncapacity.scaleOnMetric(...);\ncapacity.scaleToTrackMetric(...);\ncapacity.scaleOnSchedule(...);\n```\n\n### Step Scaling\n\nThis type of scaling scales in and out in deterministics steps that you\nconfigure, in response to metric values. For example, your scaling strategy\nto scale in response to CPU usage might look like this:\n\n```\n Scaling        -1          (no change)          +1       +3\n            │        │                       │        │        │\n            ├────────┼───────────────────────┼────────┼────────┤\n            │        │                       │        │        │\nCPU usage   0%      10%                     50%       70%     100%\n```\n\n(Note that this is not necessarily a recommended scaling strategy, but it's\na possible one. You will have to determine what thresholds are right for you).\n\nYou would configure it like this:\n\n```ts\ncapacity.scaleOnMetric('ScaleToCPU', {\n  metric: service.metricCpuUtilization(),\n  scalingSteps: [\n    { upper: 10, change: -1 },\n    { lower: 50, change: +1 },\n    { lower: 70, change: +3 },\n  ],\n\n  // Change this to AdjustmentType.PercentChangeInCapacity to interpret the\n  // 'change' numbers before as percentages instead of capacity counts.\n  adjustmentType: autoscaling.AdjustmentType.ChangeInCapacity,\n});\n```\n\nThe AutoScaling construct library will create the required CloudWatch alarms and\nAutoScaling policies for you.\n\n### Target Tracking Scaling\n\nThis type of scaling scales in and out in order to keep a metric (typically\nrepresenting utilization) around a value you prefer. This type of scaling is\ntypically heavily service-dependent in what metric you can use, and so\ndifferent services will have different methods here to set up target tracking\nscaling.\n\nThe following example configures the read capacity of a DynamoDB table\nto be around 60% utilization:\n\n```ts\nconst readCapacity = table.autosScaleReadCapacity({\n  minCapacity: 10,\n  maxCapacity: 1000\n});\nreadCapacity.scaleOnUtilization({\n  targetUtilizationPercent: 60\n});\n```\n\n### Scheduled Scaling\n\nThis type of scaling is used to change capacities based on time. It works\nby changing the `minCapacity` and `maxCapacity` of the attribute, and so\ncan be used for two purposes:\n\n* Scale in and out on a schedule by setting the `minCapacity` high or\n  the `maxCapacity` low.\n* Still allow the regular scaling actions to do their job, but restrict\n  the range they can scale over (by setting both `minCapacity` and\n  `maxCapacity` but changing their range over time).\n\nThe following schedule expressions can be used:\n\n* `at(yyyy-mm-ddThh:mm:ss)` -- scale at a particular moment in time\n* `rate(value unit)` -- scale every minute/hour/day\n* `cron(mm hh dd mm dow)` -- scale on arbitrary schedules\n\nOf these, the cron expression is the most useful but also the most\ncomplicated. There is a `Cron` helper class to help build cron expressions.\n\nThe following example scales the fleet out in the morning, and lets natural\nscaling take over at night:\n\n```ts\nconst capacity = resource.autoScaleCapacity({\n  minCapacity: 1,\n  maxCapacity: 50,\n});\n\ncapacity.scaleOnSchedule('PrescaleInTheMorning', {\n  schedule: autoscaling.Cron.dailyUtc(8),\n  minCapacity: 20,\n});\n\ncapacity.scaleOnSchedule('AllowDownscalingAtNight', {\n  schedule: autoscaling.Cron.dailyUtc(20),\n  minCapacity: 1\n});\n"
  },
  "repository": {
    "directory": "packages/@aws-cdk/aws-applicationautoscaling",
    "type": "git",
    "url": "https://github.com/awslabs/aws-cdk.git"
  },
  "schema": "jsii/0.10.0",
  "targets": {
    "dotnet": {
      "assemblyOriginatorKeyFile": "../../key.snk",
      "namespace": "Amazon.CDK.AWS.ApplicationAutoScaling",
      "packageId": "Amazon.CDK.AWS.ApplicationAutoScaling",
      "signAssembly": true
    },
    "java": {
      "maven": {
        "artifactId": "applicationautoscaling",
        "groupId": "software.amazon.awscdk"
      },
      "package": "software.amazon.awscdk.services.applicationautoscaling"
    },
    "js": {
      "npm": "@aws-cdk/aws-applicationautoscaling"
    },
    "python": {
      "distName": "aws-cdk.aws-applicationautoscaling",
      "module": "aws_cdk.aws_applicationautoscaling"
    }
  },
  "types": {
    "@aws-cdk/aws-applicationautoscaling.AdjustmentTier": {
      "assembly": "@aws-cdk/aws-applicationautoscaling",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "An adjustment."
      },
      "fqn": "@aws-cdk/aws-applicationautoscaling.AdjustmentTier",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/step-scaling-action.ts",
        "line": 162
      },
      "name": "AdjustmentTier",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "The number is interpeted as an added capacity, a new fixed capacity or an\nadded percentage depending on the AdjustmentType value of the\nStepScalingPolicy.\n\nCan be positive or negative.",
            "stability": "experimental",
            "summary": "What number to adjust the capacity with."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-action.ts",
            "line": 172
          },
          "name": "adjustment",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "-Infinity if this is the first tier, otherwise the upperBound of the previous tier",
            "remarks": "The scaling tier applies if the difference between the metric\nvalue and its alarm threshold is higher than this value.",
            "stability": "experimental",
            "summary": "Lower bound where this scaling tier applies."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-action.ts",
            "line": 182
          },
          "name": "lowerBound",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "+Infinity",
            "remarks": "The scaling tier applies if the difference between the metric\nvalue and its alarm threshold is lower than this value.",
            "stability": "experimental",
            "summary": "Upper bound where this scaling tier applies."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-action.ts",
            "line": 192
          },
          "name": "upperBound",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-applicationautoscaling.AdjustmentType": {
      "assembly": "@aws-cdk/aws-applicationautoscaling",
      "docs": {
        "stability": "experimental",
        "summary": "How adjustment numbers are interpreted."
      },
      "fqn": "@aws-cdk/aws-applicationautoscaling.AdjustmentType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/step-scaling-action.ts",
        "line": 117
      },
      "members": [
        {
          "docs": {
            "remarks": "A positive number increases capacity, a negative number decreases capacity.",
            "stability": "experimental",
            "summary": "Add the adjustment number to the current capacity."
          },
          "name": "ChangeInCapacity"
        },
        {
          "docs": {
            "remarks": "The number must be between -100 and 100; a positive number increases\ncapacity and a negative number decreases it.",
            "stability": "experimental",
            "summary": "Add this percentage of the current capacity to itself."
          },
          "name": "PercentChangeInCapacity"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Make the capacity equal to the exact number given."
          },
          "name": "ExactCapacity"
        }
      ],
      "name": "AdjustmentType"
    },
    "@aws-cdk/aws-applicationautoscaling.BaseScalableAttribute": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-applicationautoscaling",
      "base": "@aws-cdk/cdk.Construct",
      "docs": {
        "remarks": "This class is basically a light wrapper around ScalableTarget, but with\nall methods protected instead of public so they can be selectively\nexposed and/or more specific versions of them can be exposed by derived\nclasses for individual services support autoscaling.\n\nTypical use cases:\n\n- Hide away the PredefinedMetric enum for target tracking policies.\n- Don't expose all scaling methods (for example Dynamo tables don't support\n   Step Scaling, so the Dynamo subclass won't expose this method).",
        "stability": "experimental",
        "summary": "Represent an attribute for which autoscaling can be configured."
      },
      "fqn": "@aws-cdk/aws-applicationautoscaling.BaseScalableAttribute",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-applicationautoscaling.BaseScalableAttributeProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/base-scalable-attribute.ts",
        "line": 46
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Scale out or in based on a metric value."
          },
          "locationInModule": {
            "filename": "lib/base-scalable-attribute.ts",
            "line": 72
          },
          "name": "doScaleOnMetric",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-applicationautoscaling.BasicStepScalingPolicyProps"
              }
            }
          ],
          "protected": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Scale out or in based on time."
          },
          "locationInModule": {
            "filename": "lib/base-scalable-attribute.ts",
            "line": 65
          },
          "name": "doScaleOnSchedule",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-applicationautoscaling.ScalingSchedule"
              }
            }
          ],
          "protected": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Scale out or in in order to keep a metric around a target value."
          },
          "locationInModule": {
            "filename": "lib/base-scalable-attribute.ts",
            "line": 79
          },
          "name": "doScaleToTrackMetric",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-applicationautoscaling.BasicTargetTrackingScalingPolicyProps"
              }
            }
          ],
          "protected": true
        }
      ],
      "name": "BaseScalableAttribute",
      "properties": [
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base-scalable-attribute.ts",
            "line": 49
          },
          "name": "props",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-applicationautoscaling.BaseScalableAttributeProps"
          }
        }
      ]
    },
    "@aws-cdk/aws-applicationautoscaling.BaseScalableAttributeProps": {
      "assembly": "@aws-cdk/aws-applicationautoscaling",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties for a ScalableTableAttribute."
      },
      "fqn": "@aws-cdk/aws-applicationautoscaling.BaseScalableAttributeProps",
      "interfaces": [
        "@aws-cdk/aws-applicationautoscaling.EnableScalingProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/base-scalable-attribute.ts",
        "line": 10
      },
      "name": "BaseScalableAttributeProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Scalable dimension of the attribute."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base-scalable-attribute.ts",
            "line": 24
          },
          "name": "dimension",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Resource ID of the attribute."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base-scalable-attribute.ts",
            "line": 19
          },
          "name": "resourceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Role to use for scaling."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base-scalable-attribute.ts",
            "line": 29
          },
          "name": "role",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Service namespace of the scalable attribute."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base-scalable-attribute.ts",
            "line": 14
          },
          "name": "serviceNamespace",
          "type": {
            "fqn": "@aws-cdk/aws-applicationautoscaling.ServiceNamespace"
          }
        }
      ]
    },
    "@aws-cdk/aws-applicationautoscaling.BaseTargetTrackingProps": {
      "assembly": "@aws-cdk/aws-applicationautoscaling",
      "datatype": true,
      "docs": {
        "remarks": "Contains the attributes that are common to target tracking policies,\nexcept the ones relating to the metric and to the scalable target.\n\nThis interface is reused by more specific target tracking props objects\nin other services.",
        "stability": "experimental",
        "summary": "Base interface for target tracking props."
      },
      "fqn": "@aws-cdk/aws-applicationautoscaling.BaseTargetTrackingProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/target-tracking-scaling-policy.ts",
        "line": 15
      },
      "name": "BaseTargetTrackingProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "If the value is true, scale in is disabled and the target tracking policy\nwon't remove capacity from the scalable resource. Otherwise, scale in is\nenabled and the target tracking policy can remove capacity from the\nscalable resource.",
            "stability": "experimental",
            "summary": "Indicates whether scale in by the target tracking policy is disabled."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/target-tracking-scaling-policy.ts",
            "line": 33
          },
          "name": "disableScaleIn",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Automatically generated name.",
            "stability": "experimental",
            "summary": "A name for the scaling policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/target-tracking-scaling-policy.ts",
            "line": 21
          },
          "name": "policyName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No scale in cooldown.",
            "stability": "experimental",
            "summary": "Period after a scale in activity completes before another scale in activity can start."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/target-tracking-scaling-policy.ts",
            "line": 40
          },
          "name": "scaleInCooldownSec",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No scale out cooldown.",
            "stability": "experimental",
            "summary": "Period after a scale out activity completes before another scale out activity can start."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/target-tracking-scaling-policy.ts",
            "line": 47
          },
          "name": "scaleOutCooldownSec",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-applicationautoscaling.BasicStepScalingPolicyProps": {
      "assembly": "@aws-cdk/aws-applicationautoscaling",
      "datatype": true,
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-applicationautoscaling.BasicStepScalingPolicyProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/step-scaling-policy.ts",
        "line": 7
      },
      "name": "BasicStepScalingPolicyProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Metric to scale on."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-policy.ts",
            "line": 11
          },
          "name": "metric",
          "type": {
            "fqn": "@aws-cdk/aws-cloudwatch.IMetric"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Maps a range of metric values to a particular scaling behavior.",
            "stability": "experimental",
            "summary": "The intervals for scaling."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-policy.ts",
            "line": 18
          },
          "name": "scalingSteps",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-applicationautoscaling.ScalingInterval"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "ChangeInCapacity",
            "stability": "experimental",
            "summary": "How the adjustment numbers inside 'intervals' are interpreted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-policy.ts",
            "line": 25
          },
          "name": "adjustmentType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-applicationautoscaling.AdjustmentType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No cooldown period",
            "remarks": "Subsequent scale outs during the cooldown period are squashed so that only\nthe biggest scale out happens.\n\nSubsequent scale ins during the cooldown period are ignored.",
            "see": "https://docs.aws.amazon.com/autoscaling/application/APIReference/API_StepScalingPolicyConfiguration.html",
            "stability": "experimental",
            "summary": "Grace period after scaling activity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-policy.ts",
            "line": 38
          },
          "name": "cooldownSec",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No minimum scaling effect",
            "remarks": "Only when using AdjustmentType = PercentChangeInCapacity, this number controls\nthe minimum absolute effect size.",
            "stability": "experimental",
            "summary": "Minimum absolute number to adjust capacity with as result of percentage scaling."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-policy.ts",
            "line": 48
          },
          "name": "minAdjustmentMagnitude",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-applicationautoscaling.BasicTargetTrackingScalingPolicyProps": {
      "assembly": "@aws-cdk/aws-applicationautoscaling",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties for a Target Tracking policy that include the metric but exclude the target."
      },
      "fqn": "@aws-cdk/aws-applicationautoscaling.BasicTargetTrackingScalingPolicyProps",
      "interfaces": [
        "@aws-cdk/aws-applicationautoscaling.BaseTargetTrackingProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/target-tracking-scaling-policy.ts",
        "line": 53
      },
      "name": "BasicTargetTrackingScalingPolicyProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The target value for the metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/target-tracking-scaling-policy.ts",
            "line": 57
          },
          "name": "targetValue",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No custom metric.",
            "remarks": "The metric must track utilization. Scaling out will happen if the metric is higher than\nthe target value, scaling in will happen in the metric is lower than the target value.\n\nExactly one of customMetric or predefinedMetric must be specified.",
            "stability": "experimental",
            "summary": "A custom metric for application autoscaling."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/target-tracking-scaling-policy.ts",
            "line": 92
          },
          "name": "customMetric",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudwatch.IMetric"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No predefined metrics.",
            "remarks": "The metric must track utilization. Scaling out will happen if the metric is higher than\nthe target value, scaling in will happen in the metric is lower than the target value.\n\nExactly one of customMetric or predefinedMetric must be specified.",
            "stability": "experimental",
            "summary": "A predefined metric for application autoscaling."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/target-tracking-scaling-policy.ts",
            "line": 69
          },
          "name": "predefinedMetric",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-applicationautoscaling.PredefinedMetric"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No resource label.",
            "example": "app/<load-balancer-name>/<load-balancer-id>/targetgroup/<target-group-name>/<target-group-id>",
            "remarks": "Only used for predefined metric ALBRequestCountPerTarget.",
            "stability": "experimental",
            "summary": "Identify the resource associated with the metric type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/target-tracking-scaling-policy.ts",
            "line": 80
          },
          "name": "resourceLabel",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-applicationautoscaling.CfnScalableTarget": {
      "assembly": "@aws-cdk/aws-applicationautoscaling",
      "base": "@aws-cdk/cdk.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::ApplicationAutoScaling::ScalableTarget"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalabletarget.html",
        "stability": "experimental",
        "summary": "A CloudFormation `AWS::ApplicationAutoScaling::ScalableTarget`."
      },
      "fqn": "@aws-cdk/aws-applicationautoscaling.CfnScalableTarget",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Create a new `AWS::ApplicationAutoScaling::ScalableTarget`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-applicationautoscaling.CfnScalableTargetProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/applicationautoscaling.generated.ts",
        "line": 113
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 197
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnScalableTarget",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 117
          },
          "name": "cfnResourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 186
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalabletarget.html#cfn-applicationautoscaling-scalabletarget-maxcapacity",
            "stability": "experimental",
            "summary": "`AWS::ApplicationAutoScaling::ScalableTarget.MaxCapacity`."
          },
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 123
          },
          "name": "maxCapacity",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalabletarget.html#cfn-applicationautoscaling-scalabletarget-mincapacity",
            "stability": "experimental",
            "summary": "`AWS::ApplicationAutoScaling::ScalableTarget.MinCapacity`."
          },
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 129
          },
          "name": "minCapacity",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalabletarget.html#cfn-applicationautoscaling-scalabletarget-resourceid",
            "stability": "experimental",
            "summary": "`AWS::ApplicationAutoScaling::ScalableTarget.ResourceId`."
          },
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 135
          },
          "name": "resourceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalabletarget.html#cfn-applicationautoscaling-scalabletarget-rolearn",
            "stability": "experimental",
            "summary": "`AWS::ApplicationAutoScaling::ScalableTarget.RoleARN`."
          },
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 141
          },
          "name": "roleArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalabletarget.html#cfn-applicationautoscaling-scalabletarget-scalabledimension",
            "stability": "experimental",
            "summary": "`AWS::ApplicationAutoScaling::ScalableTarget.ScalableDimension`."
          },
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 147
          },
          "name": "scalableDimension",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalabletarget.html#cfn-applicationautoscaling-scalabletarget-servicenamespace",
            "stability": "experimental",
            "summary": "`AWS::ApplicationAutoScaling::ScalableTarget.ServiceNamespace`."
          },
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 153
          },
          "name": "serviceNamespace",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalabletarget.html#cfn-applicationautoscaling-scalabletarget-scheduledactions",
            "stability": "experimental",
            "summary": "`AWS::ApplicationAutoScaling::ScalableTarget.ScheduledActions`."
          },
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 159
          },
          "name": "scheduledActions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/aws-applicationautoscaling.CfnScalableTarget.ScheduledActionProperty"
                          },
                          {
                            "fqn": "@aws-cdk/cdk.IResolvable"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-applicationautoscaling.CfnScalableTarget.ScalableTargetActionProperty": {
      "assembly": "@aws-cdk/aws-applicationautoscaling",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalabletarget-scalabletargetaction.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-applicationautoscaling.CfnScalableTarget.ScalableTargetActionProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/applicationautoscaling.generated.ts",
        "line": 206
      },
      "name": "ScalableTargetActionProperty",
      "namespace": "CfnScalableTarget",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalabletarget-scalabletargetaction.html#cfn-applicationautoscaling-scalabletarget-scalabletargetaction-maxcapacity",
            "stability": "experimental",
            "summary": "`CfnScalableTarget.ScalableTargetActionProperty.MaxCapacity`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 211
          },
          "name": "maxCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalabletarget-scalabletargetaction.html#cfn-applicationautoscaling-scalabletarget-scalabletargetaction-mincapacity",
            "stability": "experimental",
            "summary": "`CfnScalableTarget.ScalableTargetActionProperty.MinCapacity`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 216
          },
          "name": "minCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-applicationautoscaling.CfnScalableTarget.ScheduledActionProperty": {
      "assembly": "@aws-cdk/aws-applicationautoscaling",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalabletarget-scheduledaction.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-applicationautoscaling.CfnScalableTarget.ScheduledActionProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/applicationautoscaling.generated.ts",
        "line": 256
      },
      "name": "ScheduledActionProperty",
      "namespace": "CfnScalableTarget",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalabletarget-scheduledaction.html#cfn-applicationautoscaling-scalabletarget-scheduledaction-schedule",
            "stability": "experimental",
            "summary": "`CfnScalableTarget.ScheduledActionProperty.Schedule`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 271
          },
          "name": "schedule",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalabletarget-scheduledaction.html#cfn-applicationautoscaling-scalabletarget-scheduledaction-scheduledactionname",
            "stability": "experimental",
            "summary": "`CfnScalableTarget.ScheduledActionProperty.ScheduledActionName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 276
          },
          "name": "scheduledActionName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalabletarget-scheduledaction.html#cfn-applicationautoscaling-scalabletarget-scheduledaction-endtime",
            "stability": "experimental",
            "summary": "`CfnScalableTarget.ScheduledActionProperty.EndTime`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 261
          },
          "name": "endTime",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "primitive": "date"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalabletarget-scheduledaction.html#cfn-applicationautoscaling-scalabletarget-scheduledaction-scalabletargetaction",
            "stability": "experimental",
            "summary": "`CfnScalableTarget.ScheduledActionProperty.ScalableTargetAction`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 266
          },
          "name": "scalableTargetAction",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-applicationautoscaling.CfnScalableTarget.ScalableTargetActionProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalabletarget-scheduledaction.html#cfn-applicationautoscaling-scalabletarget-scheduledaction-starttime",
            "stability": "experimental",
            "summary": "`CfnScalableTarget.ScheduledActionProperty.StartTime`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 281
          },
          "name": "startTime",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "primitive": "date"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-applicationautoscaling.CfnScalableTargetProps": {
      "assembly": "@aws-cdk/aws-applicationautoscaling",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalabletarget.html",
        "stability": "experimental",
        "summary": "Properties for defining a `AWS::ApplicationAutoScaling::ScalableTarget`."
      },
      "fqn": "@aws-cdk/aws-applicationautoscaling.CfnScalableTargetProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/applicationautoscaling.generated.ts",
        "line": 14
      },
      "name": "CfnScalableTargetProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalabletarget.html#cfn-applicationautoscaling-scalabletarget-maxcapacity",
            "stability": "experimental",
            "summary": "`AWS::ApplicationAutoScaling::ScalableTarget.MaxCapacity`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 20
          },
          "name": "maxCapacity",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalabletarget.html#cfn-applicationautoscaling-scalabletarget-mincapacity",
            "stability": "experimental",
            "summary": "`AWS::ApplicationAutoScaling::ScalableTarget.MinCapacity`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 26
          },
          "name": "minCapacity",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalabletarget.html#cfn-applicationautoscaling-scalabletarget-resourceid",
            "stability": "experimental",
            "summary": "`AWS::ApplicationAutoScaling::ScalableTarget.ResourceId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 32
          },
          "name": "resourceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalabletarget.html#cfn-applicationautoscaling-scalabletarget-rolearn",
            "stability": "experimental",
            "summary": "`AWS::ApplicationAutoScaling::ScalableTarget.RoleARN`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 38
          },
          "name": "roleArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalabletarget.html#cfn-applicationautoscaling-scalabletarget-scalabledimension",
            "stability": "experimental",
            "summary": "`AWS::ApplicationAutoScaling::ScalableTarget.ScalableDimension`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 44
          },
          "name": "scalableDimension",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalabletarget.html#cfn-applicationautoscaling-scalabletarget-servicenamespace",
            "stability": "experimental",
            "summary": "`AWS::ApplicationAutoScaling::ScalableTarget.ServiceNamespace`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 50
          },
          "name": "serviceNamespace",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalabletarget.html#cfn-applicationautoscaling-scalabletarget-scheduledactions",
            "stability": "experimental",
            "summary": "`AWS::ApplicationAutoScaling::ScalableTarget.ScheduledActions`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 56
          },
          "name": "scheduledActions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/aws-applicationautoscaling.CfnScalableTarget.ScheduledActionProperty"
                          },
                          {
                            "fqn": "@aws-cdk/cdk.IResolvable"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-applicationautoscaling.CfnScalingPolicy": {
      "assembly": "@aws-cdk/aws-applicationautoscaling",
      "base": "@aws-cdk/cdk.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::ApplicationAutoScaling::ScalingPolicy"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalingpolicy.html",
        "stability": "experimental",
        "summary": "A CloudFormation `AWS::ApplicationAutoScaling::ScalingPolicy`."
      },
      "fqn": "@aws-cdk/aws-applicationautoscaling.CfnScalingPolicy",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Create a new `AWS::ApplicationAutoScaling::ScalingPolicy`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-applicationautoscaling.CfnScalingPolicyProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/applicationautoscaling.generated.ts",
        "line": 432
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 520
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnScalingPolicy",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 436
          },
          "name": "cfnResourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 508
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalingpolicy.html#cfn-applicationautoscaling-scalingpolicy-policyname",
            "stability": "experimental",
            "summary": "`AWS::ApplicationAutoScaling::ScalingPolicy.PolicyName`."
          },
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 442
          },
          "name": "policyName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalingpolicy.html#cfn-applicationautoscaling-scalingpolicy-policytype",
            "stability": "experimental",
            "summary": "`AWS::ApplicationAutoScaling::ScalingPolicy.PolicyType`."
          },
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 448
          },
          "name": "policyType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalingpolicy.html#cfn-applicationautoscaling-scalingpolicy-resourceid",
            "stability": "experimental",
            "summary": "`AWS::ApplicationAutoScaling::ScalingPolicy.ResourceId`."
          },
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 454
          },
          "name": "resourceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalingpolicy.html#cfn-applicationautoscaling-scalingpolicy-scalabledimension",
            "stability": "experimental",
            "summary": "`AWS::ApplicationAutoScaling::ScalingPolicy.ScalableDimension`."
          },
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 460
          },
          "name": "scalableDimension",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalingpolicy.html#cfn-applicationautoscaling-scalingpolicy-scalingtargetid",
            "stability": "experimental",
            "summary": "`AWS::ApplicationAutoScaling::ScalingPolicy.ScalingTargetId`."
          },
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 466
          },
          "name": "scalingTargetId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalingpolicy.html#cfn-applicationautoscaling-scalingpolicy-servicenamespace",
            "stability": "experimental",
            "summary": "`AWS::ApplicationAutoScaling::ScalingPolicy.ServiceNamespace`."
          },
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 472
          },
          "name": "serviceNamespace",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalingpolicy.html#cfn-applicationautoscaling-scalingpolicy-stepscalingpolicyconfiguration",
            "stability": "experimental",
            "summary": "`AWS::ApplicationAutoScaling::ScalingPolicy.StepScalingPolicyConfiguration`."
          },
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 478
          },
          "name": "stepScalingPolicyConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-applicationautoscaling.CfnScalingPolicy.StepScalingPolicyConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalingpolicy.html#cfn-applicationautoscaling-scalingpolicy-targettrackingscalingpolicyconfiguration",
            "stability": "experimental",
            "summary": "`AWS::ApplicationAutoScaling::ScalingPolicy.TargetTrackingScalingPolicyConfiguration`."
          },
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 484
          },
          "name": "targetTrackingScalingPolicyConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-applicationautoscaling.CfnScalingPolicy.TargetTrackingScalingPolicyConfigurationProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-applicationautoscaling.CfnScalingPolicy.CustomizedMetricSpecificationProperty": {
      "assembly": "@aws-cdk/aws-applicationautoscaling",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-customizedmetricspecification.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-applicationautoscaling.CfnScalingPolicy.CustomizedMetricSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/applicationautoscaling.generated.ts",
        "line": 529
      },
      "name": "CustomizedMetricSpecificationProperty",
      "namespace": "CfnScalingPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-customizedmetricspecification.html#cfn-applicationautoscaling-scalingpolicy-customizedmetricspecification-metricname",
            "stability": "experimental",
            "summary": "`CfnScalingPolicy.CustomizedMetricSpecificationProperty.MetricName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 539
          },
          "name": "metricName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-customizedmetricspecification.html#cfn-applicationautoscaling-scalingpolicy-customizedmetricspecification-namespace",
            "stability": "experimental",
            "summary": "`CfnScalingPolicy.CustomizedMetricSpecificationProperty.Namespace`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 544
          },
          "name": "namespace",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-customizedmetricspecification.html#cfn-applicationautoscaling-scalingpolicy-customizedmetricspecification-statistic",
            "stability": "experimental",
            "summary": "`CfnScalingPolicy.CustomizedMetricSpecificationProperty.Statistic`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 549
          },
          "name": "statistic",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-customizedmetricspecification.html#cfn-applicationautoscaling-scalingpolicy-customizedmetricspecification-dimensions",
            "stability": "experimental",
            "summary": "`CfnScalingPolicy.CustomizedMetricSpecificationProperty.Dimensions`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 534
          },
          "name": "dimensions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-applicationautoscaling.CfnScalingPolicy.MetricDimensionProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-customizedmetricspecification.html#cfn-applicationautoscaling-scalingpolicy-customizedmetricspecification-unit",
            "stability": "experimental",
            "summary": "`CfnScalingPolicy.CustomizedMetricSpecificationProperty.Unit`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 554
          },
          "name": "unit",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-applicationautoscaling.CfnScalingPolicy.MetricDimensionProperty": {
      "assembly": "@aws-cdk/aws-applicationautoscaling",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-metricdimension.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-applicationautoscaling.CfnScalingPolicy.MetricDimensionProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/applicationautoscaling.generated.ts",
        "line": 603
      },
      "name": "MetricDimensionProperty",
      "namespace": "CfnScalingPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-metricdimension.html#cfn-applicationautoscaling-scalingpolicy-metricdimension-name",
            "stability": "experimental",
            "summary": "`CfnScalingPolicy.MetricDimensionProperty.Name`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 608
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-metricdimension.html#cfn-applicationautoscaling-scalingpolicy-metricdimension-value",
            "stability": "experimental",
            "summary": "`CfnScalingPolicy.MetricDimensionProperty.Value`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 613
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-applicationautoscaling.CfnScalingPolicy.PredefinedMetricSpecificationProperty": {
      "assembly": "@aws-cdk/aws-applicationautoscaling",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-predefinedmetricspecification.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-applicationautoscaling.CfnScalingPolicy.PredefinedMetricSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/applicationautoscaling.generated.ts",
        "line": 655
      },
      "name": "PredefinedMetricSpecificationProperty",
      "namespace": "CfnScalingPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-predefinedmetricspecification.html#cfn-applicationautoscaling-scalingpolicy-predefinedmetricspecification-predefinedmetrictype",
            "stability": "experimental",
            "summary": "`CfnScalingPolicy.PredefinedMetricSpecificationProperty.PredefinedMetricType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 660
          },
          "name": "predefinedMetricType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-predefinedmetricspecification.html#cfn-applicationautoscaling-scalingpolicy-predefinedmetricspecification-resourcelabel",
            "stability": "experimental",
            "summary": "`CfnScalingPolicy.PredefinedMetricSpecificationProperty.ResourceLabel`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 665
          },
          "name": "resourceLabel",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-applicationautoscaling.CfnScalingPolicy.StepAdjustmentProperty": {
      "assembly": "@aws-cdk/aws-applicationautoscaling",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-stepscalingpolicyconfiguration-stepadjustment.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-applicationautoscaling.CfnScalingPolicy.StepAdjustmentProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/applicationautoscaling.generated.ts",
        "line": 706
      },
      "name": "StepAdjustmentProperty",
      "namespace": "CfnScalingPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-stepscalingpolicyconfiguration-stepadjustment.html#cfn-applicationautoscaling-scalingpolicy-stepscalingpolicyconfiguration-stepadjustment-scalingadjustment",
            "stability": "experimental",
            "summary": "`CfnScalingPolicy.StepAdjustmentProperty.ScalingAdjustment`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 721
          },
          "name": "scalingAdjustment",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-stepscalingpolicyconfiguration-stepadjustment.html#cfn-applicationautoscaling-scalingpolicy-stepscalingpolicyconfiguration-stepadjustment-metricintervallowerbound",
            "stability": "experimental",
            "summary": "`CfnScalingPolicy.StepAdjustmentProperty.MetricIntervalLowerBound`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 711
          },
          "name": "metricIntervalLowerBound",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-stepscalingpolicyconfiguration-stepadjustment.html#cfn-applicationautoscaling-scalingpolicy-stepscalingpolicyconfiguration-stepadjustment-metricintervalupperbound",
            "stability": "experimental",
            "summary": "`CfnScalingPolicy.StepAdjustmentProperty.MetricIntervalUpperBound`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 716
          },
          "name": "metricIntervalUpperBound",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-applicationautoscaling.CfnScalingPolicy.StepScalingPolicyConfigurationProperty": {
      "assembly": "@aws-cdk/aws-applicationautoscaling",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-stepscalingpolicyconfiguration.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-applicationautoscaling.CfnScalingPolicy.StepScalingPolicyConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/applicationautoscaling.generated.ts",
        "line": 764
      },
      "name": "StepScalingPolicyConfigurationProperty",
      "namespace": "CfnScalingPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-stepscalingpolicyconfiguration.html#cfn-applicationautoscaling-scalingpolicy-stepscalingpolicyconfiguration-adjustmenttype",
            "stability": "experimental",
            "summary": "`CfnScalingPolicy.StepScalingPolicyConfigurationProperty.AdjustmentType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 769
          },
          "name": "adjustmentType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-stepscalingpolicyconfiguration.html#cfn-applicationautoscaling-scalingpolicy-stepscalingpolicyconfiguration-cooldown",
            "stability": "experimental",
            "summary": "`CfnScalingPolicy.StepScalingPolicyConfigurationProperty.Cooldown`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 774
          },
          "name": "cooldown",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-stepscalingpolicyconfiguration.html#cfn-applicationautoscaling-scalingpolicy-stepscalingpolicyconfiguration-metricaggregationtype",
            "stability": "experimental",
            "summary": "`CfnScalingPolicy.StepScalingPolicyConfigurationProperty.MetricAggregationType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 779
          },
          "name": "metricAggregationType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-stepscalingpolicyconfiguration.html#cfn-applicationautoscaling-scalingpolicy-stepscalingpolicyconfiguration-minadjustmentmagnitude",
            "stability": "experimental",
            "summary": "`CfnScalingPolicy.StepScalingPolicyConfigurationProperty.MinAdjustmentMagnitude`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 784
          },
          "name": "minAdjustmentMagnitude",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-stepscalingpolicyconfiguration.html#cfn-applicationautoscaling-scalingpolicy-stepscalingpolicyconfiguration-stepadjustments",
            "stability": "experimental",
            "summary": "`CfnScalingPolicy.StepScalingPolicyConfigurationProperty.StepAdjustments`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 789
          },
          "name": "stepAdjustments",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-applicationautoscaling.CfnScalingPolicy.StepAdjustmentProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-applicationautoscaling.CfnScalingPolicy.TargetTrackingScalingPolicyConfigurationProperty": {
      "assembly": "@aws-cdk/aws-applicationautoscaling",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-targettrackingscalingpolicyconfiguration.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-applicationautoscaling.CfnScalingPolicy.TargetTrackingScalingPolicyConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/applicationautoscaling.generated.ts",
        "line": 835
      },
      "name": "TargetTrackingScalingPolicyConfigurationProperty",
      "namespace": "CfnScalingPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-targettrackingscalingpolicyconfiguration.html#cfn-applicationautoscaling-scalingpolicy-targettrackingscalingpolicyconfiguration-targetvalue",
            "stability": "experimental",
            "summary": "`CfnScalingPolicy.TargetTrackingScalingPolicyConfigurationProperty.TargetValue`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 865
          },
          "name": "targetValue",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-targettrackingscalingpolicyconfiguration.html#cfn-applicationautoscaling-scalingpolicy-targettrackingscalingpolicyconfiguration-customizedmetricspecification",
            "stability": "experimental",
            "summary": "`CfnScalingPolicy.TargetTrackingScalingPolicyConfigurationProperty.CustomizedMetricSpecification`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 840
          },
          "name": "customizedMetricSpecification",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-applicationautoscaling.CfnScalingPolicy.CustomizedMetricSpecificationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-targettrackingscalingpolicyconfiguration.html#cfn-applicationautoscaling-scalingpolicy-targettrackingscalingpolicyconfiguration-disablescalein",
            "stability": "experimental",
            "summary": "`CfnScalingPolicy.TargetTrackingScalingPolicyConfigurationProperty.DisableScaleIn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 845
          },
          "name": "disableScaleIn",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-targettrackingscalingpolicyconfiguration.html#cfn-applicationautoscaling-scalingpolicy-targettrackingscalingpolicyconfiguration-predefinedmetricspecification",
            "stability": "experimental",
            "summary": "`CfnScalingPolicy.TargetTrackingScalingPolicyConfigurationProperty.PredefinedMetricSpecification`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 850
          },
          "name": "predefinedMetricSpecification",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-applicationautoscaling.CfnScalingPolicy.PredefinedMetricSpecificationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-targettrackingscalingpolicyconfiguration.html#cfn-applicationautoscaling-scalingpolicy-targettrackingscalingpolicyconfiguration-scaleincooldown",
            "stability": "experimental",
            "summary": "`CfnScalingPolicy.TargetTrackingScalingPolicyConfigurationProperty.ScaleInCooldown`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 855
          },
          "name": "scaleInCooldown",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-targettrackingscalingpolicyconfiguration.html#cfn-applicationautoscaling-scalingpolicy-targettrackingscalingpolicyconfiguration-scaleoutcooldown",
            "stability": "experimental",
            "summary": "`CfnScalingPolicy.TargetTrackingScalingPolicyConfigurationProperty.ScaleOutCooldown`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 860
          },
          "name": "scaleOutCooldown",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-applicationautoscaling.CfnScalingPolicyProps": {
      "assembly": "@aws-cdk/aws-applicationautoscaling",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalingpolicy.html",
        "stability": "experimental",
        "summary": "Properties for defining a `AWS::ApplicationAutoScaling::ScalingPolicy`."
      },
      "fqn": "@aws-cdk/aws-applicationautoscaling.CfnScalingPolicyProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/applicationautoscaling.generated.ts",
        "line": 329
      },
      "name": "CfnScalingPolicyProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalingpolicy.html#cfn-applicationautoscaling-scalingpolicy-policyname",
            "stability": "experimental",
            "summary": "`AWS::ApplicationAutoScaling::ScalingPolicy.PolicyName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 335
          },
          "name": "policyName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalingpolicy.html#cfn-applicationautoscaling-scalingpolicy-policytype",
            "stability": "experimental",
            "summary": "`AWS::ApplicationAutoScaling::ScalingPolicy.PolicyType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 341
          },
          "name": "policyType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalingpolicy.html#cfn-applicationautoscaling-scalingpolicy-resourceid",
            "stability": "experimental",
            "summary": "`AWS::ApplicationAutoScaling::ScalingPolicy.ResourceId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 347
          },
          "name": "resourceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalingpolicy.html#cfn-applicationautoscaling-scalingpolicy-scalabledimension",
            "stability": "experimental",
            "summary": "`AWS::ApplicationAutoScaling::ScalingPolicy.ScalableDimension`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 353
          },
          "name": "scalableDimension",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalingpolicy.html#cfn-applicationautoscaling-scalingpolicy-scalingtargetid",
            "stability": "experimental",
            "summary": "`AWS::ApplicationAutoScaling::ScalingPolicy.ScalingTargetId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 359
          },
          "name": "scalingTargetId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalingpolicy.html#cfn-applicationautoscaling-scalingpolicy-servicenamespace",
            "stability": "experimental",
            "summary": "`AWS::ApplicationAutoScaling::ScalingPolicy.ServiceNamespace`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 365
          },
          "name": "serviceNamespace",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalingpolicy.html#cfn-applicationautoscaling-scalingpolicy-stepscalingpolicyconfiguration",
            "stability": "experimental",
            "summary": "`AWS::ApplicationAutoScaling::ScalingPolicy.StepScalingPolicyConfiguration`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 371
          },
          "name": "stepScalingPolicyConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-applicationautoscaling.CfnScalingPolicy.StepScalingPolicyConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalingpolicy.html#cfn-applicationautoscaling-scalingpolicy-targettrackingscalingpolicyconfiguration",
            "stability": "experimental",
            "summary": "`AWS::ApplicationAutoScaling::ScalingPolicy.TargetTrackingScalingPolicyConfiguration`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/applicationautoscaling.generated.ts",
            "line": 377
          },
          "name": "targetTrackingScalingPolicyConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-applicationautoscaling.CfnScalingPolicy.TargetTrackingScalingPolicyConfigurationProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-applicationautoscaling.CronOptions": {
      "assembly": "@aws-cdk/aws-applicationautoscaling",
      "datatype": true,
      "docs": {
        "remarks": "All fields are strings so you can use complex expresions. Absence of\na field implies '*' or '?', whichever one is appropriate.",
        "see": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html#CronExpressions",
        "stability": "experimental",
        "summary": "Options to configure a cron expression."
      },
      "fqn": "@aws-cdk/aws-applicationautoscaling.CronOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/schedule.ts",
        "line": 87
      },
      "name": "CronOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- Every day of the month",
            "stability": "experimental",
            "summary": "The day of the month to run this rule at."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schedule.ts",
            "line": 107
          },
          "name": "day",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Every hour",
            "stability": "experimental",
            "summary": "The hour to run this rule at."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schedule.ts",
            "line": 100
          },
          "name": "hour",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Every minute",
            "stability": "experimental",
            "summary": "The minute to run this rule at."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schedule.ts",
            "line": 93
          },
          "name": "minute",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Every month",
            "stability": "experimental",
            "summary": "The month to run this rule at."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schedule.ts",
            "line": 114
          },
          "name": "month",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Any day of the week",
            "stability": "experimental",
            "summary": "The day of the week to run this rule at."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schedule.ts",
            "line": 128
          },
          "name": "weekDay",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Every year",
            "stability": "experimental",
            "summary": "The year to run this rule at."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schedule.ts",
            "line": 121
          },
          "name": "year",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-applicationautoscaling.EnableScalingProps": {
      "assembly": "@aws-cdk/aws-applicationautoscaling",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties for enabling DynamoDB capacity scaling."
      },
      "fqn": "@aws-cdk/aws-applicationautoscaling.EnableScalingProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/base-scalable-attribute.ts",
        "line": 87
      },
      "name": "EnableScalingProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Maximum capacity to scale to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base-scalable-attribute.ts",
            "line": 98
          },
          "name": "maxCapacity",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "1",
            "stability": "experimental",
            "summary": "Minimum capacity to scale to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base-scalable-attribute.ts",
            "line": 93
          },
          "name": "minCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-applicationautoscaling.IScalableTarget": {
      "assembly": "@aws-cdk/aws-applicationautoscaling",
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-applicationautoscaling.IScalableTarget",
      "interfaces": [
        "@aws-cdk/cdk.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/scalable-target.ts",
        "line": 8
      },
      "name": "IScalableTarget",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/scalable-target.ts",
            "line": 12
          },
          "name": "scalableTargetId",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-applicationautoscaling.MetricAggregationType": {
      "assembly": "@aws-cdk/aws-applicationautoscaling",
      "docs": {
        "stability": "experimental",
        "summary": "How the scaling metric is going to be aggregated."
      },
      "fqn": "@aws-cdk/aws-applicationautoscaling.MetricAggregationType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/step-scaling-action.ts",
        "line": 142
      },
      "members": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Average."
          },
          "name": "Average"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Minimum."
          },
          "name": "Minimum"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Maximum."
          },
          "name": "Maximum"
        }
      ],
      "name": "MetricAggregationType"
    },
    "@aws-cdk/aws-applicationautoscaling.PredefinedMetric": {
      "assembly": "@aws-cdk/aws-applicationautoscaling",
      "docs": {
        "stability": "experimental",
        "summary": "One of the predefined autoscaling metrics."
      },
      "fqn": "@aws-cdk/aws-applicationautoscaling.PredefinedMetric",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/target-tracking-scaling-policy.ts",
        "line": 168
      },
      "members": [
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "DynamoDBReadCapacityUtilization"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "DynamoDBWriteCapacityUtilization"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "ALBRequestCountPerTarget"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "RDSReaderAverageCPUUtilization"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "RDSReaderAverageDatabaseConnections"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "EC2SpotFleetRequestAverageCPUUtilization"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "EC2SpotFleetRequestAverageNetworkIn"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "EC2SpotFleetRequestAverageNetworkOut"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "SageMakerVariantInvocationsPerInstance"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "ECSServiceAverageCPUUtilization"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "ECSServiceAverageMemoryUtilization"
        }
      ],
      "name": "PredefinedMetric"
    },
    "@aws-cdk/aws-applicationautoscaling.ScalableTarget": {
      "assembly": "@aws-cdk/aws-applicationautoscaling",
      "base": "@aws-cdk/cdk.Resource",
      "docs": {
        "stability": "experimental",
        "summary": "Define a scalable target."
      },
      "fqn": "@aws-cdk/aws-applicationautoscaling.ScalableTarget",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-applicationautoscaling.ScalableTargetProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-applicationautoscaling.IScalableTarget"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/scalable-target.ts",
        "line": 72
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/scalable-target.ts",
            "line": 74
          },
          "name": "fromScalableTargetId",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/cdk.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "scalableTargetId",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-applicationautoscaling.IScalableTarget"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Add a policy statement to the role's policy."
          },
          "locationInModule": {
            "filename": "lib/scalable-target.ts",
            "line": 129
          },
          "name": "addToRolePolicy",
          "parameters": [
            {
              "name": "statement",
              "type": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Scale out or in, in response to a metric."
          },
          "locationInModule": {
            "filename": "lib/scalable-target.ts",
            "line": 155
          },
          "name": "scaleOnMetric",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-applicationautoscaling.BasicStepScalingPolicyProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-applicationautoscaling.StepScalingPolicy"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Scale out or in based on time."
          },
          "locationInModule": {
            "filename": "lib/scalable-target.ts",
            "line": 136
          },
          "name": "scaleOnSchedule",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "action",
              "type": {
                "fqn": "@aws-cdk/aws-applicationautoscaling.ScalingSchedule"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Scale out or in in order to keep a metric around a target value."
          },
          "locationInModule": {
            "filename": "lib/scalable-target.ts",
            "line": 162
          },
          "name": "scaleToTrackMetric",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-applicationautoscaling.BasicTargetTrackingScalingPolicyProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-applicationautoscaling.TargetTrackingScalingPolicy"
            }
          }
        }
      ],
      "name": "ScalableTarget",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "The role used to give AutoScaling permissions to your resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/scalable-target.ts",
            "line": 92
          },
          "name": "role",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "example": "service/ecsStack-MyECSCluster-AB12CDE3F4GH/ecsStack-MyECSService-AB12CDE3F4GH|ecs:service:DesiredCount|ecs",
            "stability": "experimental",
            "summary": "ID of the Scalable Target."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/scalable-target.ts",
            "line": 87
          },
          "name": "scalableTargetId",
          "overrides": "@aws-cdk/aws-applicationautoscaling.IScalableTarget",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-applicationautoscaling.ScalableTargetProps": {
      "assembly": "@aws-cdk/aws-applicationautoscaling",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties for a scalable target."
      },
      "fqn": "@aws-cdk/aws-applicationautoscaling.ScalableTargetProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/scalable-target.ts",
        "line": 18
      },
      "name": "ScalableTargetProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The maximum value that Application Auto Scaling can use to scale a target during a scaling activity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/scalable-target.ts",
            "line": 27
          },
          "name": "maxCapacity",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The minimum value that Application Auto Scaling can use to scale a target during a scaling activity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/scalable-target.ts",
            "line": 22
          },
          "name": "minCapacity",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "example": "service/ecsStack-MyECSCluster-AB12CDE3F4GH/ecsStack-MyECSService-AB12CDE3F4GH",
            "remarks": "This string consists of the resource type and unique identifier.",
            "see": "https://docs.aws.amazon.com/autoscaling/application/APIReference/API_RegisterScalableTarget.html",
            "stability": "experimental",
            "summary": "The resource identifier to associate with this scalable target."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/scalable-target.ts",
            "line": 44
          },
          "name": "resourceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "example": "ecs:service:DesiredCount",
            "remarks": "Specify the service namespace, resource type, and scaling property.",
            "see": "https://docs.aws.amazon.com/autoscaling/application/APIReference/API_ScalingPolicy.html",
            "stability": "experimental",
            "summary": "The scalable dimension that's associated with the scalable target."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/scalable-target.ts",
            "line": 54
          },
          "name": "scalableDimension",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "For valid AWS service namespace values, see the RegisterScalableTarget\naction in the Application Auto Scaling API Reference.",
            "see": "https://docs.aws.amazon.com/autoscaling/application/APIReference/API_RegisterScalableTarget.html",
            "stability": "experimental",
            "summary": "The namespace of the AWS service that provides the resource or custom-resource for a resource provided by your own application or service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/scalable-target.ts",
            "line": 66
          },
          "name": "serviceNamespace",
          "type": {
            "fqn": "@aws-cdk/aws-applicationautoscaling.ServiceNamespace"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "A role is automatically created",
            "stability": "experimental",
            "summary": "Role that allows Application Auto Scaling to modify your scalable target."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/scalable-target.ts",
            "line": 34
          },
          "name": "role",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        }
      ]
    },
    "@aws-cdk/aws-applicationautoscaling.ScalingInterval": {
      "assembly": "@aws-cdk/aws-applicationautoscaling",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "A range of metric values in which to apply a certain scaling operation."
      },
      "fqn": "@aws-cdk/aws-applicationautoscaling.ScalingInterval",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/step-scaling-policy.ts",
        "line": 149
      },
      "name": "ScalingInterval",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "The number is interpreted differently based on AdjustmentType:\n\n- ChangeInCapacity: add the adjustment to the current capacity.\n  The number can be positive or negative.\n- PercentChangeInCapacity: add or remove the given percentage of the current\n   capacity to itself. The number can be in the range [-100..100].\n- ExactCapacity: set the capacity to this number. The number must\n   be positive.",
            "stability": "experimental",
            "summary": "The capacity adjustment to apply in this interval."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-policy.ts",
            "line": 180
          },
          "name": "change",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Threshold automatically derived from neighbouring intervals",
            "remarks": "The scaling adjustment will be applied if the metric is higher than this value.",
            "stability": "experimental",
            "summary": "The lower bound of the interval."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-policy.ts",
            "line": 157
          },
          "name": "lower",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Threshold automatically derived from neighbouring intervals",
            "remarks": "The scaling adjustment will be applied if the metric is lower than this value.",
            "stability": "experimental",
            "summary": "The upper bound of the interval."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-policy.ts",
            "line": 166
          },
          "name": "upper",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-applicationautoscaling.ScalingSchedule": {
      "assembly": "@aws-cdk/aws-applicationautoscaling",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "A scheduled scaling action."
      },
      "fqn": "@aws-cdk/aws-applicationautoscaling.ScalingSchedule",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/scalable-target.ts",
        "line": 170
      },
      "name": "ScalingSchedule",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "When to perform this action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/scalable-target.ts",
            "line": 174
          },
          "name": "schedule",
          "type": {
            "fqn": "@aws-cdk/aws-applicationautoscaling.Schedule"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "The rule never expires.",
            "stability": "experimental",
            "summary": "When this scheduled action expires."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/scalable-target.ts",
            "line": 188
          },
          "name": "endTime",
          "optional": true,
          "type": {
            "primitive": "date"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No new maximum capacity",
            "remarks": "During the scheduled time, the current capacity is above the maximum\ncapacity, Application Auto Scaling scales in to the maximum capacity.\n\nAt least one of maxCapacity and minCapacity must be supplied.",
            "stability": "experimental",
            "summary": "The new maximum capacity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/scalable-target.ts",
            "line": 212
          },
          "name": "maxCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No new minimum capacity",
            "remarks": "During the scheduled time, if the current capacity is below the minimum\ncapacity, Application Auto Scaling scales out to the minimum capacity.\n\nAt least one of maxCapacity and minCapacity must be supplied.",
            "stability": "experimental",
            "summary": "The new minimum capacity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/scalable-target.ts",
            "line": 200
          },
          "name": "minCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "The rule is activate immediately",
            "stability": "experimental",
            "summary": "When this scheduled action becomes active."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/scalable-target.ts",
            "line": 181
          },
          "name": "startTime",
          "optional": true,
          "type": {
            "primitive": "date"
          }
        }
      ]
    },
    "@aws-cdk/aws-applicationautoscaling.Schedule": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-applicationautoscaling",
      "docs": {
        "stability": "experimental",
        "summary": "Schedule for scheduled scaling actions."
      },
      "fqn": "@aws-cdk/aws-applicationautoscaling.Schedule",
      "initializer": {
        "docs": {
          "stability": "experimental"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/schedule.ts",
        "line": 4
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Construct a Schedule from a moment in time."
          },
          "locationInModule": {
            "filename": "lib/schedule.ts",
            "line": 26
          },
          "name": "at",
          "parameters": [
            {
              "name": "moment",
              "type": {
                "primitive": "date"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-applicationautoscaling.Schedule"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Create a schedule from a set of cron fields."
          },
          "locationInModule": {
            "filename": "lib/schedule.ts",
            "line": 33
          },
          "name": "cron",
          "parameters": [
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-applicationautoscaling.CronOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-applicationautoscaling.Schedule"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Construct a schedule from a literal schedule expression."
          },
          "locationInModule": {
            "filename": "lib/schedule.ts",
            "line": 10
          },
          "name": "expression",
          "parameters": [
            {
              "docs": {
                "remarks": "Must be in a format that Application AutoScaling will recognize",
                "summary": "The expression to use."
              },
              "name": "expression",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-applicationautoscaling.Schedule"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Construct a schedule from an interval and a time unit."
          },
          "locationInModule": {
            "filename": "lib/schedule.ts",
            "line": 17
          },
          "name": "rate",
          "parameters": [
            {
              "name": "interval",
              "type": {
                "primitive": "number"
              }
            },
            {
              "name": "unit",
              "type": {
                "fqn": "@aws-cdk/aws-applicationautoscaling.TimeUnit"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-applicationautoscaling.Schedule"
            }
          },
          "static": true
        }
      ],
      "name": "Schedule",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Retrieve the expression for this schedule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schedule.ts",
            "line": 53
          },
          "name": "expressionString",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-applicationautoscaling.ServiceNamespace": {
      "assembly": "@aws-cdk/aws-applicationautoscaling",
      "docs": {
        "stability": "experimental",
        "summary": "The service that supports Application AutoScaling."
      },
      "fqn": "@aws-cdk/aws-applicationautoscaling.ServiceNamespace",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/scalable-target.ts",
        "line": 218
      },
      "members": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Elastic Container Service."
          },
          "name": "Ecs"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Elastic Map Reduce."
          },
          "name": "ElasticMapReduce"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Elastic Compute Cloud."
          },
          "name": "Ec2"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "App Stream."
          },
          "name": "AppStream"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Dynamo DB."
          },
          "name": "DynamoDb"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Relational Database Service."
          },
          "name": "Rds"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "SageMaker."
          },
          "name": "SageMaker"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Custom Resource."
          },
          "name": "CustomResource"
        }
      ],
      "name": "ServiceNamespace"
    },
    "@aws-cdk/aws-applicationautoscaling.StepScalingAction": {
      "assembly": "@aws-cdk/aws-applicationautoscaling",
      "base": "@aws-cdk/cdk.Construct",
      "docs": {
        "remarks": "This kind of scaling policy adjusts the target capacity in configurable\nsteps. The size of the step is configurable based on the metric's distance\nto its alarm threshold.\n\nThis Action must be used as the target of a CloudWatch alarm to take effect.",
        "stability": "experimental",
        "summary": "Define a step scaling action."
      },
      "fqn": "@aws-cdk/aws-applicationautoscaling.StepScalingAction",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-applicationautoscaling.StepScalingActionProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/step-scaling-action.ts",
        "line": 69
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Add an adjusment interval to the ScalingAction."
          },
          "locationInModule": {
            "filename": "lib/step-scaling-action.ts",
            "line": 102
          },
          "name": "addAdjustment",
          "parameters": [
            {
              "name": "adjustment",
              "type": {
                "fqn": "@aws-cdk/aws-applicationautoscaling.AdjustmentTier"
              }
            }
          ]
        }
      ],
      "name": "StepScalingAction",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "ARN of the scaling policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-action.ts",
            "line": 73
          },
          "name": "scalingPolicyArn",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-applicationautoscaling.StepScalingActionProps": {
      "assembly": "@aws-cdk/aws-applicationautoscaling",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties for a scaling policy."
      },
      "fqn": "@aws-cdk/aws-applicationautoscaling.StepScalingActionProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/step-scaling-action.ts",
        "line": 8
      },
      "name": "StepScalingActionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The scalable target."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-action.ts",
            "line": 12
          },
          "name": "scalingTarget",
          "type": {
            "fqn": "@aws-cdk/aws-applicationautoscaling.IScalableTarget"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "ChangeInCapacity",
            "stability": "experimental",
            "summary": "How the adjustment numbers are interpreted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-action.ts",
            "line": 26
          },
          "name": "adjustmentType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-applicationautoscaling.AdjustmentType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No cooldown period",
            "remarks": "For scale out policies, multiple scale outs during the cooldown period are\nsquashed so that only the biggest scale out happens.\n\nFor scale in policies, subsequent scale ins during the cooldown period are\nignored.",
            "see": "https://docs.aws.amazon.com/autoscaling/application/APIReference/API_StepScalingPolicyConfiguration.html",
            "stability": "experimental",
            "summary": "Grace period after scaling activity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-action.ts",
            "line": 40
          },
          "name": "cooldownSec",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Average",
            "stability": "experimental",
            "summary": "The aggregation type for the CloudWatch metrics."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-action.ts",
            "line": 57
          },
          "name": "metricAggregationType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-applicationautoscaling.MetricAggregationType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No minimum scaling effect",
            "remarks": "Only when using AdjustmentType = PercentChangeInCapacity, this number controls\nthe minimum absolute effect size.",
            "stability": "experimental",
            "summary": "Minimum absolute number to adjust capacity with as result of percentage scaling."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-action.ts",
            "line": 50
          },
          "name": "minAdjustmentMagnitude",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Automatically generated name",
            "stability": "experimental",
            "summary": "A name for the scaling policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-action.ts",
            "line": 19
          },
          "name": "policyName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-applicationautoscaling.StepScalingPolicy": {
      "assembly": "@aws-cdk/aws-applicationautoscaling",
      "base": "@aws-cdk/cdk.Construct",
      "docs": {
        "remarks": "You can specify the scaling behavior for various values of the metric.\n\nImplemented using one or more CloudWatch alarms and Step Scaling Policies.",
        "stability": "experimental",
        "summary": "Define a acaling strategy which scales depending on absolute values of some metric."
      },
      "fqn": "@aws-cdk/aws-applicationautoscaling.StepScalingPolicy",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-applicationautoscaling.StepScalingPolicyProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/step-scaling-policy.ts",
        "line": 65
      },
      "name": "StepScalingPolicy",
      "properties": [
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-policy.ts",
            "line": 67
          },
          "name": "lowerAction",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-applicationautoscaling.StepScalingAction"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-policy.ts",
            "line": 66
          },
          "name": "lowerAlarm",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudwatch.Alarm"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-policy.ts",
            "line": 69
          },
          "name": "upperAction",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-applicationautoscaling.StepScalingAction"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-policy.ts",
            "line": 68
          },
          "name": "upperAlarm",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudwatch.Alarm"
          }
        }
      ]
    },
    "@aws-cdk/aws-applicationautoscaling.StepScalingPolicyProps": {
      "assembly": "@aws-cdk/aws-applicationautoscaling",
      "datatype": true,
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-applicationautoscaling.StepScalingPolicyProps",
      "interfaces": [
        "@aws-cdk/aws-applicationautoscaling.BasicStepScalingPolicyProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/step-scaling-policy.ts",
        "line": 51
      },
      "name": "StepScalingPolicyProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The scaling target."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-policy.ts",
            "line": 55
          },
          "name": "scalingTarget",
          "type": {
            "fqn": "@aws-cdk/aws-applicationautoscaling.IScalableTarget"
          }
        }
      ]
    },
    "@aws-cdk/aws-applicationautoscaling.TargetTrackingScalingPolicy": {
      "assembly": "@aws-cdk/aws-applicationautoscaling",
      "base": "@aws-cdk/cdk.Construct",
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-applicationautoscaling.TargetTrackingScalingPolicy",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-applicationautoscaling.TargetTrackingScalingPolicyProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/target-tracking-scaling-policy.ts",
        "line": 107
      },
      "name": "TargetTrackingScalingPolicy",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "ARN of the scaling policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/target-tracking-scaling-policy.ts",
            "line": 111
          },
          "name": "scalingPolicyArn",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-applicationautoscaling.TargetTrackingScalingPolicyProps": {
      "assembly": "@aws-cdk/aws-applicationautoscaling",
      "datatype": true,
      "docs": {
        "remarks": "Adds the scalingTarget.",
        "stability": "experimental",
        "summary": "Properties for a concrete TargetTrackingPolicy."
      },
      "fqn": "@aws-cdk/aws-applicationautoscaling.TargetTrackingScalingPolicyProps",
      "interfaces": [
        "@aws-cdk/aws-applicationautoscaling.BasicTargetTrackingScalingPolicyProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/target-tracking-scaling-policy.ts",
        "line": 100
      },
      "name": "TargetTrackingScalingPolicyProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/target-tracking-scaling-policy.ts",
            "line": 104
          },
          "name": "scalingTarget",
          "type": {
            "fqn": "@aws-cdk/aws-applicationautoscaling.IScalableTarget"
          }
        }
      ]
    },
    "@aws-cdk/aws-applicationautoscaling.TimeUnit": {
      "assembly": "@aws-cdk/aws-applicationautoscaling",
      "docs": {
        "stability": "experimental",
        "summary": "What unit to interpret the rate in."
      },
      "fqn": "@aws-cdk/aws-applicationautoscaling.TimeUnit",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/schedule.ts",
        "line": 62
      },
      "members": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "The rate is in minutes."
          },
          "name": "Minute"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The rate is in hours."
          },
          "name": "Hour"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The rate is in days."
          },
          "name": "Day"
        }
      ],
      "name": "TimeUnit"
    }
  },
  "version": "0.35.0",
  "fingerprint": "oRAp0RwEwmd0CDt8puncARun/kIho+f50PssKr7suBs="
}
