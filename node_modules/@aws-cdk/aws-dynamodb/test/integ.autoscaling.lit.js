"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const appscaling = require("@aws-cdk/aws-applicationautoscaling");
const cdk = require("@aws-cdk/cdk");
const dynamodb = require("../lib");
const app = new cdk.App();
const stack = new cdk.Stack(app, 'aws-cdk-dynamodb');
const table = new dynamodb.Table(stack, 'Table', {
    partitionKey: { name: 'hashKey', type: dynamodb.AttributeType.String }
});
/// !show
const readScaling = table.autoScaleReadCapacity({ minCapacity: 1, maxCapacity: 50 });
readScaling.scaleOnUtilization({
    targetUtilizationPercent: 50
});
readScaling.scaleOnSchedule('ScaleUpInTheMorning', {
    schedule: appscaling.Schedule.cron({ hour: '8', minute: '0' }),
    minCapacity: 20,
});
readScaling.scaleOnSchedule('ScaleDownAtNight', {
    schedule: appscaling.Schedule.cron({ hour: '20', minute: '0' }),
    maxCapacity: 20
});
/// !hide
app.synth();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW50ZWcuYXV0b3NjYWxpbmcubGl0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiaW50ZWcuYXV0b3NjYWxpbmcubGl0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsa0VBQW1FO0FBQ25FLG9DQUFxQztBQUNyQyxtQ0FBb0M7QUFFcEMsTUFBTSxHQUFHLEdBQUcsSUFBSSxHQUFHLENBQUMsR0FBRyxFQUFFLENBQUM7QUFDMUIsTUFBTSxLQUFLLEdBQUcsSUFBSSxHQUFHLENBQUMsS0FBSyxDQUFDLEdBQUcsRUFBRSxrQkFBa0IsQ0FBQyxDQUFDO0FBRXJELE1BQU0sS0FBSyxHQUFHLElBQUksUUFBUSxDQUFDLEtBQUssQ0FBQyxLQUFLLEVBQUUsT0FBTyxFQUFFO0lBQy9DLFlBQVksRUFBRSxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLFFBQVEsQ0FBQyxhQUFhLENBQUMsTUFBTSxFQUFFO0NBQ3ZFLENBQUMsQ0FBQztBQUVILFNBQVM7QUFDVCxNQUFNLFdBQVcsR0FBRyxLQUFLLENBQUMscUJBQXFCLENBQUMsRUFBRSxXQUFXLEVBQUUsQ0FBQyxFQUFFLFdBQVcsRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDO0FBRXJGLFdBQVcsQ0FBQyxrQkFBa0IsQ0FBQztJQUM3Qix3QkFBd0IsRUFBRSxFQUFFO0NBQzdCLENBQUMsQ0FBQztBQUVILFdBQVcsQ0FBQyxlQUFlLENBQUMscUJBQXFCLEVBQUU7SUFDakQsUUFBUSxFQUFFLFVBQVUsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEVBQUUsSUFBSSxFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsR0FBRyxFQUFFLENBQUM7SUFDOUQsV0FBVyxFQUFFLEVBQUU7Q0FDaEIsQ0FBQyxDQUFDO0FBRUgsV0FBVyxDQUFDLGVBQWUsQ0FBQyxrQkFBa0IsRUFBRTtJQUM5QyxRQUFRLEVBQUUsVUFBVSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxHQUFHLEVBQUUsQ0FBQztJQUMvRCxXQUFXLEVBQUUsRUFBRTtDQUNoQixDQUFDLENBQUM7QUFDSCxTQUFTO0FBRVQsR0FBRyxDQUFDLEtBQUssRUFBRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGFwcHNjYWxpbmcgPSByZXF1aXJlKCdAYXdzLWNkay9hd3MtYXBwbGljYXRpb25hdXRvc2NhbGluZycpO1xuaW1wb3J0IGNkayA9IHJlcXVpcmUoJ0Bhd3MtY2RrL2NkaycpO1xuaW1wb3J0IGR5bmFtb2RiID0gcmVxdWlyZSgnLi4vbGliJyk7XG5cbmNvbnN0IGFwcCA9IG5ldyBjZGsuQXBwKCk7XG5jb25zdCBzdGFjayA9IG5ldyBjZGsuU3RhY2soYXBwLCAnYXdzLWNkay1keW5hbW9kYicpO1xuXG5jb25zdCB0YWJsZSA9IG5ldyBkeW5hbW9kYi5UYWJsZShzdGFjaywgJ1RhYmxlJywge1xuICBwYXJ0aXRpb25LZXk6IHsgbmFtZTogJ2hhc2hLZXknLCB0eXBlOiBkeW5hbW9kYi5BdHRyaWJ1dGVUeXBlLlN0cmluZyB9XG59KTtcblxuLy8vICFzaG93XG5jb25zdCByZWFkU2NhbGluZyA9IHRhYmxlLmF1dG9TY2FsZVJlYWRDYXBhY2l0eSh7IG1pbkNhcGFjaXR5OiAxLCBtYXhDYXBhY2l0eTogNTAgfSk7XG5cbnJlYWRTY2FsaW5nLnNjYWxlT25VdGlsaXphdGlvbih7XG4gIHRhcmdldFV0aWxpemF0aW9uUGVyY2VudDogNTBcbn0pO1xuXG5yZWFkU2NhbGluZy5zY2FsZU9uU2NoZWR1bGUoJ1NjYWxlVXBJblRoZU1vcm5pbmcnLCB7XG4gIHNjaGVkdWxlOiBhcHBzY2FsaW5nLlNjaGVkdWxlLmNyb24oeyBob3VyOiAnOCcsIG1pbnV0ZTogJzAnIH0pLFxuICBtaW5DYXBhY2l0eTogMjAsXG59KTtcblxucmVhZFNjYWxpbmcuc2NhbGVPblNjaGVkdWxlKCdTY2FsZURvd25BdE5pZ2h0Jywge1xuICBzY2hlZHVsZTogYXBwc2NhbGluZy5TY2hlZHVsZS5jcm9uKHsgaG91cjogJzIwJywgbWludXRlOiAnMCcgfSksXG4gIG1heENhcGFjaXR5OiAyMFxufSk7XG4vLy8gIWhpZGVcblxuYXBwLnN5bnRoKCk7Il19