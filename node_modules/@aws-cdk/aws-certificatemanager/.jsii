{
  "author": {
    "name": "Amazon Web Services",
    "organization": true,
    "roles": [
      "author"
    ],
    "url": "https://aws.amazon.com"
  },
  "dependencies": {
    "@aws-cdk/aws-cloudformation": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.CloudFormation",
          "packageId": "Amazon.CDK.AWS.CloudFormation",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "cloudformation",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudformation"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudformation"
        },
        "python": {
          "distName": "aws-cdk.aws-cloudformation",
          "module": "aws_cdk.aws_cloudformation"
        }
      },
      "version": "0.35.0"
    },
    "@aws-cdk/aws-iam": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.IAM",
          "packageId": "Amazon.CDK.AWS.IAM",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "iam",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.iam"
        },
        "js": {
          "npm": "@aws-cdk/aws-iam"
        },
        "python": {
          "distName": "aws-cdk.aws-iam",
          "module": "aws_cdk.aws_iam"
        }
      },
      "version": "0.35.0"
    },
    "@aws-cdk/aws-lambda": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.Lambda",
          "packageId": "Amazon.CDK.AWS.Lambda",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "lambda",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.lambda"
        },
        "js": {
          "npm": "@aws-cdk/aws-lambda"
        },
        "python": {
          "distName": "aws-cdk.aws-lambda",
          "module": "aws_cdk.aws_lambda"
        }
      },
      "version": "0.35.0"
    },
    "@aws-cdk/aws-route53": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.Route53",
          "packageId": "Amazon.CDK.AWS.Route53",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "route53",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.route53"
        },
        "js": {
          "npm": "@aws-cdk/aws-route53"
        },
        "python": {
          "distName": "aws-cdk.aws-route53",
          "module": "aws_cdk.aws_route53"
        }
      },
      "version": "0.35.0"
    },
    "@aws-cdk/cdk": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "cdk",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk"
        },
        "js": {
          "npm": "@aws-cdk/cdk"
        },
        "python": {
          "distName": "aws-cdk.cdk",
          "module": "aws_cdk.cdk"
        }
      },
      "version": "0.35.0"
    }
  },
  "dependencyClosure": {
    "@aws-cdk/aws-cloudformation": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.CloudFormation",
          "packageId": "Amazon.CDK.AWS.CloudFormation",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "cloudformation",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudformation"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudformation"
        },
        "python": {
          "distName": "aws-cdk.aws-cloudformation",
          "module": "aws_cdk.aws_cloudformation"
        }
      },
      "version": "0.35.0"
    },
    "@aws-cdk/aws-cloudwatch": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.CloudWatch",
          "packageId": "Amazon.CDK.AWS.CloudWatch",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "cloudwatch",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudwatch"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudwatch"
        },
        "python": {
          "distName": "aws-cdk.aws-cloudwatch",
          "module": "aws_cdk.aws_cloudwatch"
        }
      },
      "version": "0.35.0"
    },
    "@aws-cdk/aws-ec2": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.EC2",
          "packageId": "Amazon.CDK.AWS.EC2",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "ec2",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ec2"
        },
        "js": {
          "npm": "@aws-cdk/aws-ec2"
        },
        "python": {
          "distName": "aws-cdk.aws-ec2",
          "module": "aws_cdk.aws_ec2"
        }
      },
      "version": "0.35.0"
    },
    "@aws-cdk/aws-events": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.Events",
          "packageId": "Amazon.CDK.AWS.Events",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "events",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.events"
        },
        "js": {
          "npm": "@aws-cdk/aws-events"
        },
        "python": {
          "distName": "aws-cdk.aws-events",
          "module": "aws_cdk.aws_events"
        }
      },
      "version": "0.35.0"
    },
    "@aws-cdk/aws-iam": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.IAM",
          "packageId": "Amazon.CDK.AWS.IAM",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "iam",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.iam"
        },
        "js": {
          "npm": "@aws-cdk/aws-iam"
        },
        "python": {
          "distName": "aws-cdk.aws-iam",
          "module": "aws_cdk.aws_iam"
        }
      },
      "version": "0.35.0"
    },
    "@aws-cdk/aws-lambda": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.Lambda",
          "packageId": "Amazon.CDK.AWS.Lambda",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "lambda",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.lambda"
        },
        "js": {
          "npm": "@aws-cdk/aws-lambda"
        },
        "python": {
          "distName": "aws-cdk.aws-lambda",
          "module": "aws_cdk.aws_lambda"
        }
      },
      "version": "0.35.0"
    },
    "@aws-cdk/aws-logs": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.Logs",
          "packageId": "Amazon.CDK.AWS.Logs",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "logs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.logs"
        },
        "js": {
          "npm": "@aws-cdk/aws-logs"
        },
        "python": {
          "distName": "aws-cdk.aws-logs",
          "module": "aws_cdk.aws_logs"
        }
      },
      "version": "0.35.0"
    },
    "@aws-cdk/aws-route53": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.Route53",
          "packageId": "Amazon.CDK.AWS.Route53",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "route53",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.route53"
        },
        "js": {
          "npm": "@aws-cdk/aws-route53"
        },
        "python": {
          "distName": "aws-cdk.aws-route53",
          "module": "aws_cdk.aws_route53"
        }
      },
      "version": "0.35.0"
    },
    "@aws-cdk/aws-s3": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.S3",
          "packageId": "Amazon.CDK.AWS.S3",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "s3",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3"
        },
        "python": {
          "distName": "aws-cdk.aws-s3",
          "module": "aws_cdk.aws_s3"
        }
      },
      "version": "0.35.0"
    },
    "@aws-cdk/aws-s3-assets": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.S3.Assets",
          "packageId": "Amazon.CDK.AWS.S3.Assets",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "s3-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3-assets"
        },
        "python": {
          "distName": "aws-cdk.aws-s3-assets",
          "module": "aws_cdk.aws_s3_assets"
        }
      },
      "version": "0.35.0"
    },
    "@aws-cdk/aws-sns": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.SNS",
          "packageId": "Amazon.CDK.AWS.SNS",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "sns",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sns"
        },
        "js": {
          "npm": "@aws-cdk/aws-sns"
        },
        "python": {
          "distName": "aws-cdk.aws-sns",
          "module": "aws_cdk.aws_sns"
        }
      },
      "version": "0.35.0"
    },
    "@aws-cdk/aws-sqs": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.SQS",
          "packageId": "Amazon.CDK.AWS.SQS",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "sqs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sqs"
        },
        "js": {
          "npm": "@aws-cdk/aws-sqs"
        },
        "python": {
          "distName": "aws-cdk.aws-sqs",
          "module": "aws_cdk.aws_sqs"
        }
      },
      "version": "0.35.0"
    },
    "@aws-cdk/cdk": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "cdk",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk"
        },
        "js": {
          "npm": "@aws-cdk/cdk"
        },
        "python": {
          "distName": "aws-cdk.cdk",
          "module": "aws_cdk.cdk"
        }
      },
      "version": "0.35.0"
    },
    "@aws-cdk/cx-api": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.CXAPI",
          "packageId": "Amazon.CDK.CXAPI",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cx-api",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cxapi"
        },
        "js": {
          "npm": "@aws-cdk/cx-api"
        },
        "python": {
          "distName": "aws-cdk.cx-api",
          "module": "aws_cdk.cx_api"
        }
      },
      "version": "0.35.0"
    },
    "@aws-cdk/region-info": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.RegionInfo",
          "packageId": "Amazon.CDK.RegionInfo",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "cdk-region-info",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.regioninfo"
        },
        "js": {
          "npm": "@aws-cdk/region-info"
        },
        "python": {
          "distName": "aws-cdk.region-info",
          "module": "aws_cdk.region_info"
        }
      },
      "version": "0.35.0"
    }
  },
  "description": "The CDK Construct Library for AWS::CertificateManager",
  "docs": {
    "stability": "experimental"
  },
  "homepage": "https://github.com/awslabs/aws-cdk",
  "jsiiVersion": "0.11.3 (build 464b8c6)",
  "license": "Apache-2.0",
  "metadata": {
    "awsdocs:title": "Amazon Certificate Manager"
  },
  "name": "@aws-cdk/aws-certificatemanager",
  "readme": {
    "markdown": "## Amazon Certificate Manager Construct Library\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Stability: Experimental](https://img.shields.io/badge/stability-Experimental-important.svg?style=for-the-badge)\n\n> **This is a _developer preview_ (public beta) module. Releases might lack important features and might have\n> future breaking changes.**\n>\n> This API is still under active development and subject to non-backward\n> compatible changes or removal in any future version. Use of the API is not recommended in production\n> environments. Experimental APIs are not subject to the Semantic Versioning model.\n\n---\n<!--END STABILITY BANNER-->\n\nThis package provides Constructs for provisioning and referencing certificates which\ncan be used in CloudFront and ELB.\n\n### DNS-validated certificates\n\nThe `DnsValidatedCertificateRequest` class provides a Custom Resource by which\nyou can request a TLS certificate from AWS Certificate Manager that is\nautomatically validated using a cryptographically secure DNS record. For this to\nwork, there must be a Route 53 public zone that is responsible for serving\nrecords under the Domain Name of the requested certificate. For example, if you\nrequest a certificate for `www.example.com`, there must be a Route 53 public\nzone `example.com` that provides authoritative records for the domain.\n\n#### Example\n\n```ts\nimport { HostedZoneProvider } from '@aws-cdk/aws-route53';\nimport { DnsValidatedCertificate } from '@aws-cdk/aws-certificatemanager';\n\nconst hostedZone = new HostedZoneProvider(this, {\n    domainName: 'example.com',\n    privateZone: false\n}).findAndImport(this, 'ExampleDotCom');\n\nconst certificate = new DnsValidatedCertificate(this, 'TestCertificate', {\n    domainName: 'test.example.com',\n    hostedZone: hostedZone\n});\n```\n\n### Email validation\n\nOtherwise, if certificates are created as part of a CloudFormation run, the\nCloudFormation provisioning will not complete until domain ownership for the\ncertificate is completed. For email validation, this involves receiving an\nemail on one of a number of predefined domains and following the instructions\nin the email. The email addresses use will be:\n\n* admin@domain.com\n* administrator@domain.com\n* hostmaster@domain.com\n* postmaster@domain.com\n* webmaster@domain.com\n\nBecause of these blocks, it's probably better to provision your certificates either in a separate\nstack from your main service, or provision them manually. In both cases, you'll import the\ncertificate into your stack afterwards.\n\n#### Example\n\nProvision a new certificate by creating an instance of `Certificate`. Email validation will be sent\nto `example.com`:\n\n```ts\nconst certificate = new Certificate(this, 'Certificate', {\n    domainName: 'test.example.com'\n});\n```\n\n### Importing\n\nImport a certificate manually, if you know the ARN:\n\n```ts\nconst certificate = Certificate.import(this, 'Certificate', {\n    certificateArn: \"arn:aws:...\"\n});\n```\n\n### Sharing between Stacks\n\nTo share the certificate between stacks in the same CDK application, simply\npass the `Certificate` object between the stacks.\n\n\n## TODO\n\n- [ ] Custom Resource that can look up the certificate ARN by domain name by querying ACM.\n"
  },
  "repository": {
    "directory": "packages/@aws-cdk/aws-certificatemanager",
    "type": "git",
    "url": "https://github.com/awslabs/aws-cdk.git"
  },
  "schema": "jsii/0.10.0",
  "targets": {
    "dotnet": {
      "assemblyOriginatorKeyFile": "../../key.snk",
      "namespace": "Amazon.CDK.AWS.CertificateManager",
      "packageId": "Amazon.CDK.AWS.CertificateManager",
      "signAssembly": true
    },
    "java": {
      "maven": {
        "artifactId": "certificatemanager",
        "groupId": "software.amazon.awscdk"
      },
      "package": "software.amazon.awscdk.services.certificatemanager"
    },
    "js": {
      "npm": "@aws-cdk/aws-certificatemanager"
    },
    "python": {
      "distName": "aws-cdk.aws-certificatemanager",
      "module": "aws_cdk.aws_certificatemanager"
    }
  },
  "types": {
    "@aws-cdk/aws-certificatemanager.Certificate": {
      "assembly": "@aws-cdk/aws-certificatemanager",
      "base": "@aws-cdk/cdk.Resource",
      "docs": {
        "remarks": "IMPORTANT: if you are creating a certificate as part of your stack, the stack\nwill not complete creating until you read and follow the instructions in the\nemail that you will receive.\n\nACM will send validation emails to the following addresses:\n\n  admin@domain.com\n  administrator@domain.com\n  hostmaster@domain.com\n  postmaster@domain.com\n  webmaster@domain.com\n\nFor every domain that you register.",
        "stability": "experimental",
        "summary": "A certificate managed by AWS Certificate Manager."
      },
      "fqn": "@aws-cdk/aws-certificatemanager.Certificate",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-certificatemanager.CertificateProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-certificatemanager.ICertificate"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/certificate.ts",
        "line": 61
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Import a certificate."
          },
          "locationInModule": {
            "filename": "lib/certificate.ts",
            "line": 66
          },
          "name": "fromCertificateArn",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/cdk.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "certificateArn",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-certificatemanager.ICertificate"
            }
          },
          "static": true
        }
      ],
      "name": "Certificate",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "The certificate's ARN."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/certificate.ts",
            "line": 77
          },
          "name": "certificateArn",
          "overrides": "@aws-cdk/aws-certificatemanager.ICertificate",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-certificatemanager.CertificateProps": {
      "assembly": "@aws-cdk/aws-certificatemanager",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties for your certificate."
      },
      "fqn": "@aws-cdk/aws-certificatemanager.CertificateProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/certificate.ts",
        "line": 17
      },
      "name": "CertificateProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "May contain wildcards, such as ``*.domain.com``.",
            "stability": "experimental",
            "summary": "Fully-qualified domain name to request a certificate for."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/certificate.ts",
            "line": 23
          },
          "name": "domainName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No additional FQDNs will be included as alternative domain names.",
            "remarks": "Use this to register alternative domain names that represent the same site.",
            "stability": "experimental",
            "summary": "Alternative domain names on your certificate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/certificate.ts",
            "line": 32
          },
          "name": "subjectAlternativeNames",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Apex domain is used for every domain that's not overridden.",
            "remarks": "Has to be a superdomain of the requested domain.",
            "stability": "experimental",
            "summary": "What validation domain to use for every requested domain."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/certificate.ts",
            "line": 41
          },
          "name": "validationDomains",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-certificatemanager.CfnCertificate": {
      "assembly": "@aws-cdk/aws-certificatemanager",
      "base": "@aws-cdk/cdk.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::CertificateManager::Certificate"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-certificatemanager-certificate.html",
        "stability": "experimental",
        "summary": "A CloudFormation `AWS::CertificateManager::Certificate`."
      },
      "fqn": "@aws-cdk/aws-certificatemanager.CfnCertificate",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Create a new `AWS::CertificateManager::Certificate`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-certificatemanager.CfnCertificateProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/certificatemanager.generated.ts",
        "line": 92
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/certificatemanager.generated.ts",
            "line": 155
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnCertificate",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/certificatemanager.generated.ts",
            "line": 96
          },
          "name": "cfnResourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/certificatemanager.generated.ts",
            "line": 146
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/cdk.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-certificatemanager-certificate.html#cfn-certificatemanager-certificate-tags",
            "stability": "experimental",
            "summary": "`AWS::CertificateManager::Certificate.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/certificatemanager.generated.ts",
            "line": 120
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/cdk.TagManager"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-certificatemanager-certificate.html#cfn-certificatemanager-certificate-domainname",
            "stability": "experimental",
            "summary": "`AWS::CertificateManager::Certificate.DomainName`."
          },
          "locationInModule": {
            "filename": "lib/certificatemanager.generated.ts",
            "line": 102
          },
          "name": "domainName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-certificatemanager-certificate.html#cfn-certificatemanager-certificate-domainvalidationoptions",
            "stability": "experimental",
            "summary": "`AWS::CertificateManager::Certificate.DomainValidationOptions`."
          },
          "locationInModule": {
            "filename": "lib/certificatemanager.generated.ts",
            "line": 108
          },
          "name": "domainValidationOptions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/aws-certificatemanager.CfnCertificate.DomainValidationOptionProperty"
                          },
                          {
                            "fqn": "@aws-cdk/cdk.IResolvable"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-certificatemanager-certificate.html#cfn-certificatemanager-certificate-subjectalternativenames",
            "stability": "experimental",
            "summary": "`AWS::CertificateManager::Certificate.SubjectAlternativeNames`."
          },
          "locationInModule": {
            "filename": "lib/certificatemanager.generated.ts",
            "line": 114
          },
          "name": "subjectAlternativeNames",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-certificatemanager-certificate.html#cfn-certificatemanager-certificate-validationmethod",
            "stability": "experimental",
            "summary": "`AWS::CertificateManager::Certificate.ValidationMethod`."
          },
          "locationInModule": {
            "filename": "lib/certificatemanager.generated.ts",
            "line": 126
          },
          "name": "validationMethod",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-certificatemanager.CfnCertificate.DomainValidationOptionProperty": {
      "assembly": "@aws-cdk/aws-certificatemanager",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-certificatemanager-certificate-domainvalidationoption.html",
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-certificatemanager.CfnCertificate.DomainValidationOptionProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/certificatemanager.generated.ts",
        "line": 164
      },
      "name": "DomainValidationOptionProperty",
      "namespace": "CfnCertificate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-certificatemanager-certificate-domainvalidationoption.html#cfn-certificatemanager-certificate-domainvalidationoptions-domainname",
            "stability": "experimental",
            "summary": "`CfnCertificate.DomainValidationOptionProperty.DomainName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/certificatemanager.generated.ts",
            "line": 169
          },
          "name": "domainName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-certificatemanager-certificate-domainvalidationoption.html#cfn-certificatemanager-certificate-domainvalidationoption-validationdomain",
            "stability": "experimental",
            "summary": "`CfnCertificate.DomainValidationOptionProperty.ValidationDomain`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/certificatemanager.generated.ts",
            "line": 174
          },
          "name": "validationDomain",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-certificatemanager.CfnCertificateProps": {
      "assembly": "@aws-cdk/aws-certificatemanager",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-certificatemanager-certificate.html",
        "stability": "experimental",
        "summary": "Properties for defining a `AWS::CertificateManager::Certificate`."
      },
      "fqn": "@aws-cdk/aws-certificatemanager.CfnCertificateProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/certificatemanager.generated.ts",
        "line": 14
      },
      "name": "CfnCertificateProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-certificatemanager-certificate.html#cfn-certificatemanager-certificate-domainname",
            "stability": "experimental",
            "summary": "`AWS::CertificateManager::Certificate.DomainName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/certificatemanager.generated.ts",
            "line": 20
          },
          "name": "domainName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-certificatemanager-certificate.html#cfn-certificatemanager-certificate-domainvalidationoptions",
            "stability": "experimental",
            "summary": "`AWS::CertificateManager::Certificate.DomainValidationOptions`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/certificatemanager.generated.ts",
            "line": 26
          },
          "name": "domainValidationOptions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/aws-certificatemanager.CfnCertificate.DomainValidationOptionProperty"
                          },
                          {
                            "fqn": "@aws-cdk/cdk.IResolvable"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-certificatemanager-certificate.html#cfn-certificatemanager-certificate-subjectalternativenames",
            "stability": "experimental",
            "summary": "`AWS::CertificateManager::Certificate.SubjectAlternativeNames`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/certificatemanager.generated.ts",
            "line": 32
          },
          "name": "subjectAlternativeNames",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-certificatemanager-certificate.html#cfn-certificatemanager-certificate-tags",
            "stability": "experimental",
            "summary": "`AWS::CertificateManager::Certificate.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/certificatemanager.generated.ts",
            "line": 38
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cdk.CfnTag"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-certificatemanager-certificate.html#cfn-certificatemanager-certificate-validationmethod",
            "stability": "experimental",
            "summary": "`AWS::CertificateManager::Certificate.ValidationMethod`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/certificatemanager.generated.ts",
            "line": 44
          },
          "name": "validationMethod",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-certificatemanager.DnsValidatedCertificate": {
      "assembly": "@aws-cdk/aws-certificatemanager",
      "base": "@aws-cdk/cdk.Resource",
      "docs": {
        "custom": {
          "resource": "AWS::CertificateManager::Certificate"
        },
        "remarks": "Will be automatically\nvalidated using DNS validation against the specified Route 53 hosted zone.",
        "stability": "experimental",
        "summary": "A certificate managed by AWS Certificate Manager."
      },
      "fqn": "@aws-cdk/aws-certificatemanager.DnsValidatedCertificate",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-certificatemanager.DnsValidatedCertificateProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-certificatemanager.ICertificate"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/dns-validated-certificate.ts",
        "line": 31
      },
      "methods": [
        {
          "docs": {
            "remarks": "This method can be implemented by derived constructs in order to perform\nvalidation logic. It is called on all constructs before synthesis.",
            "stability": "experimental",
            "summary": "Validate the current construct."
          },
          "locationInModule": {
            "filename": "lib/dns-validated-certificate.ts",
            "line": 82
          },
          "name": "validate",
          "overrides": "@aws-cdk/cdk.Construct",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "DnsValidatedCertificate",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "The certificate's ARN."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/dns-validated-certificate.ts",
            "line": 32
          },
          "name": "certificateArn",
          "overrides": "@aws-cdk/aws-certificatemanager.ICertificate",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-certificatemanager.DnsValidatedCertificateProps": {
      "assembly": "@aws-cdk/aws-certificatemanager",
      "datatype": true,
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-certificatemanager.DnsValidatedCertificateProps",
      "interfaces": [
        "@aws-cdk/aws-certificatemanager.CertificateProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/dns-validated-certificate.ts",
        "line": 9
      },
      "name": "DnsValidatedCertificateProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "The zone\nmust be authoritative for the domain name specified in the Certificate Request.",
            "stability": "experimental",
            "summary": "Route 53 Hosted Zone used to perform DNS validation of the request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/dns-validated-certificate.ts",
            "line": 14
          },
          "name": "hostedZone",
          "type": {
            "fqn": "@aws-cdk/aws-route53.IHostedZone"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "the region the stack is deployed in.",
            "remarks": "This is needed especially\nfor certificates used for CloudFront distributions, which require the region\nto be us-east-1.",
            "stability": "experimental",
            "summary": "AWS region that will host the certificate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/dns-validated-certificate.ts",
            "line": 22
          },
          "name": "region",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-certificatemanager.ICertificate": {
      "assembly": "@aws-cdk/aws-certificatemanager",
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-certificatemanager.ICertificate",
      "interfaces": [
        "@aws-cdk/cdk.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/certificate.ts",
        "line": 5
      },
      "name": "ICertificate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The certificate's ARN."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/certificate.ts",
            "line": 11
          },
          "name": "certificateArn",
          "type": {
            "primitive": "string"
          }
        }
      ]
    }
  },
  "version": "0.35.0",
  "fingerprint": "xiCutkRM931nB5ubvG+qnRUtLcfzpRTlmvSJwcecvnU="
}
